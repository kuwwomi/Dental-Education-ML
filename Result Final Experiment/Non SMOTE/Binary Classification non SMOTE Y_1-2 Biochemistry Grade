{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1_o0r71gneqiekA1Nf9lxRFPz5IvTntIX","timestamp":1719042188331},{"file_id":"1m2xfzAhGIhD4a0s758jSkXHKbhQLMMXj","timestamp":1703519621175}],"toc_visible":true,"authorship_tag":"ABX9TyNvn9lfVrB+drqgVH/XACLB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"cEyCwmiNaNiP","executionInfo":{"status":"ok","timestamp":1723685779468,"user_tz":-420,"elapsed":4136,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import os\n","import seaborn as sns"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2M2ZIDqbaVSX","executionInfo":{"status":"ok","timestamp":1723685810157,"user_tz":-420,"elapsed":30694,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"f4037072-43fe-409e-eddb-3dfcff3200ed"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df = pd.read_excel('/content/drive/MyDrive/Trek AI/Y1-DATA.xlsx')"],"metadata":{"id":"0sdc470IaXwd","executionInfo":{"status":"ok","timestamp":1723685810909,"user_tz":-420,"elapsed":757,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Kolom yang akan digunakan untuk klasifikasi\n","grading_columns = ['ANATOMY MARK', 'BIOCHEMISTRY MARK', 'ORAL BIOLOGY MARK', 'PHYSIOLOGY MARK']\n","\n","# Fungsi untuk mengklasifikasikan nilai menjadi kategori\n","def classify_grades(score):\n","    # Mengonversi nilai ke tipe data numerik jika belum\n","    try:\n","        score = float(score)\n","    except ValueError:\n","        return 'Invalid Score'  # Atau tindakan yang sesuai jika nilai tidak dapat dikonversi\n","\n","    if score >= 75:\n","        return 'A'\n","    elif 60 <= score < 75:\n","        return 'B'\n","    elif 50 <= score < 60:\n","        return 'C'\n","    else:\n","        return 'F'\n","\n","# Iterasi melalui kolom-kolom yang akan dijadikan dasar klasifikasi\n","for column in grading_columns:\n","    # Membuat kolom baru dengan nama yang dihasilkan dari kolom asli ditambah '_GRADE'\n","    new_column_name = column + '_GRADE'\n","    df[new_column_name] = df[column].apply(classify_grades)\n","\n","# Tampilkan DataFrame yang sudah dimodifikasi\n","print(df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HL0Shr-Aa0c-","executionInfo":{"status":"ok","timestamp":1723685810909,"user_tz":-420,"elapsed":6,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"3d8e31bd-c146-455e-aa04-cba9df34a32e"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["     LAST DIGIT MATRIC NO.  GENDER  AGE DURING ADMISSION          DISTRICT  \\\n","0                        8  FEMALE                    21        KOTA BHARU   \n","1                        6  FEMALE                    20            BACHOK   \n","2                        6  FEMALE                    20          JERANTUT   \n","3                        4  FEMALE                    20           PUCHONG   \n","4                        6  FEMALE                    20            KAJANG   \n","..                     ...     ...                   ...               ...   \n","253                      5    MALE                    20  KUALA TERENGGANU   \n","254                      4  FEMALE                    20              IPOH   \n","255                      4  FEMALE                    20              MUAR   \n","256                      2  FEMALE                    20           MACHANG   \n","257                      4  FEMALE                    19  KUALA TERENGGANU   \n","\n","    POSCODE       STATE   COUNTRY PRE-UNIVERSITY  TOTAL_SEM  AVERAGE_CGPA  \\\n","0     43000    SELANGOR  MALAYSIA       CFS IIUM          4        3.4825   \n","1     16370    KELANTAN  MALAYSIA       CFS IIUM          5        3.6980   \n","2     27020      PAHANG  MALAYSIA       CFS IIUM          5        3.4600   \n","3     47100    SELANGOR  MALAYSIA       CFS IIUM          5        3.6820   \n","4     43000    SELANGOR  MALAYSIA       CFS IIUM          5        3.5260   \n","..      ...         ...       ...            ...        ...           ...   \n","253   21000  TERENGGANU  MALAYSIA       CFS IIUM          5        3.8400   \n","254   30020       PERAK  MALAYSIA       CFS IIUM          5        3.8200   \n","255   84000       JOHOR  MALAYSIA       CFS IIUM          5        4.0000   \n","256   18500    KELANTAN  MALAYSIA       CFS IIUM          5        3.5100   \n","257   20500  TERENGGANU  MALAYSIA       CFS IIUM          3        3.6800   \n","\n","     ...  BIOCHEMISTRY MARK  BIOCHEMISTRY STATUS ORAL BIOLOGY MARK  \\\n","0    ...          55.284524                 PASS         58.302945   \n","1    ...          62.114583                 PASS         60.107566   \n","2    ...          60.903274                 PASS         59.020379   \n","3    ...          64.593452                 PASS         64.716259   \n","4    ...          64.093750                 PASS         55.045943   \n","..   ...                ...                  ...               ...   \n","253  ...          52.387255                 PASS         59.126839   \n","254  ...          41.446078                 FAIL         50.000000   \n","255  ...          75.152941                 PASS         76.294515   \n","256  ...          41.468627                 FAIL         49.649525   \n","257  ...          57.869608                 PASS         65.866634   \n","\n","     ORAL BIOLOGY STATUS               Batch  REPEAT PAPER ANATOMY MARK_GRADE  \\\n","0                   PASS  batch1213_combined            NO                  C   \n","1                   PASS  batch1213_combined            NO                  C   \n","2                   PASS  batch1213_combined            NO                  C   \n","3                   PASS  batch1213_combined            NO                  C   \n","4                   PASS  batch1213_combined            NO                  B   \n","..                   ...                 ...           ...                ...   \n","253                 PASS  batch1617_combined            NO                  C   \n","254                 PASS  batch1617_combined           YES                  F   \n","255                 PASS  batch1617_combined            NO                  A   \n","256                 PASS  batch1617_combined           YES                  C   \n","257                 PASS  batch1617_combined            NO                  C   \n","\n","     BIOCHEMISTRY MARK_GRADE ORAL BIOLOGY MARK_GRADE PHYSIOLOGY MARK_GRADE  \n","0                          C                       C                     C  \n","1                          B                       B                     C  \n","2                          B                       C                     C  \n","3                          B                       B                     B  \n","4                          B                       C                     C  \n","..                       ...                     ...                   ...  \n","253                        C                       C                     C  \n","254                        F                       C                     C  \n","255                        A                       A                     A  \n","256                        F                       F                     C  \n","257                        C                       B                     C  \n","\n","[258 rows x 25 columns]\n"]}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x4ts6Jw8p5Xa","executionInfo":{"status":"ok","timestamp":1723685811716,"user_tz":-420,"elapsed":812,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"12fa563c-24b8-4e93-f647-aab39cf1aace"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['LAST DIGIT MATRIC NO.', 'GENDER', 'AGE DURING ADMISSION', 'DISTRICT',\n","       'POSCODE', 'STATE', 'COUNTRY', 'PRE-UNIVERSITY', 'TOTAL_SEM',\n","       'AVERAGE_CGPA', 'FINAL_CGPA', 'ANATOMY MARK', 'ANATOMY STATUS',\n","       'PHYSIOLOGY MARK', 'PHYSIOLOGY STATUS', 'BIOCHEMISTRY MARK',\n","       'BIOCHEMISTRY STATUS', 'ORAL BIOLOGY MARK', 'ORAL BIOLOGY STATUS',\n","       'Batch', 'REPEAT PAPER', 'ANATOMY MARK_GRADE',\n","       'BIOCHEMISTRY MARK_GRADE', 'ORAL BIOLOGY MARK_GRADE',\n","       'PHYSIOLOGY MARK_GRADE'],\n","      dtype='object')"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df = df.drop(['LAST DIGIT MATRIC NO.', 'GENDER', 'DISTRICT',\n","       'POSCODE', 'STATE', 'COUNTRY', 'PRE-UNIVERSITY',\n","       'Batch', 'REPEAT PAPER'], axis=1)"],"metadata":{"id":"CvkejcbdbmeU","executionInfo":{"status":"ok","timestamp":1723685811716,"user_tz":-420,"elapsed":17,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"DlrihyIibC1T","executionInfo":{"status":"ok","timestamp":1723685811716,"user_tz":-420,"elapsed":16,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"3560feca-429a-4168-ddc2-0e9d47ee018e"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   AGE DURING ADMISSION  TOTAL_SEM  AVERAGE_CGPA  FINAL_CGPA  ANATOMY MARK  \\\n","0                    21          4        3.4825        3.63     58.161454   \n","1                    20          5        3.6980        3.72     55.161680   \n","2                    20          5        3.4600        3.60     58.373968   \n","3                    20          5        3.6820        3.79     57.654371   \n","4                    20          5        3.5260        3.68     60.177680   \n","\n","  ANATOMY STATUS  PHYSIOLOGY MARK PHYSIOLOGY STATUS  BIOCHEMISTRY MARK  \\\n","0           PASS        51.039792              PASS          55.284524   \n","1           PASS        52.462391              PASS          62.114583   \n","2           PASS        52.121739              PASS          60.903274   \n","3           PASS        62.147088              PASS          64.593452   \n","4           PASS        50.683109              PASS          64.093750   \n","\n","  BIOCHEMISTRY STATUS  ORAL BIOLOGY MARK ORAL BIOLOGY STATUS  \\\n","0                PASS          58.302945                PASS   \n","1                PASS          60.107566                PASS   \n","2                PASS          59.020379                PASS   \n","3                PASS          64.716259                PASS   \n","4                PASS          55.045943                PASS   \n","\n","  ANATOMY MARK_GRADE BIOCHEMISTRY MARK_GRADE ORAL BIOLOGY MARK_GRADE  \\\n","0                  C                       C                       C   \n","1                  C                       B                       B   \n","2                  C                       B                       C   \n","3                  C                       B                       B   \n","4                  B                       B                       C   \n","\n","  PHYSIOLOGY MARK_GRADE  \n","0                     C  \n","1                     C  \n","2                     C  \n","3                     B  \n","4                     C  "],"text/html":["\n","  <div id=\"df-9fd9c6e2-9d6a-41ef-af82-827d9e1da419\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AGE DURING ADMISSION</th>\n","      <th>TOTAL_SEM</th>\n","      <th>AVERAGE_CGPA</th>\n","      <th>FINAL_CGPA</th>\n","      <th>ANATOMY MARK</th>\n","      <th>ANATOMY STATUS</th>\n","      <th>PHYSIOLOGY MARK</th>\n","      <th>PHYSIOLOGY STATUS</th>\n","      <th>BIOCHEMISTRY MARK</th>\n","      <th>BIOCHEMISTRY STATUS</th>\n","      <th>ORAL BIOLOGY MARK</th>\n","      <th>ORAL BIOLOGY STATUS</th>\n","      <th>ANATOMY MARK_GRADE</th>\n","      <th>BIOCHEMISTRY MARK_GRADE</th>\n","      <th>ORAL BIOLOGY MARK_GRADE</th>\n","      <th>PHYSIOLOGY MARK_GRADE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>21</td>\n","      <td>4</td>\n","      <td>3.4825</td>\n","      <td>3.63</td>\n","      <td>58.161454</td>\n","      <td>PASS</td>\n","      <td>51.039792</td>\n","      <td>PASS</td>\n","      <td>55.284524</td>\n","      <td>PASS</td>\n","      <td>58.302945</td>\n","      <td>PASS</td>\n","      <td>C</td>\n","      <td>C</td>\n","      <td>C</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>5</td>\n","      <td>3.6980</td>\n","      <td>3.72</td>\n","      <td>55.161680</td>\n","      <td>PASS</td>\n","      <td>52.462391</td>\n","      <td>PASS</td>\n","      <td>62.114583</td>\n","      <td>PASS</td>\n","      <td>60.107566</td>\n","      <td>PASS</td>\n","      <td>C</td>\n","      <td>B</td>\n","      <td>B</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>5</td>\n","      <td>3.4600</td>\n","      <td>3.60</td>\n","      <td>58.373968</td>\n","      <td>PASS</td>\n","      <td>52.121739</td>\n","      <td>PASS</td>\n","      <td>60.903274</td>\n","      <td>PASS</td>\n","      <td>59.020379</td>\n","      <td>PASS</td>\n","      <td>C</td>\n","      <td>B</td>\n","      <td>C</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20</td>\n","      <td>5</td>\n","      <td>3.6820</td>\n","      <td>3.79</td>\n","      <td>57.654371</td>\n","      <td>PASS</td>\n","      <td>62.147088</td>\n","      <td>PASS</td>\n","      <td>64.593452</td>\n","      <td>PASS</td>\n","      <td>64.716259</td>\n","      <td>PASS</td>\n","      <td>C</td>\n","      <td>B</td>\n","      <td>B</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20</td>\n","      <td>5</td>\n","      <td>3.5260</td>\n","      <td>3.68</td>\n","      <td>60.177680</td>\n","      <td>PASS</td>\n","      <td>50.683109</td>\n","      <td>PASS</td>\n","      <td>64.093750</td>\n","      <td>PASS</td>\n","      <td>55.045943</td>\n","      <td>PASS</td>\n","      <td>B</td>\n","      <td>B</td>\n","      <td>C</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fd9c6e2-9d6a-41ef-af82-827d9e1da419')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9fd9c6e2-9d6a-41ef-af82-827d9e1da419 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9fd9c6e2-9d6a-41ef-af82-827d9e1da419');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-59d2bcfd-a8d0-4f69-a5f4-c6fdde1226ce\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59d2bcfd-a8d0-4f69-a5f4-c6fdde1226ce')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-59d2bcfd-a8d0-4f69-a5f4-c6fdde1226ce button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 258,\n  \"fields\": [\n    {\n      \"column\": \"AGE DURING ADMISSION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 19,\n        \"max\": 22,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          20,\n          22,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TOTAL_SEM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 3,\n        \"max\": 6,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          6,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AVERAGE_CGPA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16120460145302498,\n        \"min\": 3.226,\n        \"max\": 4.0,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          3.97,\n          3.7625,\n          3.535\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FINAL_CGPA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13692068783216182,\n        \"min\": 3.41,\n        \"max\": 4.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          3.49,\n          3.87,\n          3.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANATOMY MARK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.871515597388818,\n        \"min\": 33.12862745098039,\n        \"max\": 87.97422385620916,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          67.03752721661056,\n          70.25720398428732,\n          52.67818627450981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANATOMY STATUS\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"PASS\",\n          \"DISTINCTION\",\n          \"FAIL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PHYSIOLOGY MARK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.60450994009758,\n        \"min\": 31.03333333333333,\n        \"max\": 85.0,\n        \"num_unique_values\": 246,\n        \"samples\": [\n          44.20285573122529,\n          70.8730467720685,\n          71.69813596491228\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PHYSIOLOGY STATUS\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"PASS\",\n          \"FAIL\",\n          \"DISTINCTION\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BIOCHEMISTRY MARK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.94383967901665,\n        \"min\": 41.44607843137255,\n        \"max\": 85.0,\n        \"num_unique_values\": 237,\n        \"samples\": [\n          58.75833333333334,\n          60.39077380952381,\n          54.24313725490196\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BIOCHEMISTRY STATUS\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"PASS\",\n          \"DISTINCTION\",\n          \"FAIL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ORAL BIOLOGY MARK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.017210601903688,\n        \"min\": 37.04632177033493,\n        \"max\": 85.0,\n        \"num_unique_values\": 245,\n        \"samples\": [\n          80.0,\n          68.18406954887217,\n          63.96791267942583\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ORAL BIOLOGY STATUS\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"PASS\",\n          \"DISTINCTION\",\n          \"FAIL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANATOMY MARK_GRADE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"B\",\n          \"A\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BIOCHEMISTRY MARK_GRADE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"B\",\n          \"F\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ORAL BIOLOGY MARK_GRADE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"B\",\n          \"F\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PHYSIOLOGY MARK_GRADE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"B\",\n          \"A\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CBDVuVOtbMH3","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":16,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"da84242a-098f-4900-d794-03f4f9eed860"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 258 entries, 0 to 257\n","Data columns (total 16 columns):\n"," #   Column                   Non-Null Count  Dtype  \n","---  ------                   --------------  -----  \n"," 0   AGE DURING ADMISSION     258 non-null    int64  \n"," 1   TOTAL_SEM                258 non-null    int64  \n"," 2   AVERAGE_CGPA             258 non-null    float64\n"," 3   FINAL_CGPA               258 non-null    float64\n"," 4   ANATOMY MARK             258 non-null    float64\n"," 5   ANATOMY STATUS           258 non-null    object \n"," 6   PHYSIOLOGY MARK          258 non-null    float64\n"," 7   PHYSIOLOGY STATUS        258 non-null    object \n"," 8   BIOCHEMISTRY MARK        258 non-null    float64\n"," 9   BIOCHEMISTRY STATUS      258 non-null    object \n"," 10  ORAL BIOLOGY MARK        258 non-null    float64\n"," 11  ORAL BIOLOGY STATUS      258 non-null    object \n"," 12  ANATOMY MARK_GRADE       258 non-null    object \n"," 13  BIOCHEMISTRY MARK_GRADE  258 non-null    object \n"," 14  ORAL BIOLOGY MARK_GRADE  258 non-null    object \n"," 15  PHYSIOLOGY MARK_GRADE    258 non-null    object \n","dtypes: float64(6), int64(2), object(8)\n","memory usage: 32.4+ KB\n"]}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"37wLQsgJqKlk","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":15,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"5bbb5c1d-94dd-411b-a165-ffe0dc59aeed"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['AGE DURING ADMISSION', 'TOTAL_SEM', 'AVERAGE_CGPA', 'FINAL_CGPA',\n","       'ANATOMY MARK', 'ANATOMY STATUS', 'PHYSIOLOGY MARK',\n","       'PHYSIOLOGY STATUS', 'BIOCHEMISTRY MARK', 'BIOCHEMISTRY STATUS',\n","       'ORAL BIOLOGY MARK', 'ORAL BIOLOGY STATUS', 'ANATOMY MARK_GRADE',\n","       'BIOCHEMISTRY MARK_GRADE', 'ORAL BIOLOGY MARK_GRADE',\n","       'PHYSIOLOGY MARK_GRADE'],\n","      dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["x = df.drop(['ANATOMY MARK', 'ANATOMY STATUS', 'PHYSIOLOGY MARK',\n","       'PHYSIOLOGY STATUS', 'BIOCHEMISTRY MARK', 'BIOCHEMISTRY STATUS',\n","       'ORAL BIOLOGY MARK', 'ORAL BIOLOGY STATUS', 'ANATOMY MARK_GRADE',\n","       'BIOCHEMISTRY MARK_GRADE', 'ORAL BIOLOGY MARK_GRADE',\n","       'PHYSIOLOGY MARK_GRADE'], axis =1)\n","y = df['BIOCHEMISTRY MARK_GRADE']\n","x = x.values\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DMow6qClbP62","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":13,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"844a4a90-3a37-4f09-85a2-856ae4304921"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[21.    ,  4.    ,  3.4825,  3.63  ],\n","       [20.    ,  5.    ,  3.698 ,  3.72  ],\n","       [20.    ,  5.    ,  3.46  ,  3.6   ],\n","       ...,\n","       [20.    ,  5.    ,  4.    ,  4.    ],\n","       [20.    ,  5.    ,  3.51  ,  3.51  ],\n","       [19.    ,  3.    ,  3.68  ,  3.66  ]])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s-YXsSx0cmIF","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":12,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"04c39083-f916-4913-89d1-40810764a834"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['AGE DURING ADMISSION', 'TOTAL_SEM', 'AVERAGE_CGPA', 'FINAL_CGPA',\n","       'ANATOMY MARK', 'ANATOMY STATUS', 'PHYSIOLOGY MARK',\n","       'PHYSIOLOGY STATUS', 'BIOCHEMISTRY MARK', 'BIOCHEMISTRY STATUS',\n","       'ORAL BIOLOGY MARK', 'ORAL BIOLOGY STATUS', 'ANATOMY MARK_GRADE',\n","       'BIOCHEMISTRY MARK_GRADE', 'ORAL BIOLOGY MARK_GRADE',\n","       'PHYSIOLOGY MARK_GRADE'],\n","      dtype='object')"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":586},"id":"B-KdFJxOcuAQ","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":12,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"56a56d09-61cd-4cdf-e7c0-e1aeb2d68262"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AGE DURING ADMISSION       0\n","TOTAL_SEM                  0\n","AVERAGE_CGPA               0\n","FINAL_CGPA                 0\n","ANATOMY MARK               0\n","ANATOMY STATUS             0\n","PHYSIOLOGY MARK            0\n","PHYSIOLOGY STATUS          0\n","BIOCHEMISTRY MARK          0\n","BIOCHEMISTRY STATUS        0\n","ORAL BIOLOGY MARK          0\n","ORAL BIOLOGY STATUS        0\n","ANATOMY MARK_GRADE         0\n","BIOCHEMISTRY MARK_GRADE    0\n","ORAL BIOLOGY MARK_GRADE    0\n","PHYSIOLOGY MARK_GRADE      0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>AGE DURING ADMISSION</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>TOTAL_SEM</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>AVERAGE_CGPA</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FINAL_CGPA</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ANATOMY MARK</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ANATOMY STATUS</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>PHYSIOLOGY MARK</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>PHYSIOLOGY STATUS</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BIOCHEMISTRY MARK</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BIOCHEMISTRY STATUS</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ORAL BIOLOGY MARK</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ORAL BIOLOGY STATUS</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ANATOMY MARK_GRADE</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BIOCHEMISTRY MARK_GRADE</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ORAL BIOLOGY MARK_GRADE</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>PHYSIOLOGY MARK_GRADE</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"THZuqSeLcwZH","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":11,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"721b5d2f-e520-4563-d7e7-83a0568a4667"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   AGE DURING ADMISSION  TOTAL_SEM  AVERAGE_CGPA  FINAL_CGPA  ANATOMY MARK  \\\n","0                    21          4        3.4825        3.63     58.161454   \n","1                    20          5        3.6980        3.72     55.161680   \n","2                    20          5        3.4600        3.60     58.373968   \n","3                    20          5        3.6820        3.79     57.654371   \n","4                    20          5        3.5260        3.68     60.177680   \n","\n","  ANATOMY STATUS  PHYSIOLOGY MARK PHYSIOLOGY STATUS  BIOCHEMISTRY MARK  \\\n","0           PASS        51.039792              PASS          55.284524   \n","1           PASS        52.462391              PASS          62.114583   \n","2           PASS        52.121739              PASS          60.903274   \n","3           PASS        62.147088              PASS          64.593452   \n","4           PASS        50.683109              PASS          64.093750   \n","\n","  BIOCHEMISTRY STATUS  ORAL BIOLOGY MARK ORAL BIOLOGY STATUS  \\\n","0                PASS          58.302945                PASS   \n","1                PASS          60.107566                PASS   \n","2                PASS          59.020379                PASS   \n","3                PASS          64.716259                PASS   \n","4                PASS          55.045943                PASS   \n","\n","  ANATOMY MARK_GRADE BIOCHEMISTRY MARK_GRADE ORAL BIOLOGY MARK_GRADE  \\\n","0                  C                       C                       C   \n","1                  C                       B                       B   \n","2                  C                       B                       C   \n","3                  C                       B                       B   \n","4                  B                       B                       C   \n","\n","  PHYSIOLOGY MARK_GRADE  \n","0                     C  \n","1                     C  \n","2                     C  \n","3                     B  \n","4                     C  "],"text/html":["\n","  <div id=\"df-0033379d-7e45-4736-adbd-58a2d890e22c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AGE DURING ADMISSION</th>\n","      <th>TOTAL_SEM</th>\n","      <th>AVERAGE_CGPA</th>\n","      <th>FINAL_CGPA</th>\n","      <th>ANATOMY MARK</th>\n","      <th>ANATOMY STATUS</th>\n","      <th>PHYSIOLOGY MARK</th>\n","      <th>PHYSIOLOGY STATUS</th>\n","      <th>BIOCHEMISTRY MARK</th>\n","      <th>BIOCHEMISTRY STATUS</th>\n","      <th>ORAL BIOLOGY MARK</th>\n","      <th>ORAL BIOLOGY STATUS</th>\n","      <th>ANATOMY MARK_GRADE</th>\n","      <th>BIOCHEMISTRY MARK_GRADE</th>\n","      <th>ORAL BIOLOGY MARK_GRADE</th>\n","      <th>PHYSIOLOGY MARK_GRADE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>21</td>\n","      <td>4</td>\n","      <td>3.4825</td>\n","      <td>3.63</td>\n","      <td>58.161454</td>\n","      <td>PASS</td>\n","      <td>51.039792</td>\n","      <td>PASS</td>\n","      <td>55.284524</td>\n","      <td>PASS</td>\n","      <td>58.302945</td>\n","      <td>PASS</td>\n","      <td>C</td>\n","      <td>C</td>\n","      <td>C</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>5</td>\n","      <td>3.6980</td>\n","      <td>3.72</td>\n","      <td>55.161680</td>\n","      <td>PASS</td>\n","      <td>52.462391</td>\n","      <td>PASS</td>\n","      <td>62.114583</td>\n","      <td>PASS</td>\n","      <td>60.107566</td>\n","      <td>PASS</td>\n","      <td>C</td>\n","      <td>B</td>\n","      <td>B</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>5</td>\n","      <td>3.4600</td>\n","      <td>3.60</td>\n","      <td>58.373968</td>\n","      <td>PASS</td>\n","      <td>52.121739</td>\n","      <td>PASS</td>\n","      <td>60.903274</td>\n","      <td>PASS</td>\n","      <td>59.020379</td>\n","      <td>PASS</td>\n","      <td>C</td>\n","      <td>B</td>\n","      <td>C</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20</td>\n","      <td>5</td>\n","      <td>3.6820</td>\n","      <td>3.79</td>\n","      <td>57.654371</td>\n","      <td>PASS</td>\n","      <td>62.147088</td>\n","      <td>PASS</td>\n","      <td>64.593452</td>\n","      <td>PASS</td>\n","      <td>64.716259</td>\n","      <td>PASS</td>\n","      <td>C</td>\n","      <td>B</td>\n","      <td>B</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20</td>\n","      <td>5</td>\n","      <td>3.5260</td>\n","      <td>3.68</td>\n","      <td>60.177680</td>\n","      <td>PASS</td>\n","      <td>50.683109</td>\n","      <td>PASS</td>\n","      <td>64.093750</td>\n","      <td>PASS</td>\n","      <td>55.045943</td>\n","      <td>PASS</td>\n","      <td>B</td>\n","      <td>B</td>\n","      <td>C</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0033379d-7e45-4736-adbd-58a2d890e22c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0033379d-7e45-4736-adbd-58a2d890e22c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0033379d-7e45-4736-adbd-58a2d890e22c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a3288187-c9fd-47f7-930c-763af2a6b0fa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a3288187-c9fd-47f7-930c-763af2a6b0fa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a3288187-c9fd-47f7-930c-763af2a6b0fa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 258,\n  \"fields\": [\n    {\n      \"column\": \"AGE DURING ADMISSION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 19,\n        \"max\": 22,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          20,\n          22,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TOTAL_SEM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 3,\n        \"max\": 6,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          6,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AVERAGE_CGPA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16120460145302498,\n        \"min\": 3.226,\n        \"max\": 4.0,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          3.97,\n          3.7625,\n          3.535\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FINAL_CGPA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13692068783216182,\n        \"min\": 3.41,\n        \"max\": 4.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          3.49,\n          3.87,\n          3.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANATOMY MARK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.871515597388818,\n        \"min\": 33.12862745098039,\n        \"max\": 87.97422385620916,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          67.03752721661056,\n          70.25720398428732,\n          52.67818627450981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANATOMY STATUS\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"PASS\",\n          \"DISTINCTION\",\n          \"FAIL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PHYSIOLOGY MARK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.60450994009758,\n        \"min\": 31.03333333333333,\n        \"max\": 85.0,\n        \"num_unique_values\": 246,\n        \"samples\": [\n          44.20285573122529,\n          70.8730467720685,\n          71.69813596491228\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PHYSIOLOGY STATUS\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"PASS\",\n          \"FAIL\",\n          \"DISTINCTION\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BIOCHEMISTRY MARK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.94383967901665,\n        \"min\": 41.44607843137255,\n        \"max\": 85.0,\n        \"num_unique_values\": 237,\n        \"samples\": [\n          58.75833333333334,\n          60.39077380952381,\n          54.24313725490196\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BIOCHEMISTRY STATUS\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"PASS\",\n          \"DISTINCTION\",\n          \"FAIL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ORAL BIOLOGY MARK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.017210601903688,\n        \"min\": 37.04632177033493,\n        \"max\": 85.0,\n        \"num_unique_values\": 245,\n        \"samples\": [\n          80.0,\n          68.18406954887217,\n          63.96791267942583\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ORAL BIOLOGY STATUS\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"PASS\",\n          \"DISTINCTION\",\n          \"FAIL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANATOMY MARK_GRADE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"B\",\n          \"A\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BIOCHEMISTRY MARK_GRADE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"B\",\n          \"F\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ORAL BIOLOGY MARK_GRADE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"B\",\n          \"F\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PHYSIOLOGY MARK_GRADE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"B\",\n          \"A\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.4, random_state=2022)"],"metadata":{"id":"iuE19gogbZhW","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":10,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["y_train.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"eG4F6klZbcLv","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":10,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"188853b2-e256-4d8c-a752-b119ff37c67a"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BIOCHEMISTRY MARK_GRADE\n","B    78\n","C    58\n","A    13\n","F     5\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>BIOCHEMISTRY MARK_GRADE</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>B</th>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>A</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["y_test.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"dk4RWIy_bx1i","executionInfo":{"status":"ok","timestamp":1723685811717,"user_tz":-420,"elapsed":9,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"38a98e4b-239a-4f95-d099-f72e3cdb8f3d"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BIOCHEMISTRY MARK_GRADE\n","C    48\n","B    44\n","A     6\n","F     6\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>BIOCHEMISTRY MARK_GRADE</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>C</th>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>A</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["###LR"],"metadata":{"id":"fwalxOppb7z-"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Model Development\n","from sklearn.linear_model import LogisticRegression\n","\n","log_reg = LogisticRegression()\n","log_reg.fit(x_train, y_train)\n","\n","y_pred = log_reg.predict(x_test)\n","y_pred\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fk22qFs5b1O2","executionInfo":{"status":"ok","timestamp":1723685812308,"user_tz":-420,"elapsed":600,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"686246ce-0746-4931-ff74-bb9244ea7664"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.47      0.91      0.62        44\n","           C       0.67      0.25      0.36        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.50       104\n","   macro avg       0.28      0.29      0.24       104\n","weighted avg       0.50      0.50      0.43       104\n","\n","[[ 0  6  0  0]\n"," [ 0 40  4  0]\n"," [ 0 36 12  0]\n"," [ 0  4  2  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix\n","import numpy as np\n","\n","# Definisi model Logistic Regression\n","log_reg_tuned = LogisticRegression()\n","\n","# Tentukan daftar hyperparameter yang ingin diuji\n","param_grid = {\n","    'C': [0.001, 0.01, 0.1, 1, 10, 100],\n","    'penalty': ['none','l1', 'l2']\n","}\n","\n","# Inisialisasi GridSearchCV dengan model, hyperparameter grid, dan jumlah lipatan cross-validation\n","grid_search_lr = GridSearchCV(log_reg_tuned, param_grid, cv=5, scoring='accuracy')\n","\n","# Latih model dengan melakukan pencarian grid\n","grid_search_lr.fit(x_train, y_train)\n","\n","# Cetak hyperparameter terbaik yang ditemukan\n","print(\"Best hyperparameters:\", grid_search_lr.best_params_)\n","\n","# Gunakan model dengan hyperparameter terbaik untuk membuat prediksi pada data testing\n","y_pred_log_tuned = grid_search_lr.best_estimator_.predict(x_test)\n","\n","test_input_data = np.array([[20, 4, 3.4975, 3.57]])\n","test = grid_search_lr.predict(test_input_data)\n","print(\"hasil: \", test)\n","\n","# Cetak laporan klasifikasi dan matriks kebingungan\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred_log_tuned))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred_log_tuned))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KQJA-4V2h6Yt","executionInfo":{"status":"ok","timestamp":1723685814356,"user_tz":-420,"elapsed":2056,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"a878c948-96b0-48da-8899-7a3af3253c8e"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1193: UserWarning: Setting penalty=None will ignore the C and l1_ratio parameters\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:425: FitFailedWarning: \n","30 fits failed out of a total of 90.\n","The score on these train-test partitions for these parameters will be set to nan.\n","If these failures are not expected, you can try to debug them by setting error_score='raise'.\n","\n","Below are more details about the failures:\n","--------------------------------------------------------------------------------\n","30 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 729, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/base.py\", line 1152, in wrapper\n","    return fit_method(estimator, *args, **kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 1169, in fit\n","    solver = _check_solver(self.solver, self.penalty, self.dual)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 56, in _check_solver\n","    raise ValueError(\n","ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.\n","\n","  warnings.warn(some_fits_failed_message, FitFailedWarning)\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py:979: UserWarning: One or more of the test scores are non-finite: [0.55870968        nan 0.50645161 0.55870968        nan 0.50645161\n"," 0.55870968        nan 0.50645161 0.55870968        nan 0.48064516\n"," 0.55870968        nan 0.55204301 0.55870968        nan 0.5716129 ]\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"stream","name":"stdout","text":["Best hyperparameters: {'C': 100, 'penalty': 'l2'}\n","hasil:  ['B']\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.56      0.80      0.65        44\n","           C       0.68      0.56      0.61        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.60       104\n","   macro avg       0.31      0.34      0.32       104\n","weighted avg       0.55      0.60      0.56       104\n","\n","\n","Confusion Matrix:\n","[[ 0  6  0  0]\n"," [ 0 35  9  0]\n"," [ 0 20 27  1]\n"," [ 0  2  4  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["###SVM"],"metadata":{"id":"nV_r617Ub93a"}},{"cell_type":"code","source":["from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.svm import SVC\n","\n","clf2 = make_pipeline(StandardScaler(), SVC(gamma='auto'))\n","clf2.fit(x_train, y_train)\n","\n","y_pred = clf2.predict(x_train)\n","\n","print(classification_report(y_train, y_pred))\n","print(confusion_matrix(y_train, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7j7xj2ANb4uM","executionInfo":{"status":"ok","timestamp":1723685814356,"user_tz":-420,"elapsed":10,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"7d842f47-0b77-4265-eebc-0d75ce465dc7"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00        13\n","           B       0.64      0.85      0.73        78\n","           C       0.71      0.62      0.66        58\n","           F       0.00      0.00      0.00         5\n","\n","    accuracy                           0.66       154\n","   macro avg       0.34      0.37      0.35       154\n","weighted avg       0.59      0.66      0.62       154\n","\n","[[ 0 12  1  0]\n"," [ 0 66 12  0]\n"," [ 0 22 36  0]\n"," [ 0  3  2  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.svm import SVC\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix, recall_score\n","import numpy as np\n","\n","# Create a pipeline with StandardScaler and SVC\n","clf2 = make_pipeline(StandardScaler(), SVC())\n","\n","# Specify the hyperparameters to be tuned\n","param_grid = {\n","    'svc__C': [98, 97, 99, 120],  # Parameter C\n","    'svc__kernel': ['linear', 'rbf'],  # Kernel type\n","    'svc__gamma': ['scale', 'auto'],  # Gamma value\n","}\n","\n","# Initialize GridSearchCV with the model, hyperparameter grid, and cross-validation\n","grid_search = GridSearchCV(clf2, param_grid, cv=5, scoring='recall_macro')\n","\n","# Train the model using grid search\n","grid_search.fit(x_train, y_train)\n","\n","# Print the best hyperparameters found\n","print(\"Best hyperparameters:\", grid_search.best_params_)\n","\n","# Use the model with the best hyperparameters to make predictions on the testing data\n","y_pred = grid_search.best_estimator_.predict(x_test)\n","\n","# Calculate recall using 'macro' average\n","recall = recall_score(y_test, y_pred, average='macro')\n","\n","# Display the classification report, confusion matrix, and recall\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n","\n","print(\"\\nRecall:\", recall)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K4ag3qFjiBjt","executionInfo":{"status":"ok","timestamp":1723685817032,"user_tz":-420,"elapsed":2678,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"8ecd037f-e3cc-4178-9edd-c6433658b229"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Best hyperparameters: {'svc__C': 99, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.25      0.33      0.29         6\n","           B       0.52      0.66      0.58        44\n","           C       0.64      0.52      0.57        48\n","           F       1.00      0.17      0.29         6\n","\n","    accuracy                           0.55       104\n","   macro avg       0.60      0.42      0.43       104\n","weighted avg       0.59      0.55      0.54       104\n","\n","\n","Confusion Matrix:\n","[[ 2  3  1  0]\n"," [ 6 29  9  0]\n"," [ 0 23 25  0]\n"," [ 0  1  4  1]]\n","\n","Recall: 0.4199810606060606\n"]}]},{"cell_type":"markdown","source":["###RANDOM FOREST"],"metadata":{"id":"0nr1OToncBVn"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","clf = RandomForestClassifier(random_state= 2022)\n","clf = clf.fit(x_train, y_train)\n","\n","y_pred = clf.predict(x_test)\n","y_pred\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S7V7RrC_b65k","executionInfo":{"status":"ok","timestamp":1723685817836,"user_tz":-420,"elapsed":821,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"6c903e8c-2b8b-4eb9-84cf-5cd56155a927"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           A       0.29      0.33      0.31         6\n","           B       0.53      0.59      0.56        44\n","           C       0.57      0.54      0.55        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.52       104\n","   macro avg       0.35      0.37      0.36       104\n","weighted avg       0.50      0.52      0.51       104\n","\n","[[ 2  3  1  0]\n"," [ 4 26 14  0]\n"," [ 1 19 26  2]\n"," [ 0  1  5  0]]\n"]}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix, make_scorer, recall_score\n","\n","# Definisikan parameter grid untuk Random Forest\n","param_grid = {\n","    'n_estimators': [100, 200, 300],\n","    'max_depth': [10, 20, 30],\n","    'min_samples_split': [2, 5, 10],\n","    'min_samples_leaf': [1, 2, 4],\n","    'criterion': ['gini', 'entropy']\n","}\n","\n","# Custom scorer untuk recall\n","scorer = make_scorer(recall_score, average='macro')\n","\n","# GridSearchCV untuk hyperparameter tuning\n","grid_search = GridSearchCV(RandomForestClassifier(random_state=2022), param_grid, scoring=scorer, cv=5)\n","\n","# Fit model dengan data training\n","grid_search.fit(x_train, y_train)\n","\n","# Dapatkan model terbaik\n","best_clf2 = grid_search.best_estimator_\n","\n","# Prediksi dengan model terbaik\n","y_pred = best_clf2.predict(x_test)\n","\n","# Print hasil\n","print(f\"Best parameters found: {grid_search.best_params_}\")\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RcnLJknaiHHx","executionInfo":{"status":"ok","timestamp":1723686100125,"user_tz":-420,"elapsed":282292,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"1c1d28cc-334b-4508-ca7b-d28f0dcafc76"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Best parameters found: {'criterion': 'gini', 'max_depth': 20, 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 100}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.53      0.64      0.58        44\n","           C       0.60      0.60      0.60        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.55       104\n","   macro avg       0.28      0.31      0.30       104\n","weighted avg       0.50      0.55      0.52       104\n","\n","\n","Confusion Matrix:\n","[[ 0  5  1  0]\n"," [ 3 28 13  0]\n"," [ 0 19 29  0]\n"," [ 0  1  5  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["###DECISION TREE"],"metadata":{"id":"cNBjGGTpcEIh"}},{"cell_type":"code","source":["from sklearn import tree\n","clf = tree.DecisionTreeClassifier(random_state= 2022)\n","clf = clf.fit(x_train, y_train)\n","\n","y_pred = clf.predict(x_test)\n","y_pred\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ErUDiYCcAwo","executionInfo":{"status":"ok","timestamp":1723686100125,"user_tz":-420,"elapsed":6,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"ff85f080-c9a2-4bbd-9140-1772c2ad6376"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           A       0.25      0.33      0.29         6\n","           B       0.48      0.48      0.48        44\n","           C       0.52      0.52      0.52        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.46       104\n","   macro avg       0.31      0.33      0.32       104\n","weighted avg       0.46      0.46      0.46       104\n","\n","[[ 2  3  1  0]\n"," [ 5 21 17  1]\n"," [ 1 19 25  3]\n"," [ 0  1  5  0]]\n"]}]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix, make_scorer, recall_score\n","\n","# Definisikan parameter grid untuk Decision Tree\n","param_grid = {\n","    'max_depth': [None, 10, 20, 30, 40, 50],\n","    'min_samples_split': [2, 5, 10, 20],\n","    'min_samples_leaf': [1, 2, 4, 8],\n","    'criterion': ['gini', 'entropy']\n","}\n","\n","# Custom scorer untuk recall\n","scorer = make_scorer(recall_score, average='macro')\n","\n","# GridSearchCV untuk hyperparameter tuning\n","grid_search = GridSearchCV(DecisionTreeClassifier(random_state=2022), param_grid, scoring=scorer, cv=5)\n","\n","# Fit model dengan data training\n","grid_search.fit(x_train, y_train)\n","\n","# Dapatkan model terbaik\n","best_dt = grid_search.best_estimator_\n","\n","# Prediksi dengan model terbaik\n","y_pred = best_dt.predict(x_test)\n","\n","# Print hasil\n","print(f\"Best parameters found: {grid_search.best_params_}\")\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xQe_N3gRiOSB","executionInfo":{"status":"ok","timestamp":1723686104514,"user_tz":-420,"elapsed":4392,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"0b986335-1b25-4400-8ccc-fcbde9dda35b"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Best parameters found: {'criterion': 'entropy', 'max_depth': 10, 'min_samples_leaf': 1, 'min_samples_split': 2}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.22      0.33      0.27         6\n","           B       0.50      0.45      0.48        44\n","           C       0.58      0.62      0.60        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.50       104\n","   macro avg       0.32      0.35      0.34       104\n","weighted avg       0.49      0.50      0.49       104\n","\n","\n","Confusion Matrix:\n","[[ 2  3  1  0]\n"," [ 6 20 16  2]\n"," [ 1 16 30  1]\n"," [ 0  1  5  0]]\n"]}]},{"cell_type":"markdown","source":["###NAIVE BAYES"],"metadata":{"id":"cRq7Vzb1cIk6"}},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","\n","naive_bayes_model = GaussianNB()\n","naive_bayes_model.fit(x_train, y_train)\n","\n","y_pred = naive_bayes_model.predict(x_test)\n","\n","# Menampilkan laporan klasifikasi dan matriks kebingungan\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n","print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iUIO_O2VcHSE","executionInfo":{"status":"ok","timestamp":1723686104514,"user_tz":-420,"elapsed":12,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"aaf6dd53-c7da-426a-ea4e-e12facc69efc"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","               precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.26      0.11      0.16        44\n","           C       0.67      0.04      0.08        48\n","           F       0.07      1.00      0.14         6\n","\n","    accuracy                           0.12       104\n","   macro avg       0.25      0.29      0.09       104\n","weighted avg       0.42      0.12      0.11       104\n","\n","Confusion Matrix:\n"," [[ 0  3  0  3]\n"," [ 0  5  1 38]\n"," [ 0 11  2 35]\n"," [ 0  0  0  6]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Definisikan model Naive Bayes\n","naive_bayes_model = GaussianNB()\n","\n","# Parameter yang ingin dioptimalkan (hanya var_smoothing pada Gaussian Naive Bayes)\n","param_grid = {\n","    'var_smoothing': [1e-9, 1e-8, 1e-7, 1e-6, 1e-5]\n","}\n","\n","# Gunakan GridSearchCV untuk mencari kombinasi hyperparameter terbaik\n","grid_search = GridSearchCV(naive_bayes_model, param_grid, cv=5, scoring='accuracy')\n","grid_search.fit(x_train, y_train)\n","\n","# Ambil model dengan kombinasi hyperparameter terbaik\n","best_naive_bayes_model = grid_search.best_estimator_\n","\n","# Latih model dengan data pelatihan\n","best_naive_bayes_model.fit(x_train, y_train)\n","\n","# Prediksi menggunakan model yang dioptimalkan\n","y_pred = best_naive_bayes_model.predict(x_test)\n","\n","# Tampilkan hasil evaluasi\n","print(\"Best Parameters:\", grid_search.best_params_)\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n","print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Na_aOPRBw7aW","executionInfo":{"status":"ok","timestamp":1723686104514,"user_tz":-420,"elapsed":8,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"36d72943-f3ee-4d4e-836f-7ec483920ece"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Parameters: {'var_smoothing': 1e-05}\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.25      0.11      0.16        44\n","           C       0.67      0.04      0.08        48\n","           F       0.07      1.00      0.14         6\n","\n","    accuracy                           0.12       104\n","   macro avg       0.25      0.29      0.09       104\n","weighted avg       0.42      0.12      0.11       104\n","\n","Confusion Matrix:\n"," [[ 0  4  0  2]\n"," [ 0  5  1 38]\n"," [ 0 11  2 35]\n"," [ 0  0  0  6]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.feature_selection import SelectKBest, f_classif\n","from sklearn.pipeline import Pipeline\n","\n","# Assuming x_train, y_train are your training data\n","# Define the pipeline with feature selection and Naive Bayes classifier\n","pipeline = Pipeline([\n","    ('feature_selection', SelectKBest(score_func=f_classif)),\n","    ('naive_bayes', MultinomialNB())\n","])\n","\n","# Define hyperparameters to tune\n","parameters = {\n","    'feature_selection__k': [1, 2, 3, 4],  # Adjust the range based on your requirements\n","    # Add any Naive Bayes hyperparameters if needed\n","}\n","\n","# Create the grid search with cross-validation\n","grid_search = GridSearchCV(pipeline, parameters, cv=5, scoring='accuracy')\n","\n","# Fit the grid search to your data\n","grid_search.fit(x_train, y_train)\n","\n","# Display the best parameters and their corresponding accuracy\n","print(\"Best Parameters: \", grid_search.best_params_)\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n","print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ldGrAcSEcLUQ","executionInfo":{"status":"ok","timestamp":1723686105243,"user_tz":-420,"elapsed":734,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"c21929d3-72e0-4e73-cc16-ee9987071a43"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Parameters:  {'feature_selection__k': 1}\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.25      0.11      0.16        44\n","           C       0.67      0.04      0.08        48\n","           F       0.07      1.00      0.14         6\n","\n","    accuracy                           0.12       104\n","   macro avg       0.25      0.29      0.09       104\n","weighted avg       0.42      0.12      0.11       104\n","\n","Confusion Matrix:\n"," [[ 0  4  0  2]\n"," [ 0  5  1 38]\n"," [ 0 11  2 35]\n"," [ 0  0  0  6]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["# Neural Network"],"metadata":{"id":"KrM00TLm6jyD"}},{"cell_type":"code","source":["import numpy as np\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.preprocessing import LabelEncoder\n","from tensorflow.keras.utils import to_categorical\n","\n","# Encode string labels to integers\n","label_encoder = LabelEncoder()\n","y_train_int = label_encoder.fit_transform(y_train)\n","y_test_int = label_encoder.transform(y_test)\n","\n","# Convert labels to one-hot encoding\n","num_classes = len(np.unique(y_train_int))  # Number of unique classes\n","y_train_oh = to_categorical(y_train_int, num_classes)\n","y_test_oh = to_categorical(y_test_int, num_classes)\n","\n","# Define the neural network model\n","model = Sequential()\n","model.add(Dense(units=64, activation='relu', input_shape=(x_train.shape[1],)))\n","model.add(Dense(units=32, activation='relu'))\n","model.add(Dense(units=num_classes, activation='softmax'))  # Use 'softmax' for multi-class classification\n","\n","# Compile the model\n","model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","\n","# Train the model\n","model.fit(x_train, y_train_oh, epochs=50, batch_size=32, verbose=1, validation_split=0.2)\n","\n","# Make predictions\n","y_pred_oh = model.predict(x_test)\n","y_pred_classes = np.argmax(y_pred_oh, axis=1)\n","\n","# Convert one-hot encoded y_test back to class labels for evaluation\n","y_test_classes = np.argmax(y_test_oh, axis=1)\n","\n","# Print classification report and confusion matrix\n","print(classification_report(y_test_classes, y_pred_classes, target_names=label_encoder.classes_))\n","print(confusion_matrix(y_test_classes, y_pred_classes))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cWdoW7dR6xni","executionInfo":{"status":"ok","timestamp":1723686115562,"user_tz":-420,"elapsed":10322,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"0ef5fc2a-555a-4f90-e1d2-22e8243f3601"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 81ms/step - accuracy: 0.5068 - loss: 1.5679 - val_accuracy: 0.5161 - val_loss: 1.1842\n","Epoch 2/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.5247 - loss: 1.0639 - val_accuracy: 0.4516 - val_loss: 1.1594\n","Epoch 3/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - accuracy: 0.4401 - loss: 1.0219 - val_accuracy: 0.3226 - val_loss: 1.2399\n","Epoch 4/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.3967 - loss: 1.0164 - val_accuracy: 0.3548 - val_loss: 1.2534\n","Epoch 5/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.4062 - loss: 1.0234 - val_accuracy: 0.5161 - val_loss: 1.2450\n","Epoch 6/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - accuracy: 0.5193 - loss: 1.0128 - val_accuracy: 0.5161 - val_loss: 1.2702\n","Epoch 7/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.5089 - loss: 1.0014 - val_accuracy: 0.5161 - val_loss: 1.2701\n","Epoch 8/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.5266 - loss: 0.9961 - val_accuracy: 0.5161 - val_loss: 1.2614\n","Epoch 9/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.4458 - loss: 1.0464 - val_accuracy: 0.4516 - val_loss: 1.2599\n","Epoch 10/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.5079 - loss: 0.9961 - val_accuracy: 0.4839 - val_loss: 1.2477\n","Epoch 11/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.5280 - loss: 0.9684 - val_accuracy: 0.5161 - val_loss: 1.2296\n","Epoch 12/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - accuracy: 0.5391 - loss: 1.0082 - val_accuracy: 0.5161 - val_loss: 1.2162\n","Epoch 13/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.4777 - loss: 1.0309 - val_accuracy: 0.5161 - val_loss: 1.2053\n","Epoch 14/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.4725 - loss: 1.0129 - val_accuracy: 0.5161 - val_loss: 1.2022\n","Epoch 15/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - accuracy: 0.5351 - loss: 0.9194 - val_accuracy: 0.5161 - val_loss: 1.2006\n","Epoch 16/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.5351 - loss: 0.9566 - val_accuracy: 0.5161 - val_loss: 1.2045\n","Epoch 17/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.5028 - loss: 0.9903 - val_accuracy: 0.5161 - val_loss: 1.2045\n","Epoch 18/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.5320 - loss: 0.9972 - val_accuracy: 0.5161 - val_loss: 1.2000\n","Epoch 19/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.5174 - loss: 0.9702 - val_accuracy: 0.5161 - val_loss: 1.1981\n","Epoch 20/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 0.5090 - loss: 0.9706 - val_accuracy: 0.5161 - val_loss: 1.1980\n","Epoch 21/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step - accuracy: 0.4943 - loss: 1.0173 - val_accuracy: 0.5161 - val_loss: 1.2062\n","Epoch 22/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.4985 - loss: 0.9977 - val_accuracy: 0.5161 - val_loss: 1.2068\n","Epoch 23/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step - accuracy: 0.5455 - loss: 0.9604 - val_accuracy: 0.5161 - val_loss: 1.2106\n","Epoch 24/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - accuracy: 0.5184 - loss: 0.9482 - val_accuracy: 0.5161 - val_loss: 1.2127\n","Epoch 25/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.5028 - loss: 0.9690 - val_accuracy: 0.5161 - val_loss: 1.2139\n","Epoch 26/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.4830 - loss: 0.9653 - val_accuracy: 0.5161 - val_loss: 1.2075\n","Epoch 27/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - accuracy: 0.4684 - loss: 0.9805 - val_accuracy: 0.5161 - val_loss: 1.2053\n","Epoch 28/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - accuracy: 0.4537 - loss: 1.0437 - val_accuracy: 0.5161 - val_loss: 1.1980\n","Epoch 29/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.5339 - loss: 0.9565 - val_accuracy: 0.5161 - val_loss: 1.2039\n","Epoch 30/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.5329 - loss: 0.9299 - val_accuracy: 0.5161 - val_loss: 1.2056\n","Epoch 31/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.5465 - loss: 1.0197 - val_accuracy: 0.5161 - val_loss: 1.1997\n","Epoch 32/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.4804 - loss: 0.9582 - val_accuracy: 0.4839 - val_loss: 1.2085\n","Epoch 33/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.4877 - loss: 0.9874 - val_accuracy: 0.5161 - val_loss: 1.1978\n","Epoch 34/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.5027 - loss: 1.0098 - val_accuracy: 0.5161 - val_loss: 1.1955\n","Epoch 35/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.4787 - loss: 0.9712 - val_accuracy: 0.5161 - val_loss: 1.2006\n","Epoch 36/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - accuracy: 0.5120 - loss: 0.9536 - val_accuracy: 0.5161 - val_loss: 1.2003\n","Epoch 37/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.4766 - loss: 1.0067 - val_accuracy: 0.5161 - val_loss: 1.2024\n","Epoch 38/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 0.4872 - loss: 1.0369 - val_accuracy: 0.5161 - val_loss: 1.2008\n","Epoch 39/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5318 - loss: 0.9413 - val_accuracy: 0.5161 - val_loss: 1.2014\n","Epoch 40/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.5235 - loss: 1.0272 - val_accuracy: 0.5161 - val_loss: 1.1961\n","Epoch 41/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step - accuracy: 0.4749 - loss: 0.9869 - val_accuracy: 0.4516 - val_loss: 1.2100\n","Epoch 42/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.4825 - loss: 1.0053 - val_accuracy: 0.5161 - val_loss: 1.1987\n","Epoch 43/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.4851 - loss: 1.0055 - val_accuracy: 0.5161 - val_loss: 1.2015\n","Epoch 44/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5329 - loss: 0.9462 - val_accuracy: 0.5161 - val_loss: 1.2065\n","Epoch 45/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.4538 - loss: 1.0108 - val_accuracy: 0.5161 - val_loss: 1.2114\n","Epoch 46/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.4747 - loss: 1.0210 - val_accuracy: 0.5161 - val_loss: 1.2039\n","Epoch 47/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step - accuracy: 0.4912 - loss: 0.9971 - val_accuracy: 0.5161 - val_loss: 1.2042\n","Epoch 48/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5277 - loss: 0.9668 - val_accuracy: 0.5161 - val_loss: 1.2016\n","Epoch 49/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 0.4881 - loss: 0.9887 - val_accuracy: 0.5161 - val_loss: 1.2020\n","Epoch 50/50\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.5320 - loss: 0.9318 - val_accuracy: 0.5161 - val_loss: 1.2087\n","\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 13ms/step\n","              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.42      0.95      0.58        44\n","           C       0.33      0.02      0.04        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.41       104\n","   macro avg       0.19      0.24      0.15       104\n","weighted avg       0.33      0.41      0.26       104\n","\n","[[ 0  6  0  0]\n"," [ 0 42  2  0]\n"," [ 0 47  1  0]\n"," [ 0  6  0  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["# K-NN"],"metadata":{"id":"e0RvX--SemC7"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Initialize KNN classifier\n","knn_clf = KNeighborsClassifier()\n","\n","# Fit the model on the training data\n","knn_clf.fit(x_train, y_train)\n","\n","# Predict on the test set\n","y_pred = knn_clf.predict(x_test)\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Ueu07FDcdGF","executionInfo":{"status":"ok","timestamp":1723686115562,"user_tz":-420,"elapsed":19,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"6eb2ed5f-62c1-4064-cfa3-1a031b0f1c91"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.25      0.33      0.29         6\n","           B       0.51      0.68      0.58        44\n","           C       0.59      0.46      0.52        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.52       104\n","   macro avg       0.34      0.37      0.35       104\n","weighted avg       0.50      0.52      0.50       104\n","\n","Confusion Matrix:\n","[[ 2  3  1  0]\n"," [ 5 30  9  0]\n"," [ 1 25 22  0]\n"," [ 0  1  5  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Initialize KNN classifier\n","knn_clf = KNeighborsClassifier()\n","\n","# Tentukan hyperparameter yang akan dioptimalkan\n","param_grid = {\n","    'n_neighbors': [9, 10, 11],\n","    'weights': ['uniform', 'distance'],\n","    'algorithm': ['ball_tree', 'kd_tree', 'brute'],\n","    'p': [3, 4, 5, 6]\n","}\n","\n","# Gunakan GridSearchCV untuk mencari kombinasi hyperparameter terbaik\n","grid_search_knn = GridSearchCV(knn_clf, param_grid, cv=5, scoring='accuracy')\n","grid_search_knn.fit(x_train, y_train)\n","\n","# Ambil model dengan kombinasi hyperparameter terbaik\n","best_knn_clf = grid_search_knn.best_estimator_\n","\n","# Latih model dengan data pelatihan\n","best_knn_clf.fit(x_train, y_train)\n","\n","# Prediksi menggunakan model yang dioptimalkan\n","y_pred = best_knn_clf.predict(x_test)\n","\n","# Tampilkan hasil evaluasi\n","print(\"Best Parameters:\", grid_search_knn.best_params_)\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n","print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5zW9nYJcibOX","executionInfo":{"status":"ok","timestamp":1723686116863,"user_tz":-420,"elapsed":1314,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"760f93de-e68f-41ac-ca52-8d496f5bafae"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Best Parameters: {'algorithm': 'ball_tree', 'n_neighbors': 9, 'p': 3, 'weights': 'distance'}\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","           A       0.25      0.33      0.29         6\n","           B       0.50      0.64      0.56        44\n","           C       0.62      0.52      0.57        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.53       104\n","   macro avg       0.34      0.37      0.35       104\n","weighted avg       0.51      0.53      0.52       104\n","\n","Confusion Matrix:\n"," [[ 2  4  0  0]\n"," [ 6 28 10  0]\n"," [ 0 23 25  0]\n"," [ 0  1  5  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:821: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 810, in _score\n","    scores = scorer(estimator, X_test, y_test)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n","    y_pred = method_caller(estimator, \"predict\", X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n","    result, _ = _get_response_values(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/utils/_response.py\", line 194, in _get_response_values\n","    y_pred = prediction_method(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 254, in predict\n","    probabilities = self.predict_proba(X)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/neighbors/_classification.py\", line 332, in predict_proba\n","    probabilities = ArgKminClassMode.compute(\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 591, in compute\n","    unique_labels=np.array(unique_labels, dtype=np.intp),\n","ValueError: invalid literal for int() with base 10: 'A'\n","\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py:979: UserWarning: One or more of the test scores are non-finite: [0.54537634 0.55182796 0.5455914  0.55182796 0.53913978 0.54537634\n"," 0.53268817 0.54537634 0.53204301 0.53870968 0.53204301 0.53225806\n"," 0.53204301 0.52602151 0.53849462 0.52602151 0.53892473 0.53870968\n"," 0.53268817 0.54537634 0.53913978 0.53247312 0.53913978 0.52602151\n"," 0.54537634 0.55182796 0.5455914  0.55182796 0.53913978 0.54537634\n"," 0.53268817 0.54537634 0.53204301 0.53870968 0.53204301 0.53225806\n"," 0.53204301 0.52602151 0.53849462 0.52602151 0.54537634 0.53870968\n"," 0.53913978 0.54537634 0.5455914  0.53247312 0.5455914  0.52602151\n","        nan 0.55182796        nan 0.55182796        nan 0.54537634\n","        nan 0.54537634        nan 0.53870968        nan 0.53225806\n","        nan 0.52602151        nan 0.52602151        nan 0.53870968\n","        nan 0.54537634        nan 0.53247312        nan 0.52602151]\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["# CatBoost"],"metadata":{"id":"BfL29oJv8vxV"}},{"cell_type":"code","source":["pip install catboost"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X78KRLuK8vdT","executionInfo":{"status":"ok","timestamp":1723686126994,"user_tz":-420,"elapsed":10134,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"0779790b-593c-4ff4-a7ef-36da5d2cb019"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting catboost\n","  Downloading catboost-1.2.5-cp310-cp310-manylinux2014_x86_64.whl.metadata (1.2 kB)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from catboost) (0.20.3)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from catboost) (3.7.1)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.26.4)\n","Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.10/dist-packages (from catboost) (2.1.4)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from catboost) (1.13.1)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (from catboost) (5.15.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from catboost) (1.16.0)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2024.1)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2024.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (4.53.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (24.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (3.1.2)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly->catboost) (9.0.0)\n","Downloading catboost-1.2.5-cp310-cp310-manylinux2014_x86_64.whl (98.2 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.2/98.2 MB\u001b[0m \u001b[31m8.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: catboost\n","Successfully installed catboost-1.2.5\n"]}]},{"cell_type":"code","source":["from catboost import CatBoostClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Initialize CatBoost classifier\n","cat_clf = CatBoostClassifier(random_state=2022, verbose=0)\n","\n","# Fit the model on the training data\n","cat_clf.fit(x_train, y_train)\n","\n","# Predict on the test set\n","y_pred = cat_clf.predict(x_test)\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kcYoO6pg83Cw","executionInfo":{"status":"ok","timestamp":1723686129599,"user_tz":-420,"elapsed":2611,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"2d8f0517-fbff-412f-9214-c2d4bb209ce8"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.47      0.52      0.49        44\n","           C       0.54      0.54      0.54        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.47       104\n","   macro avg       0.25      0.27      0.26       104\n","weighted avg       0.45      0.47      0.46       104\n","\n","Confusion Matrix:\n","[[ 0  5  1  0]\n"," [ 5 23 16  0]\n"," [ 1 20 26  1]\n"," [ 0  1  5  0]]\n"]}]},{"cell_type":"code","source":["from catboost import CatBoostClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix, recall_score\n","\n","# Initialize CatBoost classifier\n","catboost_clf = CatBoostClassifier()\n","\n","# Specify the hyperparameters to be tuned\n","param_grid = {\n","    'iterations': [100, 200, 300],\n","    'learning_rate': [0.1, 0.01, 0.001]\n","}\n","\n","# Initialize GridSearchCV with the model, hyperparameter grid, and cross-validation\n","grid_search_cb = GridSearchCV(catboost_clf, param_grid, cv=5, scoring='recall_macro')\n","\n","# Train the model using grid search\n","grid_search_cb.fit(x_train, y_train)\n","\n","# Print the best hyperparameters found\n","print(\"Best hyperparameters:\", grid_search_cb.best_params_)\n","\n","# Use the model with the best hyperparameters to make predictions on the testing data\n","y_pred = grid_search_cb.best_estimator_.predict(x_test)\n","\n","# Calculate recall using 'macro' average\n","recall = recall_score(y_test, y_pred, average='macro')\n","\n","# Display the classification report, confusion matrix, and recall\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n","\n","print(\"\\nRecall:\", recall)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nS2veXpDijqi","executionInfo":{"status":"ok","timestamp":1723686154813,"user_tz":-420,"elapsed":25219,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"d11f7886-5d06-4e5e-a447-0c330b61cae9"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n","22:\tlearn: 1.3737663\ttotal: 37.3ms\tremaining: 287ms\n","23:\tlearn: 1.3733229\ttotal: 39.2ms\tremaining: 288ms\n","24:\tlearn: 1.3727833\ttotal: 41ms\tremaining: 287ms\n","25:\tlearn: 1.3723286\ttotal: 43ms\tremaining: 288ms\n","26:\tlearn: 1.3717831\ttotal: 44.5ms\tremaining: 285ms\n","27:\tlearn: 1.3712413\ttotal: 46ms\tremaining: 283ms\n","28:\tlearn: 1.3706847\ttotal: 47.9ms\tremaining: 283ms\n","29:\tlearn: 1.3702149\ttotal: 48.9ms\tremaining: 277ms\n","30:\tlearn: 1.3697450\ttotal: 49.6ms\tremaining: 270ms\n","31:\tlearn: 1.3692165\ttotal: 50.5ms\tremaining: 265ms\n","32:\tlearn: 1.3686286\ttotal: 50.9ms\tremaining: 258ms\n","33:\tlearn: 1.3680845\ttotal: 51.8ms\tremaining: 253ms\n","34:\tlearn: 1.3675737\ttotal: 52.7ms\tremaining: 249ms\n","35:\tlearn: 1.3670246\ttotal: 53.6ms\tremaining: 244ms\n","36:\tlearn: 1.3665433\ttotal: 54.3ms\tremaining: 239ms\n","37:\tlearn: 1.3660791\ttotal: 56.4ms\tremaining: 241ms\n","38:\tlearn: 1.3655518\ttotal: 56.6ms\tremaining: 234ms\n","39:\tlearn: 1.3649925\ttotal: 57.3ms\tremaining: 229ms\n","40:\tlearn: 1.3644808\ttotal: 57.9ms\tremaining: 225ms\n","41:\tlearn: 1.3639140\ttotal: 58.5ms\tremaining: 220ms\n","42:\tlearn: 1.3633824\ttotal: 59.2ms\tremaining: 216ms\n","43:\tlearn: 1.3628381\ttotal: 59.8ms\tremaining: 212ms\n","44:\tlearn: 1.3623401\ttotal: 60.5ms\tremaining: 208ms\n","45:\tlearn: 1.3618904\ttotal: 61.2ms\tremaining: 205ms\n","46:\tlearn: 1.3613980\ttotal: 61.8ms\tremaining: 201ms\n","47:\tlearn: 1.3608849\ttotal: 62.5ms\tremaining: 198ms\n","48:\tlearn: 1.3603390\ttotal: 63.1ms\tremaining: 195ms\n","49:\tlearn: 1.3598492\ttotal: 64.2ms\tremaining: 193ms\n","50:\tlearn: 1.3593848\ttotal: 64.4ms\tremaining: 188ms\n","51:\tlearn: 1.3589576\ttotal: 65.6ms\tremaining: 187ms\n","52:\tlearn: 1.3583824\ttotal: 66.3ms\tremaining: 184ms\n","53:\tlearn: 1.3578505\ttotal: 66.9ms\tremaining: 181ms\n","54:\tlearn: 1.3573618\ttotal: 67.6ms\tremaining: 178ms\n","55:\tlearn: 1.3568481\ttotal: 68.2ms\tremaining: 175ms\n","56:\tlearn: 1.3563498\ttotal: 68.8ms\tremaining: 173ms\n","57:\tlearn: 1.3558898\ttotal: 69.5ms\tremaining: 170ms\n","58:\tlearn: 1.3554206\ttotal: 70.1ms\tremaining: 168ms\n","59:\tlearn: 1.3548832\ttotal: 70.7ms\tremaining: 165ms\n","60:\tlearn: 1.3543509\ttotal: 71.4ms\tremaining: 163ms\n","61:\tlearn: 1.3537715\ttotal: 72ms\tremaining: 160ms\n","62:\tlearn: 1.3532543\ttotal: 72.2ms\tremaining: 157ms\n","63:\tlearn: 1.3528042\ttotal: 72.8ms\tremaining: 155ms\n","64:\tlearn: 1.3523983\ttotal: 73.5ms\tremaining: 153ms\n","65:\tlearn: 1.3519478\ttotal: 74.4ms\tremaining: 151ms\n","66:\tlearn: 1.3515426\ttotal: 75.3ms\tremaining: 149ms\n","67:\tlearn: 1.3509822\ttotal: 76.2ms\tremaining: 148ms\n","68:\tlearn: 1.3504829\ttotal: 76.6ms\tremaining: 145ms\n","69:\tlearn: 1.3500518\ttotal: 77ms\tremaining: 143ms\n","70:\tlearn: 1.3495938\ttotal: 77.7ms\tremaining: 141ms\n","71:\tlearn: 1.3491210\ttotal: 78.3ms\tremaining: 139ms\n","72:\tlearn: 1.3486431\ttotal: 78.8ms\tremaining: 137ms\n","73:\tlearn: 1.3480839\ttotal: 79.4ms\tremaining: 135ms\n","74:\tlearn: 1.3476553\ttotal: 80.1ms\tremaining: 133ms\n","75:\tlearn: 1.3471973\ttotal: 80.7ms\tremaining: 132ms\n","76:\tlearn: 1.3467490\ttotal: 81.3ms\tremaining: 130ms\n","77:\tlearn: 1.3462795\ttotal: 82ms\tremaining: 128ms\n","78:\tlearn: 1.3457269\ttotal: 82.6ms\tremaining: 126ms\n","79:\tlearn: 1.3452261\ttotal: 83.5ms\tremaining: 125ms\n","80:\tlearn: 1.3447405\ttotal: 84.4ms\tremaining: 124ms\n","81:\tlearn: 1.3442150\ttotal: 84.9ms\tremaining: 122ms\n","82:\tlearn: 1.3437881\ttotal: 85.8ms\tremaining: 121ms\n","83:\tlearn: 1.3432687\ttotal: 86.8ms\tremaining: 120ms\n","84:\tlearn: 1.3428465\ttotal: 87.7ms\tremaining: 119ms\n","85:\tlearn: 1.3423919\ttotal: 92.9ms\tremaining: 123ms\n","86:\tlearn: 1.3419320\ttotal: 94.9ms\tremaining: 123ms\n","87:\tlearn: 1.3413984\ttotal: 95.6ms\tremaining: 122ms\n","88:\tlearn: 1.3409514\ttotal: 96.3ms\tremaining: 120ms\n","89:\tlearn: 1.3403612\ttotal: 97.1ms\tremaining: 119ms\n","90:\tlearn: 1.3399138\ttotal: 98.1ms\tremaining: 117ms\n","91:\tlearn: 1.3395033\ttotal: 108ms\tremaining: 126ms\n","92:\tlearn: 1.3390261\ttotal: 108ms\tremaining: 124ms\n","93:\tlearn: 1.3385932\ttotal: 109ms\tremaining: 122ms\n","94:\tlearn: 1.3380948\ttotal: 109ms\tremaining: 121ms\n","95:\tlearn: 1.3375815\ttotal: 110ms\tremaining: 119ms\n","96:\tlearn: 1.3371345\ttotal: 110ms\tremaining: 117ms\n","97:\tlearn: 1.3365956\ttotal: 111ms\tremaining: 116ms\n","98:\tlearn: 1.3360885\ttotal: 112ms\tremaining: 114ms\n","99:\tlearn: 1.3356670\ttotal: 112ms\tremaining: 112ms\n","100:\tlearn: 1.3351018\ttotal: 113ms\tremaining: 110ms\n","101:\tlearn: 1.3346679\ttotal: 113ms\tremaining: 109ms\n","102:\tlearn: 1.3342332\ttotal: 114ms\tremaining: 107ms\n","103:\tlearn: 1.3337037\ttotal: 115ms\tremaining: 106ms\n","104:\tlearn: 1.3332130\ttotal: 115ms\tremaining: 104ms\n","105:\tlearn: 1.3327307\ttotal: 115ms\tremaining: 102ms\n","106:\tlearn: 1.3322922\ttotal: 116ms\tremaining: 101ms\n","107:\tlearn: 1.3317610\ttotal: 117ms\tremaining: 99.4ms\n","108:\tlearn: 1.3313165\ttotal: 117ms\tremaining: 97.9ms\n","109:\tlearn: 1.3308358\ttotal: 118ms\tremaining: 96.5ms\n","110:\tlearn: 1.3304136\ttotal: 119ms\tremaining: 95.2ms\n","111:\tlearn: 1.3299048\ttotal: 119ms\tremaining: 93.6ms\n","112:\tlearn: 1.3294099\ttotal: 120ms\tremaining: 92.4ms\n","113:\tlearn: 1.3290477\ttotal: 121ms\tremaining: 91.2ms\n","114:\tlearn: 1.3285290\ttotal: 122ms\tremaining: 89.9ms\n","115:\tlearn: 1.3281179\ttotal: 122ms\tremaining: 88.5ms\n","116:\tlearn: 1.3276462\ttotal: 123ms\tremaining: 87.1ms\n","117:\tlearn: 1.3272266\ttotal: 123ms\tremaining: 85.8ms\n","118:\tlearn: 1.3267492\ttotal: 124ms\tremaining: 84.5ms\n","119:\tlearn: 1.3263122\ttotal: 125ms\tremaining: 83.1ms\n","120:\tlearn: 1.3259081\ttotal: 125ms\tremaining: 81.8ms\n","121:\tlearn: 1.3254659\ttotal: 126ms\tremaining: 80.5ms\n","122:\tlearn: 1.3249253\ttotal: 128ms\tremaining: 79.9ms\n","123:\tlearn: 1.3244801\ttotal: 128ms\tremaining: 78.7ms\n","124:\tlearn: 1.3239350\ttotal: 129ms\tremaining: 77.1ms\n","125:\tlearn: 1.3234553\ttotal: 129ms\tremaining: 75.9ms\n","126:\tlearn: 1.3230367\ttotal: 130ms\tremaining: 74.7ms\n","127:\tlearn: 1.3225776\ttotal: 130ms\tremaining: 73.4ms\n","128:\tlearn: 1.3220876\ttotal: 131ms\tremaining: 72.2ms\n","129:\tlearn: 1.3216237\ttotal: 131ms\tremaining: 70.8ms\n","130:\tlearn: 1.3211670\ttotal: 132ms\tremaining: 69.7ms\n","131:\tlearn: 1.3207430\ttotal: 133ms\tremaining: 68.3ms\n","132:\tlearn: 1.3203947\ttotal: 133ms\tremaining: 67.1ms\n","133:\tlearn: 1.3198453\ttotal: 134ms\tremaining: 66ms\n","134:\tlearn: 1.3193991\ttotal: 134ms\tremaining: 64.6ms\n","135:\tlearn: 1.3189112\ttotal: 135ms\tremaining: 63.4ms\n","136:\tlearn: 1.3184579\ttotal: 135ms\tremaining: 62.3ms\n","137:\tlearn: 1.3180142\ttotal: 136ms\tremaining: 61.1ms\n","138:\tlearn: 1.3175955\ttotal: 137ms\tremaining: 60.1ms\n","139:\tlearn: 1.3171435\ttotal: 137ms\tremaining: 58.8ms\n","140:\tlearn: 1.3166723\ttotal: 138ms\tremaining: 57.6ms\n","141:\tlearn: 1.3161907\ttotal: 139ms\tremaining: 56.6ms\n","142:\tlearn: 1.3157712\ttotal: 139ms\tremaining: 55.5ms\n","143:\tlearn: 1.3153327\ttotal: 140ms\tremaining: 54.4ms\n","144:\tlearn: 1.3149215\ttotal: 140ms\tremaining: 53.1ms\n","145:\tlearn: 1.3144328\ttotal: 141ms\tremaining: 52.1ms\n","146:\tlearn: 1.3139997\ttotal: 141ms\tremaining: 51ms\n","147:\tlearn: 1.3135439\ttotal: 142ms\tremaining: 49.9ms\n","148:\tlearn: 1.3131055\ttotal: 143ms\tremaining: 48.8ms\n","149:\tlearn: 1.3126937\ttotal: 143ms\tremaining: 47.8ms\n","150:\tlearn: 1.3122832\ttotal: 144ms\tremaining: 46.7ms\n","151:\tlearn: 1.3118619\ttotal: 144ms\tremaining: 45.6ms\n","152:\tlearn: 1.3114295\ttotal: 145ms\tremaining: 44.4ms\n","153:\tlearn: 1.3109979\ttotal: 145ms\tremaining: 43.4ms\n","154:\tlearn: 1.3104749\ttotal: 145ms\tremaining: 42.2ms\n","155:\tlearn: 1.3099919\ttotal: 146ms\tremaining: 41.2ms\n","156:\tlearn: 1.3095570\ttotal: 147ms\tremaining: 40.3ms\n","157:\tlearn: 1.3091014\ttotal: 148ms\tremaining: 39.3ms\n","158:\tlearn: 1.3086359\ttotal: 148ms\tremaining: 38.2ms\n","159:\tlearn: 1.3081183\ttotal: 149ms\tremaining: 37.2ms\n","160:\tlearn: 1.3076173\ttotal: 150ms\tremaining: 36.3ms\n","161:\tlearn: 1.3071189\ttotal: 151ms\tremaining: 35.3ms\n","162:\tlearn: 1.3066318\ttotal: 152ms\tremaining: 34.5ms\n","163:\tlearn: 1.3062283\ttotal: 152ms\tremaining: 33.5ms\n","164:\tlearn: 1.3058314\ttotal: 155ms\tremaining: 32.9ms\n","165:\tlearn: 1.3053801\ttotal: 167ms\tremaining: 34.2ms\n","166:\tlearn: 1.3049611\ttotal: 174ms\tremaining: 34.3ms\n","167:\tlearn: 1.3045612\ttotal: 174ms\tremaining: 33.2ms\n","168:\tlearn: 1.3041246\ttotal: 175ms\tremaining: 32.1ms\n","169:\tlearn: 1.3037097\ttotal: 175ms\tremaining: 30.9ms\n","170:\tlearn: 1.3033006\ttotal: 176ms\tremaining: 29.8ms\n","171:\tlearn: 1.3028162\ttotal: 176ms\tremaining: 28.7ms\n","172:\tlearn: 1.3024017\ttotal: 182ms\tremaining: 28.4ms\n","173:\tlearn: 1.3018939\ttotal: 182ms\tremaining: 27.2ms\n","174:\tlearn: 1.3015157\ttotal: 183ms\tremaining: 26.1ms\n","175:\tlearn: 1.3010852\ttotal: 183ms\tremaining: 25ms\n","176:\tlearn: 1.3006364\ttotal: 184ms\tremaining: 23.9ms\n","177:\tlearn: 1.3002176\ttotal: 185ms\tremaining: 22.9ms\n","178:\tlearn: 1.2998290\ttotal: 186ms\tremaining: 21.8ms\n","179:\tlearn: 1.2994369\ttotal: 191ms\tremaining: 21.3ms\n","180:\tlearn: 1.2990389\ttotal: 192ms\tremaining: 20.2ms\n","181:\tlearn: 1.2986598\ttotal: 193ms\tremaining: 19.1ms\n","182:\tlearn: 1.2982256\ttotal: 193ms\tremaining: 18ms\n","183:\tlearn: 1.2977600\ttotal: 194ms\tremaining: 16.9ms\n","184:\tlearn: 1.2973001\ttotal: 194ms\tremaining: 15.8ms\n","185:\tlearn: 1.2968554\ttotal: 199ms\tremaining: 15ms\n","186:\tlearn: 1.2964599\ttotal: 200ms\tremaining: 13.9ms\n","187:\tlearn: 1.2960129\ttotal: 201ms\tremaining: 12.8ms\n","188:\tlearn: 1.2955733\ttotal: 201ms\tremaining: 11.7ms\n","189:\tlearn: 1.2952120\ttotal: 202ms\tremaining: 10.6ms\n","190:\tlearn: 1.2948325\ttotal: 204ms\tremaining: 9.6ms\n","191:\tlearn: 1.2943797\ttotal: 204ms\tremaining: 8.52ms\n","192:\tlearn: 1.2939427\ttotal: 210ms\tremaining: 7.6ms\n","193:\tlearn: 1.2935104\ttotal: 210ms\tremaining: 6.5ms\n","194:\tlearn: 1.2931045\ttotal: 211ms\tremaining: 5.41ms\n","195:\tlearn: 1.2926370\ttotal: 211ms\tremaining: 4.32ms\n","196:\tlearn: 1.2922189\ttotal: 212ms\tremaining: 3.23ms\n","197:\tlearn: 1.2917766\ttotal: 212ms\tremaining: 2.15ms\n","198:\tlearn: 1.2913437\ttotal: 218ms\tremaining: 1.09ms\n","199:\tlearn: 1.2909630\ttotal: 218ms\tremaining: 0us\n","0:\tlearn: 1.3334538\ttotal: 742us\tremaining: 222ms\n","1:\tlearn: 1.2831305\ttotal: 1ms\tremaining: 150ms\n","2:\tlearn: 1.2443087\ttotal: 2.78ms\tremaining: 275ms\n","3:\tlearn: 1.2156916\ttotal: 3.42ms\tremaining: 253ms\n","4:\tlearn: 1.1880455\ttotal: 4.02ms\tremaining: 237ms\n","5:\tlearn: 1.1608116\ttotal: 4.66ms\tremaining: 228ms\n","6:\tlearn: 1.1377285\ttotal: 4.94ms\tremaining: 207ms\n","7:\tlearn: 1.1137744\ttotal: 5.61ms\tremaining: 205ms\n","8:\tlearn: 1.0899357\ttotal: 6.25ms\tremaining: 202ms\n","9:\tlearn: 1.0657042\ttotal: 6.89ms\tremaining: 200ms\n","10:\tlearn: 1.0468388\ttotal: 7.52ms\tremaining: 198ms\n","11:\tlearn: 1.0250947\ttotal: 7.76ms\tremaining: 186ms\n","12:\tlearn: 1.0051607\ttotal: 8.38ms\tremaining: 185ms\n","13:\tlearn: 0.9915922\ttotal: 9.26ms\tremaining: 189ms\n","14:\tlearn: 0.9700802\ttotal: 9.98ms\tremaining: 190ms\n","15:\tlearn: 0.9532387\ttotal: 10.8ms\tremaining: 192ms\n","16:\tlearn: 0.9367616\ttotal: 11.7ms\tremaining: 195ms\n","17:\tlearn: 0.9244033\ttotal: 12.3ms\tremaining: 192ms\n","18:\tlearn: 0.9176137\ttotal: 12.6ms\tremaining: 187ms\n","19:\tlearn: 0.9061514\ttotal: 13.5ms\tremaining: 189ms\n","20:\tlearn: 0.8955954\ttotal: 14.3ms\tremaining: 190ms\n","21:\tlearn: 0.8834471\ttotal: 15.2ms\tremaining: 192ms\n","22:\tlearn: 0.8722552\ttotal: 16.1ms\tremaining: 194ms\n","23:\tlearn: 0.8678411\ttotal: 16.6ms\tremaining: 190ms\n","24:\tlearn: 0.8587913\ttotal: 17.2ms\tremaining: 189ms\n","25:\tlearn: 0.8534296\ttotal: 18.1ms\tremaining: 190ms\n","26:\tlearn: 0.8491068\ttotal: 18.4ms\tremaining: 186ms\n","27:\tlearn: 0.8419546\ttotal: 19.1ms\tremaining: 186ms\n","28:\tlearn: 0.8327295\ttotal: 20ms\tremaining: 187ms\n","29:\tlearn: 0.8261831\ttotal: 20.7ms\tremaining: 186ms\n","30:\tlearn: 0.8228851\ttotal: 21.4ms\tremaining: 186ms\n","31:\tlearn: 0.8127272\ttotal: 22ms\tremaining: 184ms\n","32:\tlearn: 0.8094529\ttotal: 22.3ms\tremaining: 180ms\n","33:\tlearn: 0.8025385\ttotal: 23.2ms\tremaining: 181ms\n","34:\tlearn: 0.7971690\ttotal: 23.9ms\tremaining: 181ms\n","35:\tlearn: 0.7915481\ttotal: 24.7ms\tremaining: 181ms\n","36:\tlearn: 0.7851719\ttotal: 25.6ms\tremaining: 182ms\n","37:\tlearn: 0.7795086\ttotal: 26.4ms\tremaining: 182ms\n","38:\tlearn: 0.7780714\ttotal: 27.2ms\tremaining: 182ms\n","39:\tlearn: 0.7739250\ttotal: 28.1ms\tremaining: 182ms\n","40:\tlearn: 0.7699666\ttotal: 31.6ms\tremaining: 199ms\n","41:\tlearn: 0.7651679\ttotal: 32.4ms\tremaining: 199ms\n","42:\tlearn: 0.7607381\ttotal: 33.3ms\tremaining: 199ms\n","43:\tlearn: 0.7541709\ttotal: 34.2ms\tremaining: 199ms\n","44:\tlearn: 0.7503675\ttotal: 35.1ms\tremaining: 199ms\n","45:\tlearn: 0.7453284\ttotal: 35.9ms\tremaining: 198ms\n","46:\tlearn: 0.7383663\ttotal: 36.8ms\tremaining: 198ms\n","47:\tlearn: 0.7333738\ttotal: 37.7ms\tremaining: 198ms\n","48:\tlearn: 0.7298952\ttotal: 38.5ms\tremaining: 197ms\n","49:\tlearn: 0.7255606\ttotal: 39.4ms\tremaining: 197ms\n","50:\tlearn: 0.7231828\ttotal: 40.3ms\tremaining: 197ms\n","51:\tlearn: 0.7181190\ttotal: 41.3ms\tremaining: 197ms\n","52:\tlearn: 0.7144574\ttotal: 41.9ms\tremaining: 195ms\n","53:\tlearn: 0.7132958\ttotal: 42.3ms\tremaining: 193ms\n","54:\tlearn: 0.7104898\ttotal: 43.5ms\tremaining: 194ms\n","55:\tlearn: 0.7056832\ttotal: 47.9ms\tremaining: 209ms\n","56:\tlearn: 0.7009055\ttotal: 48.5ms\tremaining: 207ms\n","57:\tlearn: 0.6986684\ttotal: 49.2ms\tremaining: 205ms\n","58:\tlearn: 0.6958914\ttotal: 49.8ms\tremaining: 203ms\n","59:\tlearn: 0.6952255\ttotal: 50ms\tremaining: 200ms\n","60:\tlearn: 0.6924661\ttotal: 50.6ms\tremaining: 198ms\n","61:\tlearn: 0.6871389\ttotal: 51.2ms\tremaining: 197ms\n","62:\tlearn: 0.6831506\ttotal: 51.8ms\tremaining: 195ms\n","63:\tlearn: 0.6784613\ttotal: 52.4ms\tremaining: 193ms\n","64:\tlearn: 0.6718829\ttotal: 53.1ms\tremaining: 192ms\n","65:\tlearn: 0.6660243\ttotal: 54ms\tremaining: 191ms\n","66:\tlearn: 0.6623420\ttotal: 54.9ms\tremaining: 191ms\n","67:\tlearn: 0.6590564\ttotal: 55.8ms\tremaining: 190ms\n","68:\tlearn: 0.6535202\ttotal: 56.7ms\tremaining: 190ms\n","69:\tlearn: 0.6500897\ttotal: 57.3ms\tremaining: 188ms\n","70:\tlearn: 0.6453439\ttotal: 58ms\tremaining: 187ms\n","71:\tlearn: 0.6437204\ttotal: 58.6ms\tremaining: 186ms\n","72:\tlearn: 0.6387744\ttotal: 59.3ms\tremaining: 184ms\n","73:\tlearn: 0.6329333\ttotal: 59.9ms\tremaining: 183ms\n","74:\tlearn: 0.6278226\ttotal: 60.5ms\tremaining: 182ms\n","75:\tlearn: 0.6217326\ttotal: 61.2ms\tremaining: 180ms\n","76:\tlearn: 0.6183179\ttotal: 61.9ms\tremaining: 179ms\n","77:\tlearn: 0.6121832\ttotal: 62.6ms\tremaining: 178ms\n","78:\tlearn: 0.6102174\ttotal: 63.2ms\tremaining: 177ms\n","79:\tlearn: 0.6056678\ttotal: 63.9ms\tremaining: 176ms\n","80:\tlearn: 0.6021912\ttotal: 64.8ms\tremaining: 175ms\n","81:\tlearn: 0.5974916\ttotal: 65.7ms\tremaining: 175ms\n","82:\tlearn: 0.5945327\ttotal: 66.6ms\tremaining: 174ms\n","83:\tlearn: 0.5912376\ttotal: 67.4ms\tremaining: 173ms\n","84:\tlearn: 0.5871302\ttotal: 68.2ms\tremaining: 173ms\n","85:\tlearn: 0.5823186\ttotal: 68.9ms\tremaining: 172ms\n","86:\tlearn: 0.5791597\ttotal: 69.6ms\tremaining: 170ms\n","87:\tlearn: 0.5766189\ttotal: 70.2ms\tremaining: 169ms\n","88:\tlearn: 0.5736962\ttotal: 70.8ms\tremaining: 168ms\n","89:\tlearn: 0.5696703\ttotal: 71.5ms\tremaining: 167ms\n","90:\tlearn: 0.5661221\ttotal: 72.1ms\tremaining: 166ms\n","91:\tlearn: 0.5632219\ttotal: 73ms\tremaining: 165ms\n","92:\tlearn: 0.5605265\ttotal: 73.9ms\tremaining: 164ms\n","93:\tlearn: 0.5586473\ttotal: 74.8ms\tremaining: 164ms\n","94:\tlearn: 0.5565736\ttotal: 75.5ms\tremaining: 163ms\n","95:\tlearn: 0.5520385\ttotal: 76.1ms\tremaining: 162ms\n","96:\tlearn: 0.5489294\ttotal: 76.8ms\tremaining: 161ms\n","97:\tlearn: 0.5434906\ttotal: 77.8ms\tremaining: 160ms\n","98:\tlearn: 0.5404383\ttotal: 78.7ms\tremaining: 160ms\n","99:\tlearn: 0.5372298\ttotal: 79.7ms\tremaining: 159ms\n","100:\tlearn: 0.5353981\ttotal: 80.3ms\tremaining: 158ms\n","101:\tlearn: 0.5325123\ttotal: 81ms\tremaining: 157ms\n","102:\tlearn: 0.5306192\ttotal: 81.6ms\tremaining: 156ms\n","103:\tlearn: 0.5286153\ttotal: 82.3ms\tremaining: 155ms\n","104:\tlearn: 0.5252023\ttotal: 83.1ms\tremaining: 154ms\n","105:\tlearn: 0.5219885\ttotal: 84ms\tremaining: 154ms\n","106:\tlearn: 0.5191399\ttotal: 84.6ms\tremaining: 153ms\n","107:\tlearn: 0.5165309\ttotal: 85.3ms\tremaining: 152ms\n","108:\tlearn: 0.5148462\ttotal: 86ms\tremaining: 151ms\n","109:\tlearn: 0.5121145\ttotal: 86.8ms\tremaining: 150ms\n","110:\tlearn: 0.5100314\ttotal: 87.7ms\tremaining: 149ms\n","111:\tlearn: 0.5083268\ttotal: 88.6ms\tremaining: 149ms\n","112:\tlearn: 0.5062555\ttotal: 89.4ms\tremaining: 148ms\n","113:\tlearn: 0.5039380\ttotal: 90ms\tremaining: 147ms\n","114:\tlearn: 0.5013916\ttotal: 103ms\tremaining: 166ms\n","115:\tlearn: 0.4996651\ttotal: 104ms\tremaining: 165ms\n","116:\tlearn: 0.4974815\ttotal: 105ms\tremaining: 164ms\n","117:\tlearn: 0.4942338\ttotal: 106ms\tremaining: 163ms\n","118:\tlearn: 0.4918423\ttotal: 106ms\tremaining: 162ms\n","119:\tlearn: 0.4898216\ttotal: 107ms\tremaining: 161ms\n","120:\tlearn: 0.4886123\ttotal: 111ms\tremaining: 164ms\n","121:\tlearn: 0.4862344\ttotal: 113ms\tremaining: 166ms\n","122:\tlearn: 0.4835621\ttotal: 114ms\tremaining: 164ms\n","123:\tlearn: 0.4811328\ttotal: 115ms\tremaining: 163ms\n","124:\tlearn: 0.4798732\ttotal: 115ms\tremaining: 162ms\n","125:\tlearn: 0.4781046\ttotal: 116ms\tremaining: 161ms\n","126:\tlearn: 0.4766178\ttotal: 117ms\tremaining: 160ms\n","127:\tlearn: 0.4743058\ttotal: 118ms\tremaining: 158ms\n","128:\tlearn: 0.4720638\ttotal: 118ms\tremaining: 157ms\n","129:\tlearn: 0.4703952\ttotal: 119ms\tremaining: 156ms\n","130:\tlearn: 0.4673619\ttotal: 120ms\tremaining: 155ms\n","131:\tlearn: 0.4652821\ttotal: 121ms\tremaining: 154ms\n","132:\tlearn: 0.4629595\ttotal: 122ms\tremaining: 153ms\n","133:\tlearn: 0.4611529\ttotal: 122ms\tremaining: 152ms\n","134:\tlearn: 0.4573716\ttotal: 123ms\tremaining: 151ms\n","135:\tlearn: 0.4558905\ttotal: 124ms\tremaining: 149ms\n","136:\tlearn: 0.4535491\ttotal: 125ms\tremaining: 148ms\n","137:\tlearn: 0.4510700\ttotal: 125ms\tremaining: 147ms\n","138:\tlearn: 0.4491596\ttotal: 126ms\tremaining: 146ms\n","139:\tlearn: 0.4466022\ttotal: 127ms\tremaining: 145ms\n","140:\tlearn: 0.4451661\ttotal: 128ms\tremaining: 144ms\n","141:\tlearn: 0.4430643\ttotal: 128ms\tremaining: 143ms\n","142:\tlearn: 0.4416957\ttotal: 129ms\tremaining: 142ms\n","143:\tlearn: 0.4392201\ttotal: 130ms\tremaining: 141ms\n","144:\tlearn: 0.4374637\ttotal: 131ms\tremaining: 140ms\n","145:\tlearn: 0.4359344\ttotal: 138ms\tremaining: 146ms\n","146:\tlearn: 0.4345665\ttotal: 139ms\tremaining: 145ms\n","147:\tlearn: 0.4321360\ttotal: 140ms\tremaining: 144ms\n","148:\tlearn: 0.4303894\ttotal: 141ms\tremaining: 143ms\n","149:\tlearn: 0.4291710\ttotal: 151ms\tremaining: 151ms\n","150:\tlearn: 0.4272539\ttotal: 157ms\tremaining: 155ms\n","151:\tlearn: 0.4254938\ttotal: 158ms\tremaining: 154ms\n","152:\tlearn: 0.4240328\ttotal: 160ms\tremaining: 154ms\n","153:\tlearn: 0.4225574\ttotal: 161ms\tremaining: 152ms\n","154:\tlearn: 0.4206012\ttotal: 161ms\tremaining: 151ms\n","155:\tlearn: 0.4181535\ttotal: 162ms\tremaining: 149ms\n","156:\tlearn: 0.4168230\ttotal: 163ms\tremaining: 148ms\n","157:\tlearn: 0.4154556\ttotal: 163ms\tremaining: 147ms\n","158:\tlearn: 0.4132732\ttotal: 164ms\tremaining: 145ms\n","159:\tlearn: 0.4116131\ttotal: 165ms\tremaining: 144ms\n","160:\tlearn: 0.4095238\ttotal: 166ms\tremaining: 143ms\n","161:\tlearn: 0.4080964\ttotal: 166ms\tremaining: 142ms\n","162:\tlearn: 0.4067044\ttotal: 167ms\tremaining: 140ms\n","163:\tlearn: 0.4044185\ttotal: 168ms\tremaining: 139ms\n","164:\tlearn: 0.4026400\ttotal: 169ms\tremaining: 138ms\n","165:\tlearn: 0.4012025\ttotal: 169ms\tremaining: 137ms\n","166:\tlearn: 0.3994370\ttotal: 170ms\tremaining: 135ms\n","167:\tlearn: 0.3985563\ttotal: 171ms\tremaining: 134ms\n","168:\tlearn: 0.3960162\ttotal: 171ms\tremaining: 133ms\n","169:\tlearn: 0.3952564\ttotal: 172ms\tremaining: 131ms\n","170:\tlearn: 0.3935742\ttotal: 173ms\tremaining: 130ms\n","171:\tlearn: 0.3912456\ttotal: 173ms\tremaining: 129ms\n","172:\tlearn: 0.3905562\ttotal: 174ms\tremaining: 128ms\n","173:\tlearn: 0.3892985\ttotal: 175ms\tremaining: 127ms\n","174:\tlearn: 0.3874661\ttotal: 175ms\tremaining: 125ms\n","175:\tlearn: 0.3871900\ttotal: 176ms\tremaining: 124ms\n","176:\tlearn: 0.3849238\ttotal: 176ms\tremaining: 122ms\n","177:\tlearn: 0.3835629\ttotal: 177ms\tremaining: 121ms\n","178:\tlearn: 0.3824170\ttotal: 178ms\tremaining: 120ms\n","179:\tlearn: 0.3807671\ttotal: 178ms\tremaining: 119ms\n","180:\tlearn: 0.3795440\ttotal: 179ms\tremaining: 118ms\n","181:\tlearn: 0.3781653\ttotal: 190ms\tremaining: 123ms\n","182:\tlearn: 0.3758810\ttotal: 196ms\tremaining: 125ms\n","183:\tlearn: 0.3742205\ttotal: 197ms\tremaining: 124ms\n","184:\tlearn: 0.3728364\ttotal: 197ms\tremaining: 123ms\n","185:\tlearn: 0.3710835\ttotal: 198ms\tremaining: 121ms\n","186:\tlearn: 0.3690528\ttotal: 199ms\tremaining: 120ms\n","187:\tlearn: 0.3676477\ttotal: 199ms\tremaining: 119ms\n","188:\tlearn: 0.3668918\ttotal: 204ms\tremaining: 120ms\n","189:\tlearn: 0.3658759\ttotal: 204ms\tremaining: 118ms\n","190:\tlearn: 0.3647413\ttotal: 205ms\tremaining: 117ms\n","191:\tlearn: 0.3625242\ttotal: 206ms\tremaining: 116ms\n","192:\tlearn: 0.3618080\ttotal: 206ms\tremaining: 114ms\n","193:\tlearn: 0.3604145\ttotal: 207ms\tremaining: 113ms\n","194:\tlearn: 0.3588783\ttotal: 208ms\tremaining: 112ms\n","195:\tlearn: 0.3571713\ttotal: 208ms\tremaining: 110ms\n","196:\tlearn: 0.3553469\ttotal: 209ms\tremaining: 109ms\n","197:\tlearn: 0.3537859\ttotal: 209ms\tremaining: 108ms\n","198:\tlearn: 0.3523166\ttotal: 210ms\tremaining: 107ms\n","199:\tlearn: 0.3508941\ttotal: 211ms\tremaining: 105ms\n","200:\tlearn: 0.3501913\ttotal: 211ms\tremaining: 104ms\n","201:\tlearn: 0.3493283\ttotal: 212ms\tremaining: 103ms\n","202:\tlearn: 0.3485329\ttotal: 213ms\tremaining: 102ms\n","203:\tlearn: 0.3474857\ttotal: 213ms\tremaining: 100ms\n","204:\tlearn: 0.3467469\ttotal: 214ms\tremaining: 99.3ms\n","205:\tlearn: 0.3457702\ttotal: 215ms\tremaining: 98.2ms\n","206:\tlearn: 0.3435729\ttotal: 216ms\tremaining: 97ms\n","207:\tlearn: 0.3420829\ttotal: 217ms\tremaining: 95.8ms\n","208:\tlearn: 0.3406506\ttotal: 222ms\tremaining: 96.6ms\n","209:\tlearn: 0.3393338\ttotal: 223ms\tremaining: 95.4ms\n","210:\tlearn: 0.3383706\ttotal: 223ms\tremaining: 94.2ms\n","211:\tlearn: 0.3364713\ttotal: 224ms\tremaining: 93ms\n","212:\tlearn: 0.3343006\ttotal: 225ms\tremaining: 91.7ms\n","213:\tlearn: 0.3335121\ttotal: 225ms\tremaining: 90.5ms\n","214:\tlearn: 0.3324485\ttotal: 231ms\tremaining: 91.2ms\n","215:\tlearn: 0.3314511\ttotal: 231ms\tremaining: 90ms\n","216:\tlearn: 0.3301119\ttotal: 232ms\tremaining: 88.7ms\n","217:\tlearn: 0.3292929\ttotal: 233ms\tremaining: 87.5ms\n","218:\tlearn: 0.3282516\ttotal: 233ms\tremaining: 86.3ms\n","219:\tlearn: 0.3269290\ttotal: 234ms\tremaining: 85.1ms\n","220:\tlearn: 0.3260945\ttotal: 237ms\tremaining: 84.8ms\n","221:\tlearn: 0.3253795\ttotal: 238ms\tremaining: 83.7ms\n","222:\tlearn: 0.3244986\ttotal: 239ms\tremaining: 82.5ms\n","223:\tlearn: 0.3234463\ttotal: 240ms\tremaining: 81.3ms\n","224:\tlearn: 0.3225585\ttotal: 246ms\tremaining: 82ms\n","225:\tlearn: 0.3216327\ttotal: 247ms\tremaining: 80.8ms\n","226:\tlearn: 0.3197132\ttotal: 247ms\tremaining: 79.5ms\n","227:\tlearn: 0.3187273\ttotal: 248ms\tremaining: 78.3ms\n","228:\tlearn: 0.3175807\ttotal: 249ms\tremaining: 77.1ms\n","229:\tlearn: 0.3165287\ttotal: 249ms\tremaining: 75.8ms\n","230:\tlearn: 0.3159537\ttotal: 254ms\tremaining: 76ms\n","231:\tlearn: 0.3155273\ttotal: 255ms\tremaining: 74.7ms\n","232:\tlearn: 0.3145183\ttotal: 256ms\tremaining: 73.5ms\n","233:\tlearn: 0.3135457\ttotal: 256ms\tremaining: 72.3ms\n","234:\tlearn: 0.3125895\ttotal: 257ms\tremaining: 71.1ms\n","235:\tlearn: 0.3110892\ttotal: 258ms\tremaining: 69.9ms\n","236:\tlearn: 0.3094045\ttotal: 265ms\tremaining: 70.5ms\n","237:\tlearn: 0.3076638\ttotal: 268ms\tremaining: 69.7ms\n","238:\tlearn: 0.3058902\ttotal: 270ms\tremaining: 69ms\n","239:\tlearn: 0.3052173\ttotal: 273ms\tremaining: 68.2ms\n","240:\tlearn: 0.3039333\ttotal: 279ms\tremaining: 68.3ms\n","241:\tlearn: 0.3030458\ttotal: 287ms\tremaining: 68.7ms\n","242:\tlearn: 0.3024459\ttotal: 290ms\tremaining: 68.1ms\n","243:\tlearn: 0.3017459\ttotal: 292ms\tremaining: 67.1ms\n","244:\tlearn: 0.3010043\ttotal: 293ms\tremaining: 65.8ms\n","245:\tlearn: 0.2999426\ttotal: 317ms\tremaining: 69.6ms\n","246:\tlearn: 0.2989798\ttotal: 320ms\tremaining: 68.6ms\n","247:\tlearn: 0.2984907\ttotal: 323ms\tremaining: 67.7ms\n","248:\tlearn: 0.2978318\ttotal: 326ms\tremaining: 66.8ms\n","249:\tlearn: 0.2968380\ttotal: 327ms\tremaining: 65.5ms\n","250:\tlearn: 0.2963292\ttotal: 329ms\tremaining: 64.3ms\n","251:\tlearn: 0.2954323\ttotal: 332ms\tremaining: 63.2ms\n","252:\tlearn: 0.2946893\ttotal: 333ms\tremaining: 61.9ms\n","253:\tlearn: 0.2939554\ttotal: 335ms\tremaining: 60.7ms\n","254:\tlearn: 0.2935020\ttotal: 337ms\tremaining: 59.4ms\n","255:\tlearn: 0.2930253\ttotal: 348ms\tremaining: 59.9ms\n","256:\tlearn: 0.2923828\ttotal: 355ms\tremaining: 59.4ms\n","257:\tlearn: 0.2913328\ttotal: 357ms\tremaining: 58.1ms\n","258:\tlearn: 0.2902869\ttotal: 358ms\tremaining: 56.7ms\n","259:\tlearn: 0.2887157\ttotal: 363ms\tremaining: 55.8ms\n","260:\tlearn: 0.2879979\ttotal: 364ms\tremaining: 54.5ms\n","261:\tlearn: 0.2871900\ttotal: 366ms\tremaining: 53.1ms\n","262:\tlearn: 0.2866245\ttotal: 368ms\tremaining: 51.8ms\n","263:\tlearn: 0.2851807\ttotal: 370ms\tremaining: 50.5ms\n","264:\tlearn: 0.2844976\ttotal: 372ms\tremaining: 49.1ms\n","265:\tlearn: 0.2834346\ttotal: 377ms\tremaining: 48.1ms\n","266:\tlearn: 0.2827304\ttotal: 378ms\tremaining: 46.7ms\n","267:\tlearn: 0.2816357\ttotal: 386ms\tremaining: 46.1ms\n","268:\tlearn: 0.2809024\ttotal: 388ms\tremaining: 44.7ms\n","269:\tlearn: 0.2802092\ttotal: 390ms\tremaining: 43.4ms\n","270:\tlearn: 0.2793477\ttotal: 405ms\tremaining: 43.4ms\n","271:\tlearn: 0.2788888\ttotal: 417ms\tremaining: 42.9ms\n","272:\tlearn: 0.2782351\ttotal: 419ms\tremaining: 41.4ms\n","273:\tlearn: 0.2774613\ttotal: 420ms\tremaining: 39.9ms\n","274:\tlearn: 0.2769185\ttotal: 423ms\tremaining: 38.4ms\n","275:\tlearn: 0.2762549\ttotal: 425ms\tremaining: 37ms\n","276:\tlearn: 0.2754203\ttotal: 426ms\tremaining: 35.4ms\n","277:\tlearn: 0.2741460\ttotal: 430ms\tremaining: 34ms\n","278:\tlearn: 0.2735989\ttotal: 431ms\tremaining: 32.4ms\n","279:\tlearn: 0.2728255\ttotal: 432ms\tremaining: 30.8ms\n","280:\tlearn: 0.2722479\ttotal: 432ms\tremaining: 29.2ms\n","281:\tlearn: 0.2715279\ttotal: 433ms\tremaining: 27.7ms\n","282:\tlearn: 0.2710817\ttotal: 442ms\tremaining: 26.6ms\n","283:\tlearn: 0.2704999\ttotal: 446ms\tremaining: 25.1ms\n","284:\tlearn: 0.2696643\ttotal: 447ms\tremaining: 23.5ms\n","285:\tlearn: 0.2689461\ttotal: 448ms\tremaining: 21.9ms\n","286:\tlearn: 0.2683378\ttotal: 448ms\tremaining: 20.3ms\n","287:\tlearn: 0.2671458\ttotal: 467ms\tremaining: 19.5ms\n","288:\tlearn: 0.2667320\ttotal: 470ms\tremaining: 17.9ms\n","289:\tlearn: 0.2661156\ttotal: 470ms\tremaining: 16.2ms\n","290:\tlearn: 0.2653303\ttotal: 472ms\tremaining: 14.6ms\n","291:\tlearn: 0.2647371\ttotal: 473ms\tremaining: 13ms\n","292:\tlearn: 0.2644237\ttotal: 482ms\tremaining: 11.5ms\n","293:\tlearn: 0.2635853\ttotal: 488ms\tremaining: 9.96ms\n","294:\tlearn: 0.2632301\ttotal: 494ms\tremaining: 8.37ms\n","295:\tlearn: 0.2625924\ttotal: 495ms\tremaining: 6.69ms\n","296:\tlearn: 0.2618969\ttotal: 496ms\tremaining: 5.01ms\n","297:\tlearn: 0.2609572\ttotal: 497ms\tremaining: 3.33ms\n","298:\tlearn: 0.2604678\ttotal: 502ms\tremaining: 1.68ms\n","299:\tlearn: 0.2597029\ttotal: 503ms\tremaining: 0us\n","0:\tlearn: 1.3352637\ttotal: 3.78ms\tremaining: 1.13s\n","1:\tlearn: 1.2863260\ttotal: 4.12ms\tremaining: 613ms\n","2:\tlearn: 1.2474921\ttotal: 4.76ms\tremaining: 471ms\n","3:\tlearn: 1.2133277\ttotal: 5.05ms\tremaining: 373ms\n","4:\tlearn: 1.1842551\ttotal: 6.07ms\tremaining: 358ms\n","5:\tlearn: 1.1528261\ttotal: 6.92ms\tremaining: 339ms\n","6:\tlearn: 1.1297742\ttotal: 7.87ms\tremaining: 329ms\n","7:\tlearn: 1.1092226\ttotal: 8.23ms\tremaining: 300ms\n","8:\tlearn: 1.0855267\ttotal: 9.34ms\tremaining: 302ms\n","9:\tlearn: 1.0696138\ttotal: 14.6ms\tremaining: 425ms\n","10:\tlearn: 1.0502101\ttotal: 19.1ms\tremaining: 502ms\n","11:\tlearn: 1.0324683\ttotal: 21.2ms\tremaining: 508ms\n","12:\tlearn: 1.0155856\ttotal: 24.1ms\tremaining: 531ms\n","13:\tlearn: 1.0001825\ttotal: 26.8ms\tremaining: 547ms\n","14:\tlearn: 0.9850938\ttotal: 27.7ms\tremaining: 526ms\n","15:\tlearn: 0.9701106\ttotal: 29.9ms\tremaining: 531ms\n","16:\tlearn: 0.9602079\ttotal: 30.5ms\tremaining: 508ms\n","17:\tlearn: 0.9503363\ttotal: 30.8ms\tremaining: 483ms\n","18:\tlearn: 0.9411242\ttotal: 39.1ms\tremaining: 579ms\n","19:\tlearn: 0.9357355\ttotal: 39.5ms\tremaining: 553ms\n","20:\tlearn: 0.9209860\ttotal: 40.4ms\tremaining: 536ms\n","21:\tlearn: 0.9110943\ttotal: 48.6ms\tremaining: 614ms\n","22:\tlearn: 0.9037407\ttotal: 49.5ms\tremaining: 596ms\n","23:\tlearn: 0.8958573\ttotal: 52.5ms\tremaining: 603ms\n","24:\tlearn: 0.8907264\ttotal: 59.1ms\tremaining: 650ms\n","25:\tlearn: 0.8841039\ttotal: 61.5ms\tremaining: 648ms\n","26:\tlearn: 0.8725045\ttotal: 65.1ms\tremaining: 658ms\n","27:\tlearn: 0.8685899\ttotal: 66.8ms\tremaining: 648ms\n","28:\tlearn: 0.8653595\ttotal: 69.3ms\tremaining: 648ms\n","29:\tlearn: 0.8608526\ttotal: 70.2ms\tremaining: 632ms\n","30:\tlearn: 0.8552218\ttotal: 76.7ms\tremaining: 666ms\n","31:\tlearn: 0.8525716\ttotal: 77.4ms\tremaining: 648ms\n","32:\tlearn: 0.8444863\ttotal: 78.1ms\tremaining: 632ms\n","33:\tlearn: 0.8403096\ttotal: 78.4ms\tremaining: 613ms\n","34:\tlearn: 0.8343313\ttotal: 79ms\tremaining: 598ms\n","35:\tlearn: 0.8302663\ttotal: 79.7ms\tremaining: 584ms\n","36:\tlearn: 0.8266934\ttotal: 90.6ms\tremaining: 644ms\n","37:\tlearn: 0.8211174\ttotal: 91.7ms\tremaining: 632ms\n","38:\tlearn: 0.8158476\ttotal: 93ms\tremaining: 623ms\n","39:\tlearn: 0.8118928\ttotal: 96.1ms\tremaining: 624ms\n","40:\tlearn: 0.8069258\ttotal: 96.9ms\tremaining: 612ms\n","41:\tlearn: 0.8011384\ttotal: 98.2ms\tremaining: 603ms\n","42:\tlearn: 0.7976295\ttotal: 99.2ms\tremaining: 593ms\n","43:\tlearn: 0.7933205\ttotal: 100ms\tremaining: 583ms\n","44:\tlearn: 0.7905095\ttotal: 107ms\tremaining: 609ms\n","45:\tlearn: 0.7843097\ttotal: 110ms\tremaining: 605ms\n","46:\tlearn: 0.7824160\ttotal: 117ms\tremaining: 630ms\n","47:\tlearn: 0.7772354\ttotal: 119ms\tremaining: 625ms\n","48:\tlearn: 0.7720360\ttotal: 121ms\tremaining: 620ms\n","49:\tlearn: 0.7685235\ttotal: 122ms\tremaining: 611ms\n","50:\tlearn: 0.7657095\ttotal: 125ms\tremaining: 611ms\n","51:\tlearn: 0.7594892\ttotal: 127ms\tremaining: 606ms\n","52:\tlearn: 0.7554539\ttotal: 128ms\tremaining: 597ms\n","53:\tlearn: 0.7500835\ttotal: 135ms\tremaining: 613ms\n","54:\tlearn: 0.7462427\ttotal: 138ms\tremaining: 614ms\n","55:\tlearn: 0.7403701\ttotal: 141ms\tremaining: 613ms\n","56:\tlearn: 0.7366836\ttotal: 144ms\tremaining: 613ms\n","57:\tlearn: 0.7327923\ttotal: 148ms\tremaining: 618ms\n","58:\tlearn: 0.7291729\ttotal: 155ms\tremaining: 634ms\n","59:\tlearn: 0.7244274\ttotal: 157ms\tremaining: 630ms\n","60:\tlearn: 0.7213146\ttotal: 160ms\tremaining: 627ms\n","61:\tlearn: 0.7188520\ttotal: 164ms\tremaining: 631ms\n","62:\tlearn: 0.7147604\ttotal: 166ms\tremaining: 626ms\n","63:\tlearn: 0.7114533\ttotal: 167ms\tremaining: 617ms\n","64:\tlearn: 0.7071193\ttotal: 174ms\tremaining: 630ms\n","65:\tlearn: 0.7019143\ttotal: 177ms\tremaining: 628ms\n","66:\tlearn: 0.6979299\ttotal: 178ms\tremaining: 620ms\n","67:\tlearn: 0.6927594\ttotal: 185ms\tremaining: 631ms\n","68:\tlearn: 0.6891801\ttotal: 188ms\tremaining: 629ms\n","69:\tlearn: 0.6852330\ttotal: 192ms\tremaining: 632ms\n","70:\tlearn: 0.6805894\ttotal: 194ms\tremaining: 625ms\n","71:\tlearn: 0.6743197\ttotal: 195ms\tremaining: 617ms\n","72:\tlearn: 0.6700148\ttotal: 197ms\tremaining: 613ms\n","73:\tlearn: 0.6679202\ttotal: 199ms\tremaining: 607ms\n","74:\tlearn: 0.6639880\ttotal: 201ms\tremaining: 604ms\n","75:\tlearn: 0.6601083\ttotal: 203ms\tremaining: 598ms\n","76:\tlearn: 0.6568279\ttotal: 205ms\tremaining: 593ms\n","77:\tlearn: 0.6524641\ttotal: 206ms\tremaining: 586ms\n","78:\tlearn: 0.6498713\ttotal: 207ms\tremaining: 580ms\n","79:\tlearn: 0.6466445\ttotal: 209ms\tremaining: 575ms\n","80:\tlearn: 0.6436552\ttotal: 212ms\tremaining: 572ms\n","81:\tlearn: 0.6423470\ttotal: 213ms\tremaining: 566ms\n","82:\tlearn: 0.6398012\ttotal: 214ms\tremaining: 560ms\n","83:\tlearn: 0.6348029\ttotal: 216ms\tremaining: 556ms\n","84:\tlearn: 0.6318102\ttotal: 218ms\tremaining: 551ms\n","85:\tlearn: 0.6280734\ttotal: 219ms\tremaining: 546ms\n","86:\tlearn: 0.6258547\ttotal: 222ms\tremaining: 543ms\n","87:\tlearn: 0.6221645\ttotal: 223ms\tremaining: 536ms\n","88:\tlearn: 0.6195505\ttotal: 225ms\tremaining: 534ms\n","89:\tlearn: 0.6168411\ttotal: 227ms\tremaining: 530ms\n","90:\tlearn: 0.6129592\ttotal: 229ms\tremaining: 526ms\n","91:\tlearn: 0.6105088\ttotal: 231ms\tremaining: 522ms\n","92:\tlearn: 0.6065082\ttotal: 233ms\tremaining: 518ms\n","93:\tlearn: 0.6032765\ttotal: 237ms\tremaining: 519ms\n","94:\tlearn: 0.5998600\ttotal: 239ms\tremaining: 516ms\n","95:\tlearn: 0.5970458\ttotal: 240ms\tremaining: 511ms\n","96:\tlearn: 0.5927485\ttotal: 243ms\tremaining: 509ms\n","97:\tlearn: 0.5893250\ttotal: 246ms\tremaining: 508ms\n","98:\tlearn: 0.5877435\ttotal: 248ms\tremaining: 503ms\n","99:\tlearn: 0.5836481\ttotal: 251ms\tremaining: 502ms\n","100:\tlearn: 0.5820130\ttotal: 256ms\tremaining: 505ms\n","101:\tlearn: 0.5790917\ttotal: 258ms\tremaining: 501ms\n","102:\tlearn: 0.5755450\ttotal: 263ms\tremaining: 502ms\n","103:\tlearn: 0.5717393\ttotal: 270ms\tremaining: 509ms\n","104:\tlearn: 0.5672189\ttotal: 274ms\tremaining: 508ms\n","105:\tlearn: 0.5645369\ttotal: 292ms\tremaining: 534ms\n","106:\tlearn: 0.5623908\ttotal: 296ms\tremaining: 534ms\n","107:\tlearn: 0.5607390\ttotal: 300ms\tremaining: 533ms\n","108:\tlearn: 0.5589891\ttotal: 305ms\tremaining: 534ms\n","109:\tlearn: 0.5564456\ttotal: 307ms\tremaining: 530ms\n","110:\tlearn: 0.5536042\ttotal: 308ms\tremaining: 524ms\n","111:\tlearn: 0.5519766\ttotal: 310ms\tremaining: 520ms\n","112:\tlearn: 0.5500057\ttotal: 311ms\tremaining: 515ms\n","113:\tlearn: 0.5475923\ttotal: 314ms\tremaining: 513ms\n","114:\tlearn: 0.5443982\ttotal: 315ms\tremaining: 507ms\n","115:\tlearn: 0.5426385\ttotal: 317ms\tremaining: 503ms\n","116:\tlearn: 0.5402240\ttotal: 319ms\tremaining: 498ms\n","117:\tlearn: 0.5373540\ttotal: 320ms\tremaining: 494ms\n","118:\tlearn: 0.5351877\ttotal: 325ms\tremaining: 494ms\n","119:\tlearn: 0.5322904\ttotal: 327ms\tremaining: 491ms\n","120:\tlearn: 0.5279342\ttotal: 328ms\tremaining: 485ms\n","121:\tlearn: 0.5268215\ttotal: 330ms\tremaining: 481ms\n","122:\tlearn: 0.5243400\ttotal: 332ms\tremaining: 477ms\n","123:\tlearn: 0.5220581\ttotal: 334ms\tremaining: 474ms\n","124:\tlearn: 0.5192266\ttotal: 335ms\tremaining: 469ms\n","125:\tlearn: 0.5177008\ttotal: 337ms\tremaining: 466ms\n","126:\tlearn: 0.5161260\ttotal: 339ms\tremaining: 461ms\n","127:\tlearn: 0.5137871\ttotal: 341ms\tremaining: 458ms\n","128:\tlearn: 0.5115241\ttotal: 343ms\tremaining: 455ms\n","129:\tlearn: 0.5098382\ttotal: 344ms\tremaining: 450ms\n","130:\tlearn: 0.5072307\ttotal: 346ms\tremaining: 446ms\n","131:\tlearn: 0.5050611\ttotal: 348ms\tremaining: 443ms\n","132:\tlearn: 0.5029954\ttotal: 349ms\tremaining: 439ms\n","133:\tlearn: 0.5007663\ttotal: 354ms\tremaining: 439ms\n","134:\tlearn: 0.4990807\ttotal: 356ms\tremaining: 435ms\n","135:\tlearn: 0.4954951\ttotal: 358ms\tremaining: 432ms\n","136:\tlearn: 0.4937373\ttotal: 360ms\tremaining: 428ms\n","137:\tlearn: 0.4915754\ttotal: 362ms\tremaining: 425ms\n","138:\tlearn: 0.4897735\ttotal: 364ms\tremaining: 421ms\n","139:\tlearn: 0.4871330\ttotal: 366ms\tremaining: 418ms\n","140:\tlearn: 0.4855587\ttotal: 368ms\tremaining: 415ms\n","141:\tlearn: 0.4844526\ttotal: 369ms\tremaining: 411ms\n","142:\tlearn: 0.4832861\ttotal: 371ms\tremaining: 407ms\n","143:\tlearn: 0.4823357\ttotal: 373ms\tremaining: 404ms\n","144:\tlearn: 0.4799347\ttotal: 375ms\tremaining: 401ms\n","145:\tlearn: 0.4782915\ttotal: 377ms\tremaining: 397ms\n","146:\tlearn: 0.4766428\ttotal: 379ms\tremaining: 394ms\n","147:\tlearn: 0.4742892\ttotal: 380ms\tremaining: 391ms\n","148:\tlearn: 0.4722889\ttotal: 382ms\tremaining: 387ms\n","149:\tlearn: 0.4702261\ttotal: 384ms\tremaining: 384ms\n","150:\tlearn: 0.4690046\ttotal: 386ms\tremaining: 380ms\n","151:\tlearn: 0.4677745\ttotal: 388ms\tremaining: 377ms\n","152:\tlearn: 0.4665953\ttotal: 390ms\tremaining: 374ms\n","153:\tlearn: 0.4649952\ttotal: 391ms\tremaining: 371ms\n","154:\tlearn: 0.4624966\ttotal: 393ms\tremaining: 368ms\n","155:\tlearn: 0.4605394\ttotal: 395ms\tremaining: 365ms\n","156:\tlearn: 0.4592274\ttotal: 399ms\tremaining: 363ms\n","157:\tlearn: 0.4571445\ttotal: 401ms\tremaining: 361ms\n","158:\tlearn: 0.4568221\ttotal: 402ms\tremaining: 357ms\n","159:\tlearn: 0.4543363\ttotal: 405ms\tremaining: 355ms\n","160:\tlearn: 0.4529577\ttotal: 406ms\tremaining: 351ms\n","161:\tlearn: 0.4514980\ttotal: 411ms\tremaining: 350ms\n","162:\tlearn: 0.4495595\ttotal: 413ms\tremaining: 347ms\n","163:\tlearn: 0.4478417\ttotal: 415ms\tremaining: 344ms\n","164:\tlearn: 0.4466435\ttotal: 416ms\tremaining: 341ms\n","165:\tlearn: 0.4449210\ttotal: 418ms\tremaining: 338ms\n","166:\tlearn: 0.4435081\ttotal: 421ms\tremaining: 335ms\n","167:\tlearn: 0.4417235\ttotal: 422ms\tremaining: 332ms\n","168:\tlearn: 0.4397349\ttotal: 424ms\tremaining: 329ms\n","169:\tlearn: 0.4374463\ttotal: 426ms\tremaining: 326ms\n","170:\tlearn: 0.4359652\ttotal: 428ms\tremaining: 323ms\n","171:\tlearn: 0.4340629\ttotal: 429ms\tremaining: 320ms\n","172:\tlearn: 0.4324273\ttotal: 431ms\tremaining: 317ms\n","173:\tlearn: 0.4307936\ttotal: 433ms\tremaining: 314ms\n","174:\tlearn: 0.4297046\ttotal: 435ms\tremaining: 311ms\n","175:\tlearn: 0.4280919\ttotal: 438ms\tremaining: 309ms\n","176:\tlearn: 0.4271148\ttotal: 441ms\tremaining: 307ms\n","177:\tlearn: 0.4257408\ttotal: 443ms\tremaining: 303ms\n","178:\tlearn: 0.4242886\ttotal: 445ms\tremaining: 301ms\n","179:\tlearn: 0.4223315\ttotal: 446ms\tremaining: 298ms\n","180:\tlearn: 0.4210354\ttotal: 462ms\tremaining: 304ms\n","181:\tlearn: 0.4201862\ttotal: 465ms\tremaining: 301ms\n","182:\tlearn: 0.4193487\ttotal: 466ms\tremaining: 298ms\n","183:\tlearn: 0.4178047\ttotal: 468ms\tremaining: 295ms\n","184:\tlearn: 0.4160308\ttotal: 470ms\tremaining: 292ms\n","185:\tlearn: 0.4142695\ttotal: 472ms\tremaining: 289ms\n","186:\tlearn: 0.4130153\ttotal: 474ms\tremaining: 286ms\n","187:\tlearn: 0.4114148\ttotal: 475ms\tremaining: 283ms\n","188:\tlearn: 0.4097556\ttotal: 480ms\tremaining: 282ms\n","189:\tlearn: 0.4081477\ttotal: 482ms\tremaining: 279ms\n","190:\tlearn: 0.4071458\ttotal: 485ms\tremaining: 277ms\n","191:\tlearn: 0.4059047\ttotal: 486ms\tremaining: 273ms\n","192:\tlearn: 0.4046879\ttotal: 494ms\tremaining: 274ms\n","193:\tlearn: 0.4031894\ttotal: 496ms\tremaining: 271ms\n","194:\tlearn: 0.4019095\ttotal: 498ms\tremaining: 268ms\n","195:\tlearn: 0.4007509\ttotal: 499ms\tremaining: 265ms\n","196:\tlearn: 0.3993594\ttotal: 501ms\tremaining: 262ms\n","197:\tlearn: 0.3986045\ttotal: 503ms\tremaining: 259ms\n","198:\tlearn: 0.3970135\ttotal: 505ms\tremaining: 256ms\n","199:\tlearn: 0.3953241\ttotal: 507ms\tremaining: 253ms\n","200:\tlearn: 0.3938247\ttotal: 509ms\tremaining: 251ms\n","201:\tlearn: 0.3922719\ttotal: 513ms\tremaining: 249ms\n","202:\tlearn: 0.3910410\ttotal: 515ms\tremaining: 246ms\n","203:\tlearn: 0.3899619\ttotal: 520ms\tremaining: 245ms\n","204:\tlearn: 0.3888518\ttotal: 524ms\tremaining: 243ms\n","205:\tlearn: 0.3880589\ttotal: 526ms\tremaining: 240ms\n","206:\tlearn: 0.3862928\ttotal: 532ms\tremaining: 239ms\n","207:\tlearn: 0.3853221\ttotal: 533ms\tremaining: 236ms\n","208:\tlearn: 0.3843757\ttotal: 538ms\tremaining: 234ms\n","209:\tlearn: 0.3834602\ttotal: 543ms\tremaining: 233ms\n","210:\tlearn: 0.3822657\ttotal: 546ms\tremaining: 230ms\n","211:\tlearn: 0.3806368\ttotal: 548ms\tremaining: 227ms\n","212:\tlearn: 0.3798182\ttotal: 550ms\tremaining: 225ms\n","213:\tlearn: 0.3786870\ttotal: 555ms\tremaining: 223ms\n","214:\tlearn: 0.3774768\ttotal: 562ms\tremaining: 222ms\n","215:\tlearn: 0.3766545\ttotal: 564ms\tremaining: 219ms\n","216:\tlearn: 0.3749036\ttotal: 566ms\tremaining: 217ms\n","217:\tlearn: 0.3737225\ttotal: 569ms\tremaining: 214ms\n","218:\tlearn: 0.3721044\ttotal: 571ms\tremaining: 211ms\n","219:\tlearn: 0.3706227\ttotal: 572ms\tremaining: 208ms\n","220:\tlearn: 0.3691031\ttotal: 575ms\tremaining: 205ms\n","221:\tlearn: 0.3680730\ttotal: 576ms\tremaining: 202ms\n","222:\tlearn: 0.3672456\ttotal: 578ms\tremaining: 200ms\n","223:\tlearn: 0.3652589\ttotal: 580ms\tremaining: 197ms\n","224:\tlearn: 0.3644585\ttotal: 583ms\tremaining: 194ms\n","225:\tlearn: 0.3628427\ttotal: 584ms\tremaining: 191ms\n","226:\tlearn: 0.3616591\ttotal: 586ms\tremaining: 188ms\n","227:\tlearn: 0.3605970\ttotal: 588ms\tremaining: 186ms\n","228:\tlearn: 0.3597051\ttotal: 589ms\tremaining: 183ms\n","229:\tlearn: 0.3587878\ttotal: 591ms\tremaining: 180ms\n","230:\tlearn: 0.3576002\ttotal: 593ms\tremaining: 177ms\n","231:\tlearn: 0.3565272\ttotal: 595ms\tremaining: 174ms\n","232:\tlearn: 0.3557171\ttotal: 597ms\tremaining: 172ms\n","233:\tlearn: 0.3544014\ttotal: 599ms\tremaining: 169ms\n","234:\tlearn: 0.3534024\ttotal: 601ms\tremaining: 166ms\n","235:\tlearn: 0.3522027\ttotal: 603ms\tremaining: 163ms\n","236:\tlearn: 0.3514300\ttotal: 605ms\tremaining: 161ms\n","237:\tlearn: 0.3507914\ttotal: 606ms\tremaining: 158ms\n","238:\tlearn: 0.3498948\ttotal: 608ms\tremaining: 155ms\n","239:\tlearn: 0.3490899\ttotal: 610ms\tremaining: 152ms\n","240:\tlearn: 0.3483937\ttotal: 611ms\tremaining: 150ms\n","241:\tlearn: 0.3470902\ttotal: 614ms\tremaining: 147ms\n","242:\tlearn: 0.3465126\ttotal: 616ms\tremaining: 145ms\n","243:\tlearn: 0.3452224\ttotal: 618ms\tremaining: 142ms\n","244:\tlearn: 0.3444780\ttotal: 620ms\tremaining: 139ms\n","245:\tlearn: 0.3436385\ttotal: 630ms\tremaining: 138ms\n","246:\tlearn: 0.3421688\ttotal: 632ms\tremaining: 136ms\n","247:\tlearn: 0.3414797\ttotal: 634ms\tremaining: 133ms\n","248:\tlearn: 0.3405401\ttotal: 647ms\tremaining: 132ms\n","249:\tlearn: 0.3395489\ttotal: 649ms\tremaining: 130ms\n","250:\tlearn: 0.3382544\ttotal: 651ms\tremaining: 127ms\n","251:\tlearn: 0.3372977\ttotal: 653ms\tremaining: 124ms\n","252:\tlearn: 0.3366479\ttotal: 655ms\tremaining: 122ms\n","253:\tlearn: 0.3359612\ttotal: 662ms\tremaining: 120ms\n","254:\tlearn: 0.3354720\ttotal: 666ms\tremaining: 118ms\n","255:\tlearn: 0.3341717\ttotal: 669ms\tremaining: 115ms\n","256:\tlearn: 0.3330078\ttotal: 671ms\tremaining: 112ms\n","257:\tlearn: 0.3319723\ttotal: 672ms\tremaining: 109ms\n","258:\tlearn: 0.3310416\ttotal: 674ms\tremaining: 107ms\n","259:\tlearn: 0.3302184\ttotal: 676ms\tremaining: 104ms\n","260:\tlearn: 0.3294319\ttotal: 678ms\tremaining: 101ms\n","261:\tlearn: 0.3283310\ttotal: 680ms\tremaining: 98.6ms\n","262:\tlearn: 0.3276099\ttotal: 682ms\tremaining: 95.9ms\n","263:\tlearn: 0.3269836\ttotal: 684ms\tremaining: 93.3ms\n","264:\tlearn: 0.3260917\ttotal: 686ms\tremaining: 90.6ms\n","265:\tlearn: 0.3250607\ttotal: 688ms\tremaining: 88ms\n","266:\tlearn: 0.3244495\ttotal: 690ms\tremaining: 85.3ms\n","267:\tlearn: 0.3236315\ttotal: 692ms\tremaining: 82.7ms\n","268:\tlearn: 0.3229833\ttotal: 694ms\tremaining: 80ms\n","269:\tlearn: 0.3219859\ttotal: 696ms\tremaining: 77.3ms\n","270:\tlearn: 0.3209662\ttotal: 698ms\tremaining: 74.7ms\n","271:\tlearn: 0.3204945\ttotal: 700ms\tremaining: 72.1ms\n","272:\tlearn: 0.3196231\ttotal: 702ms\tremaining: 69.4ms\n","273:\tlearn: 0.3189974\ttotal: 705ms\tremaining: 66.9ms\n","274:\tlearn: 0.3182654\ttotal: 706ms\tremaining: 64.2ms\n","275:\tlearn: 0.3173835\ttotal: 708ms\tremaining: 61.6ms\n","276:\tlearn: 0.3165913\ttotal: 710ms\tremaining: 58.9ms\n","277:\tlearn: 0.3161213\ttotal: 712ms\tremaining: 56.3ms\n","278:\tlearn: 0.3151654\ttotal: 717ms\tremaining: 53.9ms\n","279:\tlearn: 0.3136049\ttotal: 718ms\tremaining: 51.3ms\n","280:\tlearn: 0.3129354\ttotal: 720ms\tremaining: 48.7ms\n","281:\tlearn: 0.3119878\ttotal: 722ms\tremaining: 46.1ms\n","282:\tlearn: 0.3109391\ttotal: 724ms\tremaining: 43.5ms\n","283:\tlearn: 0.3097205\ttotal: 726ms\tremaining: 40.9ms\n","284:\tlearn: 0.3089031\ttotal: 728ms\tremaining: 38.3ms\n","285:\tlearn: 0.3081573\ttotal: 729ms\tremaining: 35.7ms\n","286:\tlearn: 0.3072272\ttotal: 731ms\tremaining: 33.1ms\n","287:\tlearn: 0.3062617\ttotal: 733ms\tremaining: 30.6ms\n","288:\tlearn: 0.3056910\ttotal: 735ms\tremaining: 28ms\n","289:\tlearn: 0.3047288\ttotal: 737ms\tremaining: 25.4ms\n","290:\tlearn: 0.3041582\ttotal: 739ms\tremaining: 22.8ms\n","291:\tlearn: 0.3030775\ttotal: 741ms\tremaining: 20.3ms\n","292:\tlearn: 0.3023270\ttotal: 743ms\tremaining: 17.7ms\n","293:\tlearn: 0.3016882\ttotal: 745ms\tremaining: 15.2ms\n","294:\tlearn: 0.3007822\ttotal: 747ms\tremaining: 12.7ms\n","295:\tlearn: 0.3000535\ttotal: 751ms\tremaining: 10.1ms\n","296:\tlearn: 0.2992407\ttotal: 754ms\tremaining: 7.62ms\n","297:\tlearn: 0.2986002\ttotal: 756ms\tremaining: 5.07ms\n","298:\tlearn: 0.2979290\ttotal: 759ms\tremaining: 2.54ms\n","299:\tlearn: 0.2966873\ttotal: 760ms\tremaining: 0us\n","0:\tlearn: 1.3420729\ttotal: 1.14ms\tremaining: 341ms\n","1:\tlearn: 1.2956526\ttotal: 3.17ms\tremaining: 472ms\n","2:\tlearn: 1.2501512\ttotal: 7.17ms\tremaining: 710ms\n","3:\tlearn: 1.2200659\ttotal: 8.19ms\tremaining: 606ms\n","4:\tlearn: 1.1930114\ttotal: 12.6ms\tremaining: 744ms\n","5:\tlearn: 1.1653242\ttotal: 15.1ms\tremaining: 738ms\n","6:\tlearn: 1.1403636\ttotal: 16.5ms\tremaining: 691ms\n","7:\tlearn: 1.1106706\ttotal: 17.1ms\tremaining: 625ms\n","8:\tlearn: 1.0902869\ttotal: 18.1ms\tremaining: 584ms\n","9:\tlearn: 1.0696815\ttotal: 19ms\tremaining: 551ms\n","10:\tlearn: 1.0501034\ttotal: 22.1ms\tremaining: 580ms\n","11:\tlearn: 1.0338785\ttotal: 40.6ms\tremaining: 975ms\n","12:\tlearn: 1.0151639\ttotal: 42ms\tremaining: 927ms\n","13:\tlearn: 0.9993454\ttotal: 50.7ms\tremaining: 1.04s\n","14:\tlearn: 0.9883703\ttotal: 51.8ms\tremaining: 983ms\n","15:\tlearn: 0.9764021\ttotal: 53.8ms\tremaining: 955ms\n","16:\tlearn: 0.9666066\ttotal: 56.6ms\tremaining: 943ms\n","17:\tlearn: 0.9542438\ttotal: 62.5ms\tremaining: 979ms\n","18:\tlearn: 0.9407753\ttotal: 63.4ms\tremaining: 938ms\n","19:\tlearn: 0.9337474\ttotal: 65.9ms\tremaining: 922ms\n","20:\tlearn: 0.9267960\ttotal: 66.7ms\tremaining: 886ms\n","21:\tlearn: 0.9166403\ttotal: 69.8ms\tremaining: 882ms\n","22:\tlearn: 0.9113792\ttotal: 72.6ms\tremaining: 874ms\n","23:\tlearn: 0.9014315\ttotal: 75ms\tremaining: 862ms\n","24:\tlearn: 0.8933751\ttotal: 84ms\tremaining: 924ms\n","25:\tlearn: 0.8833415\ttotal: 87.2ms\tremaining: 919ms\n","26:\tlearn: 0.8750334\ttotal: 88.5ms\tremaining: 895ms\n","27:\tlearn: 0.8674466\ttotal: 93.3ms\tremaining: 906ms\n","28:\tlearn: 0.8629419\ttotal: 94.1ms\tremaining: 879ms\n","29:\tlearn: 0.8580267\ttotal: 96ms\tremaining: 864ms\n","30:\tlearn: 0.8533639\ttotal: 100ms\tremaining: 869ms\n","31:\tlearn: 0.8479956\ttotal: 105ms\tremaining: 876ms\n","32:\tlearn: 0.8427455\ttotal: 107ms\tremaining: 864ms\n","33:\tlearn: 0.8383378\ttotal: 108ms\tremaining: 842ms\n","34:\tlearn: 0.8327777\ttotal: 110ms\tremaining: 831ms\n","35:\tlearn: 0.8273141\ttotal: 111ms\tremaining: 815ms\n","36:\tlearn: 0.8243510\ttotal: 114ms\tremaining: 809ms\n","37:\tlearn: 0.8207404\ttotal: 115ms\tremaining: 792ms\n","38:\tlearn: 0.8175069\ttotal: 116ms\tremaining: 774ms\n","39:\tlearn: 0.8126533\ttotal: 117ms\tremaining: 758ms\n","40:\tlearn: 0.8056229\ttotal: 120ms\tremaining: 758ms\n","41:\tlearn: 0.8028072\ttotal: 125ms\tremaining: 765ms\n","42:\tlearn: 0.7990566\ttotal: 128ms\tremaining: 764ms\n","43:\tlearn: 0.7930967\ttotal: 130ms\tremaining: 755ms\n","44:\tlearn: 0.7880211\ttotal: 131ms\tremaining: 743ms\n","45:\tlearn: 0.7850773\ttotal: 136ms\tremaining: 753ms\n","46:\tlearn: 0.7790178\ttotal: 138ms\tremaining: 741ms\n","47:\tlearn: 0.7735762\ttotal: 141ms\tremaining: 742ms\n","48:\tlearn: 0.7690558\ttotal: 144ms\tremaining: 739ms\n","49:\tlearn: 0.7649313\ttotal: 146ms\tremaining: 728ms\n","50:\tlearn: 0.7615750\ttotal: 148ms\tremaining: 721ms\n","51:\tlearn: 0.7561158\ttotal: 149ms\tremaining: 713ms\n","52:\tlearn: 0.7539316\ttotal: 151ms\tremaining: 705ms\n","53:\tlearn: 0.7507903\ttotal: 153ms\tremaining: 698ms\n","54:\tlearn: 0.7467555\ttotal: 155ms\tremaining: 690ms\n","55:\tlearn: 0.7437955\ttotal: 157ms\tremaining: 682ms\n","56:\tlearn: 0.7421596\ttotal: 159ms\tremaining: 676ms\n","57:\tlearn: 0.7404440\ttotal: 161ms\tremaining: 673ms\n","58:\tlearn: 0.7355575\ttotal: 162ms\tremaining: 663ms\n","59:\tlearn: 0.7317184\ttotal: 164ms\tremaining: 657ms\n","60:\tlearn: 0.7300755\ttotal: 167ms\tremaining: 654ms\n","61:\tlearn: 0.7258001\ttotal: 173ms\tremaining: 663ms\n","62:\tlearn: 0.7220644\ttotal: 176ms\tremaining: 660ms\n","63:\tlearn: 0.7195549\ttotal: 180ms\tremaining: 664ms\n","64:\tlearn: 0.7142961\ttotal: 182ms\tremaining: 659ms\n","65:\tlearn: 0.7071715\ttotal: 189ms\tremaining: 669ms\n","66:\tlearn: 0.7034769\ttotal: 193ms\tremaining: 672ms\n","67:\tlearn: 0.6993791\ttotal: 197ms\tremaining: 673ms\n","68:\tlearn: 0.6945015\ttotal: 202ms\tremaining: 676ms\n","69:\tlearn: 0.6920394\ttotal: 215ms\tremaining: 705ms\n","70:\tlearn: 0.6897178\ttotal: 216ms\tremaining: 696ms\n","71:\tlearn: 0.6846149\ttotal: 217ms\tremaining: 687ms\n","72:\tlearn: 0.6813871\ttotal: 218ms\tremaining: 677ms\n","73:\tlearn: 0.6776045\ttotal: 221ms\tremaining: 676ms\n","74:\tlearn: 0.6753748\ttotal: 222ms\tremaining: 667ms\n","75:\tlearn: 0.6735060\ttotal: 224ms\tremaining: 660ms\n","76:\tlearn: 0.6689073\ttotal: 225ms\tremaining: 651ms\n","77:\tlearn: 0.6659928\ttotal: 226ms\tremaining: 643ms\n","78:\tlearn: 0.6619837\ttotal: 227ms\tremaining: 634ms\n","79:\tlearn: 0.6593485\ttotal: 228ms\tremaining: 626ms\n","80:\tlearn: 0.6558848\ttotal: 231ms\tremaining: 624ms\n","81:\tlearn: 0.6520457\ttotal: 232ms\tremaining: 616ms\n","82:\tlearn: 0.6488173\ttotal: 241ms\tremaining: 631ms\n","83:\tlearn: 0.6435779\ttotal: 243ms\tremaining: 625ms\n","84:\tlearn: 0.6407513\ttotal: 245ms\tremaining: 620ms\n","85:\tlearn: 0.6389370\ttotal: 253ms\tremaining: 628ms\n","86:\tlearn: 0.6366500\ttotal: 254ms\tremaining: 621ms\n","87:\tlearn: 0.6326463\ttotal: 255ms\tremaining: 615ms\n","88:\tlearn: 0.6286675\ttotal: 256ms\tremaining: 607ms\n","89:\tlearn: 0.6251714\ttotal: 259ms\tremaining: 604ms\n","90:\tlearn: 0.6202823\ttotal: 260ms\tremaining: 597ms\n","91:\tlearn: 0.6183848\ttotal: 269ms\tremaining: 607ms\n","92:\tlearn: 0.6151043\ttotal: 274ms\tremaining: 610ms\n","93:\tlearn: 0.6120971\ttotal: 277ms\tremaining: 606ms\n","94:\tlearn: 0.6077073\ttotal: 279ms\tremaining: 602ms\n","95:\tlearn: 0.6037181\ttotal: 285ms\tremaining: 605ms\n","96:\tlearn: 0.6009863\ttotal: 288ms\tremaining: 602ms\n","97:\tlearn: 0.5986965\ttotal: 289ms\tremaining: 595ms\n","98:\tlearn: 0.5953736\ttotal: 291ms\tremaining: 590ms\n","99:\tlearn: 0.5926118\ttotal: 293ms\tremaining: 586ms\n","100:\tlearn: 0.5874913\ttotal: 294ms\tremaining: 580ms\n","101:\tlearn: 0.5847284\ttotal: 303ms\tremaining: 589ms\n","102:\tlearn: 0.5827136\ttotal: 306ms\tremaining: 584ms\n","103:\tlearn: 0.5809867\ttotal: 307ms\tremaining: 579ms\n","104:\tlearn: 0.5780486\ttotal: 310ms\tremaining: 575ms\n","105:\tlearn: 0.5752400\ttotal: 311ms\tremaining: 568ms\n","106:\tlearn: 0.5727747\ttotal: 320ms\tremaining: 577ms\n","107:\tlearn: 0.5695889\ttotal: 325ms\tremaining: 578ms\n","108:\tlearn: 0.5670896\ttotal: 329ms\tremaining: 577ms\n","109:\tlearn: 0.5636058\ttotal: 332ms\tremaining: 573ms\n","110:\tlearn: 0.5604984\ttotal: 335ms\tremaining: 571ms\n","111:\tlearn: 0.5581105\ttotal: 341ms\tremaining: 573ms\n","112:\tlearn: 0.5544311\ttotal: 346ms\tremaining: 573ms\n","113:\tlearn: 0.5510174\ttotal: 350ms\tremaining: 572ms\n","114:\tlearn: 0.5484421\ttotal: 353ms\tremaining: 568ms\n","115:\tlearn: 0.5464465\ttotal: 358ms\tremaining: 569ms\n","116:\tlearn: 0.5438271\ttotal: 364ms\tremaining: 569ms\n","117:\tlearn: 0.5421706\ttotal: 365ms\tremaining: 563ms\n","118:\tlearn: 0.5405888\ttotal: 366ms\tremaining: 557ms\n","119:\tlearn: 0.5376294\ttotal: 367ms\tremaining: 551ms\n","120:\tlearn: 0.5353721\ttotal: 368ms\tremaining: 545ms\n","121:\tlearn: 0.5321974\ttotal: 369ms\tremaining: 539ms\n","122:\tlearn: 0.5308807\ttotal: 370ms\tremaining: 532ms\n","123:\tlearn: 0.5277756\ttotal: 371ms\tremaining: 527ms\n","124:\tlearn: 0.5258586\ttotal: 372ms\tremaining: 520ms\n","125:\tlearn: 0.5245227\ttotal: 373ms\tremaining: 514ms\n","126:\tlearn: 0.5227822\ttotal: 373ms\tremaining: 509ms\n","127:\tlearn: 0.5202943\ttotal: 374ms\tremaining: 503ms\n","128:\tlearn: 0.5176796\ttotal: 375ms\tremaining: 497ms\n","129:\tlearn: 0.5153387\ttotal: 376ms\tremaining: 491ms\n","130:\tlearn: 0.5118762\ttotal: 376ms\tremaining: 486ms\n","131:\tlearn: 0.5103600\ttotal: 377ms\tremaining: 480ms\n","132:\tlearn: 0.5074927\ttotal: 378ms\tremaining: 475ms\n","133:\tlearn: 0.5054674\ttotal: 379ms\tremaining: 470ms\n","134:\tlearn: 0.5034172\ttotal: 380ms\tremaining: 464ms\n","135:\tlearn: 0.5016692\ttotal: 381ms\tremaining: 459ms\n","136:\tlearn: 0.4991224\ttotal: 382ms\tremaining: 454ms\n","137:\tlearn: 0.4964519\ttotal: 383ms\tremaining: 449ms\n","138:\tlearn: 0.4944555\ttotal: 383ms\tremaining: 444ms\n","139:\tlearn: 0.4926877\ttotal: 384ms\tremaining: 439ms\n","140:\tlearn: 0.4907372\ttotal: 385ms\tremaining: 434ms\n","141:\tlearn: 0.4883755\ttotal: 386ms\tremaining: 429ms\n","142:\tlearn: 0.4865098\ttotal: 386ms\tremaining: 424ms\n","143:\tlearn: 0.4850678\ttotal: 387ms\tremaining: 419ms\n","144:\tlearn: 0.4831258\ttotal: 388ms\tremaining: 415ms\n","145:\tlearn: 0.4821198\ttotal: 389ms\tremaining: 410ms\n","146:\tlearn: 0.4806371\ttotal: 389ms\tremaining: 405ms\n","147:\tlearn: 0.4798366\ttotal: 390ms\tremaining: 401ms\n","148:\tlearn: 0.4784481\ttotal: 391ms\tremaining: 396ms\n","149:\tlearn: 0.4759972\ttotal: 393ms\tremaining: 393ms\n","150:\tlearn: 0.4747263\ttotal: 394ms\tremaining: 388ms\n","151:\tlearn: 0.4737930\ttotal: 395ms\tremaining: 384ms\n","152:\tlearn: 0.4726142\ttotal: 395ms\tremaining: 380ms\n","153:\tlearn: 0.4709444\ttotal: 396ms\tremaining: 376ms\n","154:\tlearn: 0.4690219\ttotal: 397ms\tremaining: 371ms\n","155:\tlearn: 0.4666715\ttotal: 398ms\tremaining: 367ms\n","156:\tlearn: 0.4642024\ttotal: 399ms\tremaining: 363ms\n","157:\tlearn: 0.4624863\ttotal: 400ms\tremaining: 359ms\n","158:\tlearn: 0.4607930\ttotal: 400ms\tremaining: 355ms\n","159:\tlearn: 0.4599607\ttotal: 401ms\tremaining: 351ms\n","160:\tlearn: 0.4590602\ttotal: 405ms\tremaining: 349ms\n","161:\tlearn: 0.4569295\ttotal: 406ms\tremaining: 346ms\n","162:\tlearn: 0.4555099\ttotal: 407ms\tremaining: 342ms\n","163:\tlearn: 0.4543552\ttotal: 413ms\tremaining: 343ms\n","164:\tlearn: 0.4529515\ttotal: 414ms\tremaining: 339ms\n","165:\tlearn: 0.4510949\ttotal: 415ms\tremaining: 335ms\n","166:\tlearn: 0.4497645\ttotal: 416ms\tremaining: 331ms\n","167:\tlearn: 0.4486513\ttotal: 417ms\tremaining: 327ms\n","168:\tlearn: 0.4466170\ttotal: 418ms\tremaining: 324ms\n","169:\tlearn: 0.4451004\ttotal: 419ms\tremaining: 320ms\n","170:\tlearn: 0.4439126\ttotal: 420ms\tremaining: 317ms\n","171:\tlearn: 0.4420203\ttotal: 420ms\tremaining: 313ms\n","172:\tlearn: 0.4405554\ttotal: 421ms\tremaining: 309ms\n","173:\tlearn: 0.4394102\ttotal: 422ms\tremaining: 306ms\n","174:\tlearn: 0.4377241\ttotal: 423ms\tremaining: 302ms\n","175:\tlearn: 0.4365049\ttotal: 424ms\tremaining: 299ms\n","176:\tlearn: 0.4347750\ttotal: 425ms\tremaining: 295ms\n","177:\tlearn: 0.4337360\ttotal: 426ms\tremaining: 292ms\n","178:\tlearn: 0.4327052\ttotal: 427ms\tremaining: 289ms\n","179:\tlearn: 0.4318544\ttotal: 428ms\tremaining: 285ms\n","180:\tlearn: 0.4304175\ttotal: 429ms\tremaining: 282ms\n","181:\tlearn: 0.4289695\ttotal: 433ms\tremaining: 281ms\n","182:\tlearn: 0.4276710\ttotal: 434ms\tremaining: 277ms\n","183:\tlearn: 0.4263456\ttotal: 435ms\tremaining: 274ms\n","184:\tlearn: 0.4251419\ttotal: 444ms\tremaining: 276ms\n","185:\tlearn: 0.4239215\ttotal: 457ms\tremaining: 280ms\n","186:\tlearn: 0.4216865\ttotal: 463ms\tremaining: 280ms\n","187:\tlearn: 0.4197065\ttotal: 467ms\tremaining: 279ms\n","188:\tlearn: 0.4186576\ttotal: 468ms\tremaining: 275ms\n","189:\tlearn: 0.4172424\ttotal: 478ms\tremaining: 276ms\n","190:\tlearn: 0.4160303\ttotal: 482ms\tremaining: 275ms\n","191:\tlearn: 0.4150587\ttotal: 485ms\tremaining: 273ms\n","192:\tlearn: 0.4138993\ttotal: 489ms\tremaining: 271ms\n","193:\tlearn: 0.4123385\ttotal: 494ms\tremaining: 270ms\n","194:\tlearn: 0.4110247\ttotal: 497ms\tremaining: 267ms\n","195:\tlearn: 0.4103356\ttotal: 501ms\tremaining: 266ms\n","196:\tlearn: 0.4084636\ttotal: 505ms\tremaining: 264ms\n","197:\tlearn: 0.4064662\ttotal: 508ms\tremaining: 262ms\n","198:\tlearn: 0.4052482\ttotal: 512ms\tremaining: 260ms\n","199:\tlearn: 0.4038979\ttotal: 516ms\tremaining: 258ms\n","200:\tlearn: 0.4021082\ttotal: 520ms\tremaining: 256ms\n","201:\tlearn: 0.4012251\ttotal: 524ms\tremaining: 254ms\n","202:\tlearn: 0.4003496\ttotal: 528ms\tremaining: 252ms\n","203:\tlearn: 0.3987796\ttotal: 532ms\tremaining: 250ms\n","204:\tlearn: 0.3966778\ttotal: 535ms\tremaining: 248ms\n","205:\tlearn: 0.3950723\ttotal: 542ms\tremaining: 248ms\n","206:\tlearn: 0.3938550\ttotal: 544ms\tremaining: 245ms\n","207:\tlearn: 0.3929581\ttotal: 548ms\tremaining: 242ms\n","208:\tlearn: 0.3918745\ttotal: 553ms\tremaining: 241ms\n","209:\tlearn: 0.3902957\ttotal: 555ms\tremaining: 238ms\n","210:\tlearn: 0.3885427\ttotal: 559ms\tremaining: 236ms\n","211:\tlearn: 0.3874768\ttotal: 563ms\tremaining: 234ms\n","212:\tlearn: 0.3864420\ttotal: 566ms\tremaining: 231ms\n","213:\tlearn: 0.3853639\ttotal: 570ms\tremaining: 229ms\n","214:\tlearn: 0.3840292\ttotal: 574ms\tremaining: 227ms\n","215:\tlearn: 0.3821191\ttotal: 578ms\tremaining: 225ms\n","216:\tlearn: 0.3805816\ttotal: 580ms\tremaining: 222ms\n","217:\tlearn: 0.3797495\ttotal: 581ms\tremaining: 219ms\n","218:\tlearn: 0.3789671\ttotal: 587ms\tremaining: 217ms\n","219:\tlearn: 0.3780664\ttotal: 589ms\tremaining: 214ms\n","220:\tlearn: 0.3764211\ttotal: 595ms\tremaining: 213ms\n","221:\tlearn: 0.3751899\ttotal: 602ms\tremaining: 211ms\n","222:\tlearn: 0.3740264\ttotal: 607ms\tremaining: 210ms\n","223:\tlearn: 0.3732958\ttotal: 609ms\tremaining: 207ms\n","224:\tlearn: 0.3715933\ttotal: 610ms\tremaining: 203ms\n","225:\tlearn: 0.3708688\ttotal: 621ms\tremaining: 203ms\n","226:\tlearn: 0.3700891\ttotal: 622ms\tremaining: 200ms\n","227:\tlearn: 0.3693212\ttotal: 623ms\tremaining: 197ms\n","228:\tlearn: 0.3687571\ttotal: 626ms\tremaining: 194ms\n","229:\tlearn: 0.3679038\ttotal: 637ms\tremaining: 194ms\n","230:\tlearn: 0.3672399\ttotal: 645ms\tremaining: 193ms\n","231:\tlearn: 0.3658368\ttotal: 646ms\tremaining: 189ms\n","232:\tlearn: 0.3646231\ttotal: 650ms\tremaining: 187ms\n","233:\tlearn: 0.3637714\ttotal: 657ms\tremaining: 185ms\n","234:\tlearn: 0.3624275\ttotal: 663ms\tremaining: 183ms\n","235:\tlearn: 0.3609220\ttotal: 666ms\tremaining: 181ms\n","236:\tlearn: 0.3600210\ttotal: 667ms\tremaining: 177ms\n","237:\tlearn: 0.3585196\ttotal: 672ms\tremaining: 175ms\n","238:\tlearn: 0.3579015\ttotal: 686ms\tremaining: 175ms\n","239:\tlearn: 0.3565400\ttotal: 693ms\tremaining: 173ms\n","240:\tlearn: 0.3553451\ttotal: 699ms\tremaining: 171ms\n","241:\tlearn: 0.3538613\ttotal: 709ms\tremaining: 170ms\n","242:\tlearn: 0.3531372\ttotal: 715ms\tremaining: 168ms\n","243:\tlearn: 0.3516535\ttotal: 716ms\tremaining: 164ms\n","244:\tlearn: 0.3505026\ttotal: 719ms\tremaining: 161ms\n","245:\tlearn: 0.3496449\ttotal: 726ms\tremaining: 159ms\n","246:\tlearn: 0.3486773\ttotal: 727ms\tremaining: 156ms\n","247:\tlearn: 0.3481201\ttotal: 729ms\tremaining: 153ms\n","248:\tlearn: 0.3476052\ttotal: 732ms\tremaining: 150ms\n","249:\tlearn: 0.3470601\ttotal: 734ms\tremaining: 147ms\n","250:\tlearn: 0.3455719\ttotal: 735ms\tremaining: 143ms\n","251:\tlearn: 0.3447173\ttotal: 737ms\tremaining: 140ms\n","252:\tlearn: 0.3439381\ttotal: 745ms\tremaining: 138ms\n","253:\tlearn: 0.3427741\ttotal: 747ms\tremaining: 135ms\n","254:\tlearn: 0.3418964\ttotal: 748ms\tremaining: 132ms\n","255:\tlearn: 0.3409463\ttotal: 751ms\tremaining: 129ms\n","256:\tlearn: 0.3393821\ttotal: 752ms\tremaining: 126ms\n","257:\tlearn: 0.3385633\ttotal: 753ms\tremaining: 123ms\n","258:\tlearn: 0.3373849\ttotal: 758ms\tremaining: 120ms\n","259:\tlearn: 0.3355750\ttotal: 759ms\tremaining: 117ms\n","260:\tlearn: 0.3347128\ttotal: 760ms\tremaining: 114ms\n","261:\tlearn: 0.3337788\ttotal: 768ms\tremaining: 111ms\n","262:\tlearn: 0.3327573\ttotal: 770ms\tremaining: 108ms\n","263:\tlearn: 0.3318232\ttotal: 771ms\tremaining: 105ms\n","264:\tlearn: 0.3309654\ttotal: 779ms\tremaining: 103ms\n","265:\tlearn: 0.3304029\ttotal: 786ms\tremaining: 101ms\n","266:\tlearn: 0.3294596\ttotal: 793ms\tremaining: 98ms\n","267:\tlearn: 0.3282815\ttotal: 798ms\tremaining: 95.3ms\n","268:\tlearn: 0.3276328\ttotal: 799ms\tremaining: 92ms\n","269:\tlearn: 0.3267985\ttotal: 814ms\tremaining: 90.5ms\n","270:\tlearn: 0.3260659\ttotal: 816ms\tremaining: 87.3ms\n","271:\tlearn: 0.3250355\ttotal: 817ms\tremaining: 84.2ms\n","272:\tlearn: 0.3243224\ttotal: 820ms\tremaining: 81.1ms\n","273:\tlearn: 0.3233295\ttotal: 821ms\tremaining: 77.9ms\n","274:\tlearn: 0.3226533\ttotal: 833ms\tremaining: 75.7ms\n","275:\tlearn: 0.3220803\ttotal: 835ms\tremaining: 72.6ms\n","276:\tlearn: 0.3211871\ttotal: 836ms\tremaining: 69.4ms\n","277:\tlearn: 0.3202268\ttotal: 841ms\tremaining: 66.5ms\n","278:\tlearn: 0.3192384\ttotal: 843ms\tremaining: 63.5ms\n","279:\tlearn: 0.3180992\ttotal: 844ms\tremaining: 60.3ms\n","280:\tlearn: 0.3170240\ttotal: 847ms\tremaining: 57.3ms\n","281:\tlearn: 0.3163048\ttotal: 851ms\tremaining: 54.3ms\n","282:\tlearn: 0.3144774\ttotal: 853ms\tremaining: 51.2ms\n","283:\tlearn: 0.3137635\ttotal: 855ms\tremaining: 48.2ms\n","284:\tlearn: 0.3129653\ttotal: 861ms\tremaining: 45.3ms\n","285:\tlearn: 0.3122124\ttotal: 863ms\tremaining: 42.3ms\n","286:\tlearn: 0.3114534\ttotal: 865ms\tremaining: 39.2ms\n","287:\tlearn: 0.3110393\ttotal: 867ms\tremaining: 36.1ms\n","288:\tlearn: 0.3100590\ttotal: 869ms\tremaining: 33.1ms\n","289:\tlearn: 0.3092974\ttotal: 871ms\tremaining: 30ms\n","290:\tlearn: 0.3078827\ttotal: 873ms\tremaining: 27ms\n","291:\tlearn: 0.3073860\ttotal: 875ms\tremaining: 24ms\n","292:\tlearn: 0.3068583\ttotal: 877ms\tremaining: 20.9ms\n","293:\tlearn: 0.3055601\ttotal: 879ms\tremaining: 17.9ms\n","294:\tlearn: 0.3049481\ttotal: 881ms\tremaining: 14.9ms\n","295:\tlearn: 0.3039288\ttotal: 886ms\tremaining: 12ms\n","296:\tlearn: 0.3030787\ttotal: 887ms\tremaining: 8.96ms\n","297:\tlearn: 0.3020825\ttotal: 889ms\tremaining: 5.97ms\n","298:\tlearn: 0.3014211\ttotal: 891ms\tremaining: 2.98ms\n","299:\tlearn: 0.3006255\ttotal: 895ms\tremaining: 0us\n","0:\tlearn: 1.3389155\ttotal: 1.01ms\tremaining: 301ms\n","1:\tlearn: 1.2936348\ttotal: 1.92ms\tremaining: 287ms\n","2:\tlearn: 1.2481688\ttotal: 2.19ms\tremaining: 217ms\n","3:\tlearn: 1.2106595\ttotal: 2.53ms\tremaining: 187ms\n","4:\tlearn: 1.1824297\ttotal: 6.87ms\tremaining: 405ms\n","5:\tlearn: 1.1530814\ttotal: 8.04ms\tremaining: 394ms\n","6:\tlearn: 1.1312559\ttotal: 9.51ms\tremaining: 398ms\n","7:\tlearn: 1.1053480\ttotal: 11ms\tremaining: 400ms\n","8:\tlearn: 1.0866250\ttotal: 14.3ms\tremaining: 461ms\n","9:\tlearn: 1.0702040\ttotal: 19ms\tremaining: 550ms\n","10:\tlearn: 1.0536443\ttotal: 21.8ms\tremaining: 572ms\n","11:\tlearn: 1.0378745\ttotal: 23.7ms\tremaining: 569ms\n","12:\tlearn: 1.0200529\ttotal: 25.5ms\tremaining: 562ms\n","13:\tlearn: 1.0063179\ttotal: 26.9ms\tremaining: 551ms\n","14:\tlearn: 0.9892595\ttotal: 28.8ms\tremaining: 547ms\n","15:\tlearn: 0.9764399\ttotal: 32.8ms\tremaining: 582ms\n","16:\tlearn: 0.9647020\ttotal: 35.8ms\tremaining: 596ms\n","17:\tlearn: 0.9555980\ttotal: 36.8ms\tremaining: 577ms\n","18:\tlearn: 0.9447584\ttotal: 38.9ms\tremaining: 575ms\n","19:\tlearn: 0.9378067\ttotal: 40.9ms\tremaining: 573ms\n","20:\tlearn: 0.9280395\ttotal: 43.7ms\tremaining: 580ms\n","21:\tlearn: 0.9165631\ttotal: 48.3ms\tremaining: 611ms\n","22:\tlearn: 0.9063876\ttotal: 49.3ms\tremaining: 594ms\n","23:\tlearn: 0.8999019\ttotal: 51.2ms\tremaining: 588ms\n","24:\tlearn: 0.8915046\ttotal: 55.3ms\tremaining: 608ms\n","25:\tlearn: 0.8829110\ttotal: 57.6ms\tremaining: 607ms\n","26:\tlearn: 0.8779844\ttotal: 59.6ms\tremaining: 603ms\n","27:\tlearn: 0.8719874\ttotal: 64.3ms\tremaining: 624ms\n","28:\tlearn: 0.8662971\ttotal: 66.6ms\tremaining: 622ms\n","29:\tlearn: 0.8618020\ttotal: 67.8ms\tremaining: 610ms\n","30:\tlearn: 0.8571515\ttotal: 69.1ms\tremaining: 599ms\n","31:\tlearn: 0.8522150\ttotal: 71ms\tremaining: 595ms\n","32:\tlearn: 0.8472126\ttotal: 72.9ms\tremaining: 590ms\n","33:\tlearn: 0.8433774\ttotal: 74.4ms\tremaining: 582ms\n","34:\tlearn: 0.8399470\ttotal: 75.4ms\tremaining: 571ms\n","35:\tlearn: 0.8326200\ttotal: 77.6ms\tremaining: 569ms\n","36:\tlearn: 0.8259308\ttotal: 78.5ms\tremaining: 558ms\n","37:\tlearn: 0.8209106\ttotal: 79.4ms\tremaining: 547ms\n","38:\tlearn: 0.8180160\ttotal: 85.7ms\tremaining: 574ms\n","39:\tlearn: 0.8122888\ttotal: 87ms\tremaining: 565ms\n","40:\tlearn: 0.8087338\ttotal: 87.9ms\tremaining: 555ms\n","41:\tlearn: 0.8049411\ttotal: 88.4ms\tremaining: 543ms\n","42:\tlearn: 0.8013036\ttotal: 89.4ms\tremaining: 534ms\n","43:\tlearn: 0.7974739\ttotal: 90.3ms\tremaining: 525ms\n","44:\tlearn: 0.7959466\ttotal: 97.7ms\tremaining: 554ms\n","45:\tlearn: 0.7924244\ttotal: 98.6ms\tremaining: 545ms\n","46:\tlearn: 0.7884659\ttotal: 99.5ms\tremaining: 536ms\n","47:\tlearn: 0.7853362\ttotal: 101ms\tremaining: 531ms\n","48:\tlearn: 0.7817436\ttotal: 102ms\tremaining: 521ms\n","49:\tlearn: 0.7777268\ttotal: 103ms\tremaining: 514ms\n","50:\tlearn: 0.7739981\ttotal: 104ms\tremaining: 506ms\n","51:\tlearn: 0.7693812\ttotal: 110ms\tremaining: 523ms\n","52:\tlearn: 0.7658054\ttotal: 111ms\tremaining: 516ms\n","53:\tlearn: 0.7642036\ttotal: 112ms\tremaining: 509ms\n","54:\tlearn: 0.7606023\ttotal: 113ms\tremaining: 502ms\n","55:\tlearn: 0.7566454\ttotal: 113ms\tremaining: 494ms\n","56:\tlearn: 0.7533167\ttotal: 118ms\tremaining: 505ms\n","57:\tlearn: 0.7507833\ttotal: 119ms\tremaining: 498ms\n","58:\tlearn: 0.7474146\ttotal: 120ms\tremaining: 492ms\n","59:\tlearn: 0.7421976\ttotal: 121ms\tremaining: 485ms\n","60:\tlearn: 0.7398220\ttotal: 125ms\tremaining: 491ms\n","61:\tlearn: 0.7363141\ttotal: 126ms\tremaining: 485ms\n","62:\tlearn: 0.7317945\ttotal: 127ms\tremaining: 479ms\n","63:\tlearn: 0.7302258\ttotal: 128ms\tremaining: 472ms\n","64:\tlearn: 0.7284370\ttotal: 129ms\tremaining: 466ms\n","65:\tlearn: 0.7254616\ttotal: 130ms\tremaining: 460ms\n","66:\tlearn: 0.7225108\ttotal: 136ms\tremaining: 472ms\n","67:\tlearn: 0.7188673\ttotal: 137ms\tremaining: 467ms\n","68:\tlearn: 0.7157654\ttotal: 141ms\tremaining: 471ms\n","69:\tlearn: 0.7123043\ttotal: 142ms\tremaining: 465ms\n","70:\tlearn: 0.7084024\ttotal: 143ms\tremaining: 461ms\n","71:\tlearn: 0.7054345\ttotal: 146ms\tremaining: 463ms\n","72:\tlearn: 0.7038407\ttotal: 147ms\tremaining: 457ms\n","73:\tlearn: 0.7009718\ttotal: 148ms\tremaining: 452ms\n","74:\tlearn: 0.6976761\ttotal: 149ms\tremaining: 447ms\n","75:\tlearn: 0.6940172\ttotal: 150ms\tremaining: 442ms\n","76:\tlearn: 0.6898738\ttotal: 151ms\tremaining: 437ms\n","77:\tlearn: 0.6855154\ttotal: 152ms\tremaining: 432ms\n","78:\tlearn: 0.6828782\ttotal: 152ms\tremaining: 427ms\n","79:\tlearn: 0.6778896\ttotal: 159ms\tremaining: 436ms\n","80:\tlearn: 0.6747941\ttotal: 163ms\tremaining: 440ms\n","81:\tlearn: 0.6702652\ttotal: 163ms\tremaining: 435ms\n","82:\tlearn: 0.6673230\ttotal: 169ms\tremaining: 441ms\n","83:\tlearn: 0.6647538\ttotal: 176ms\tremaining: 454ms\n","84:\tlearn: 0.6620260\ttotal: 177ms\tremaining: 449ms\n","85:\tlearn: 0.6591667\ttotal: 178ms\tremaining: 444ms\n","86:\tlearn: 0.6575703\ttotal: 185ms\tremaining: 454ms\n","87:\tlearn: 0.6536781\ttotal: 186ms\tremaining: 449ms\n","88:\tlearn: 0.6492292\ttotal: 198ms\tremaining: 470ms\n","89:\tlearn: 0.6458907\ttotal: 202ms\tremaining: 472ms\n","90:\tlearn: 0.6420560\ttotal: 203ms\tremaining: 467ms\n","91:\tlearn: 0.6389389\ttotal: 208ms\tremaining: 469ms\n","92:\tlearn: 0.6367240\ttotal: 210ms\tremaining: 468ms\n","93:\tlearn: 0.6345957\ttotal: 217ms\tremaining: 475ms\n","94:\tlearn: 0.6318438\ttotal: 223ms\tremaining: 480ms\n","95:\tlearn: 0.6288897\ttotal: 224ms\tremaining: 475ms\n","96:\tlearn: 0.6267571\ttotal: 225ms\tremaining: 470ms\n","97:\tlearn: 0.6245950\ttotal: 230ms\tremaining: 473ms\n","98:\tlearn: 0.6229951\ttotal: 232ms\tremaining: 470ms\n","99:\tlearn: 0.6177350\ttotal: 232ms\tremaining: 465ms\n","100:\tlearn: 0.6140793\ttotal: 240ms\tremaining: 473ms\n","101:\tlearn: 0.6094900\ttotal: 241ms\tremaining: 467ms\n","102:\tlearn: 0.6054085\ttotal: 242ms\tremaining: 462ms\n","103:\tlearn: 0.6034168\ttotal: 246ms\tremaining: 463ms\n","104:\tlearn: 0.6021668\ttotal: 247ms\tremaining: 458ms\n","105:\tlearn: 0.5998929\ttotal: 248ms\tremaining: 453ms\n","106:\tlearn: 0.5954572\ttotal: 256ms\tremaining: 461ms\n","107:\tlearn: 0.5933098\ttotal: 258ms\tremaining: 458ms\n","108:\tlearn: 0.5897546\ttotal: 259ms\tremaining: 453ms\n","109:\tlearn: 0.5863939\ttotal: 262ms\tremaining: 453ms\n","110:\tlearn: 0.5835693\ttotal: 263ms\tremaining: 448ms\n","111:\tlearn: 0.5800845\ttotal: 264ms\tremaining: 443ms\n","112:\tlearn: 0.5762665\ttotal: 280ms\tremaining: 463ms\n","113:\tlearn: 0.5726809\ttotal: 283ms\tremaining: 461ms\n","114:\tlearn: 0.5718600\ttotal: 284ms\tremaining: 456ms\n","115:\tlearn: 0.5691197\ttotal: 285ms\tremaining: 451ms\n","116:\tlearn: 0.5663777\ttotal: 285ms\tremaining: 446ms\n","117:\tlearn: 0.5643747\ttotal: 301ms\tremaining: 465ms\n","118:\tlearn: 0.5624136\ttotal: 305ms\tremaining: 464ms\n","119:\tlearn: 0.5598022\ttotal: 307ms\tremaining: 460ms\n","120:\tlearn: 0.5573838\ttotal: 308ms\tremaining: 455ms\n","121:\tlearn: 0.5554104\ttotal: 316ms\tremaining: 460ms\n","122:\tlearn: 0.5542418\ttotal: 322ms\tremaining: 464ms\n","123:\tlearn: 0.5521239\ttotal: 323ms\tremaining: 459ms\n","124:\tlearn: 0.5503938\ttotal: 327ms\tremaining: 458ms\n","125:\tlearn: 0.5481581\ttotal: 331ms\tremaining: 457ms\n","126:\tlearn: 0.5468827\ttotal: 344ms\tremaining: 469ms\n","127:\tlearn: 0.5441177\ttotal: 351ms\tremaining: 472ms\n","128:\tlearn: 0.5427750\ttotal: 353ms\tremaining: 468ms\n","129:\tlearn: 0.5408449\ttotal: 361ms\tremaining: 472ms\n","130:\tlearn: 0.5376300\ttotal: 363ms\tremaining: 468ms\n","131:\tlearn: 0.5357890\ttotal: 374ms\tremaining: 475ms\n","132:\tlearn: 0.5339577\ttotal: 381ms\tremaining: 479ms\n","133:\tlearn: 0.5311418\ttotal: 382ms\tremaining: 473ms\n","134:\tlearn: 0.5287309\ttotal: 387ms\tremaining: 472ms\n","135:\tlearn: 0.5267803\ttotal: 411ms\tremaining: 496ms\n","136:\tlearn: 0.5247596\ttotal: 417ms\tremaining: 496ms\n","137:\tlearn: 0.5223248\ttotal: 423ms\tremaining: 497ms\n","138:\tlearn: 0.5197360\ttotal: 431ms\tremaining: 499ms\n","139:\tlearn: 0.5182473\ttotal: 436ms\tremaining: 499ms\n","140:\tlearn: 0.5157899\ttotal: 440ms\tremaining: 496ms\n","141:\tlearn: 0.5143822\ttotal: 441ms\tremaining: 491ms\n","142:\tlearn: 0.5126383\ttotal: 447ms\tremaining: 490ms\n","143:\tlearn: 0.5109540\ttotal: 451ms\tremaining: 489ms\n","144:\tlearn: 0.5089552\ttotal: 456ms\tremaining: 488ms\n","145:\tlearn: 0.5069575\ttotal: 462ms\tremaining: 487ms\n","146:\tlearn: 0.5050675\ttotal: 468ms\tremaining: 487ms\n","147:\tlearn: 0.5025415\ttotal: 473ms\tremaining: 486ms\n","148:\tlearn: 0.5011308\ttotal: 476ms\tremaining: 483ms\n","149:\tlearn: 0.4991306\ttotal: 483ms\tremaining: 483ms\n","150:\tlearn: 0.4956842\ttotal: 485ms\tremaining: 478ms\n","151:\tlearn: 0.4943083\ttotal: 492ms\tremaining: 479ms\n","152:\tlearn: 0.4930677\ttotal: 493ms\tremaining: 474ms\n","153:\tlearn: 0.4913971\ttotal: 503ms\tremaining: 477ms\n","154:\tlearn: 0.4900100\ttotal: 505ms\tremaining: 472ms\n","155:\tlearn: 0.4879460\ttotal: 510ms\tremaining: 471ms\n","156:\tlearn: 0.4861934\ttotal: 517ms\tremaining: 471ms\n","157:\tlearn: 0.4842377\ttotal: 520ms\tremaining: 467ms\n","158:\tlearn: 0.4826596\ttotal: 522ms\tremaining: 463ms\n","159:\tlearn: 0.4815066\ttotal: 530ms\tremaining: 463ms\n","160:\tlearn: 0.4808413\ttotal: 531ms\tremaining: 458ms\n","161:\tlearn: 0.4790428\ttotal: 539ms\tremaining: 459ms\n","162:\tlearn: 0.4780465\ttotal: 542ms\tremaining: 455ms\n","163:\tlearn: 0.4764874\ttotal: 547ms\tremaining: 454ms\n","164:\tlearn: 0.4755382\ttotal: 561ms\tremaining: 459ms\n","165:\tlearn: 0.4743872\ttotal: 565ms\tremaining: 456ms\n","166:\tlearn: 0.4723653\ttotal: 575ms\tremaining: 458ms\n","167:\tlearn: 0.4706400\ttotal: 578ms\tremaining: 454ms\n","168:\tlearn: 0.4691568\ttotal: 579ms\tremaining: 449ms\n","169:\tlearn: 0.4677992\ttotal: 583ms\tremaining: 446ms\n","170:\tlearn: 0.4669073\ttotal: 593ms\tremaining: 447ms\n","171:\tlearn: 0.4659717\ttotal: 594ms\tremaining: 442ms\n","172:\tlearn: 0.4642757\ttotal: 601ms\tremaining: 441ms\n","173:\tlearn: 0.4629309\ttotal: 603ms\tremaining: 436ms\n","174:\tlearn: 0.4616753\ttotal: 603ms\tremaining: 431ms\n","175:\tlearn: 0.4602299\ttotal: 609ms\tremaining: 429ms\n","176:\tlearn: 0.4591350\ttotal: 610ms\tremaining: 424ms\n","177:\tlearn: 0.4566447\ttotal: 616ms\tremaining: 422ms\n","178:\tlearn: 0.4545155\ttotal: 624ms\tremaining: 422ms\n","179:\tlearn: 0.4528953\ttotal: 625ms\tremaining: 417ms\n","180:\tlearn: 0.4512690\ttotal: 627ms\tremaining: 412ms\n","181:\tlearn: 0.4500341\ttotal: 630ms\tremaining: 408ms\n","182:\tlearn: 0.4488969\ttotal: 630ms\tremaining: 403ms\n","183:\tlearn: 0.4475047\ttotal: 631ms\tremaining: 398ms\n","184:\tlearn: 0.4452370\ttotal: 635ms\tremaining: 395ms\n","185:\tlearn: 0.4431347\ttotal: 636ms\tremaining: 390ms\n","186:\tlearn: 0.4421440\ttotal: 637ms\tremaining: 385ms\n","187:\tlearn: 0.4397356\ttotal: 646ms\tremaining: 385ms\n","188:\tlearn: 0.4376877\ttotal: 647ms\tremaining: 380ms\n","189:\tlearn: 0.4358736\ttotal: 649ms\tremaining: 376ms\n","190:\tlearn: 0.4351118\ttotal: 652ms\tremaining: 372ms\n","191:\tlearn: 0.4340779\ttotal: 654ms\tremaining: 368ms\n","192:\tlearn: 0.4332296\ttotal: 656ms\tremaining: 364ms\n","193:\tlearn: 0.4326819\ttotal: 658ms\tremaining: 359ms\n","194:\tlearn: 0.4305100\ttotal: 660ms\tremaining: 356ms\n","195:\tlearn: 0.4283383\ttotal: 662ms\tremaining: 351ms\n","196:\tlearn: 0.4267556\ttotal: 665ms\tremaining: 348ms\n","197:\tlearn: 0.4251408\ttotal: 666ms\tremaining: 343ms\n","198:\tlearn: 0.4235136\ttotal: 668ms\tremaining: 339ms\n","199:\tlearn: 0.4221231\ttotal: 670ms\tremaining: 335ms\n","200:\tlearn: 0.4206448\ttotal: 672ms\tremaining: 331ms\n","201:\tlearn: 0.4192644\ttotal: 675ms\tremaining: 327ms\n","202:\tlearn: 0.4181651\ttotal: 681ms\tremaining: 325ms\n","203:\tlearn: 0.4169228\ttotal: 682ms\tremaining: 321ms\n","204:\tlearn: 0.4156319\ttotal: 684ms\tremaining: 317ms\n","205:\tlearn: 0.4140703\ttotal: 688ms\tremaining: 314ms\n","206:\tlearn: 0.4122501\ttotal: 691ms\tremaining: 310ms\n","207:\tlearn: 0.4110172\ttotal: 701ms\tremaining: 310ms\n","208:\tlearn: 0.4099293\ttotal: 704ms\tremaining: 306ms\n","209:\tlearn: 0.4090931\ttotal: 714ms\tremaining: 306ms\n","210:\tlearn: 0.4071412\ttotal: 718ms\tremaining: 303ms\n","211:\tlearn: 0.4056342\ttotal: 722ms\tremaining: 300ms\n","212:\tlearn: 0.4036568\ttotal: 736ms\tremaining: 301ms\n","213:\tlearn: 0.4029139\ttotal: 739ms\tremaining: 297ms\n","214:\tlearn: 0.4018271\ttotal: 744ms\tremaining: 294ms\n","215:\tlearn: 0.4006446\ttotal: 746ms\tremaining: 290ms\n","216:\tlearn: 0.3993283\ttotal: 752ms\tremaining: 288ms\n","217:\tlearn: 0.3978457\ttotal: 754ms\tremaining: 284ms\n","218:\tlearn: 0.3968988\ttotal: 756ms\tremaining: 280ms\n","219:\tlearn: 0.3961869\ttotal: 758ms\tremaining: 276ms\n","220:\tlearn: 0.3950964\ttotal: 760ms\tremaining: 272ms\n","221:\tlearn: 0.3934577\ttotal: 762ms\tremaining: 268ms\n","222:\tlearn: 0.3915268\ttotal: 765ms\tremaining: 264ms\n","223:\tlearn: 0.3898887\ttotal: 766ms\tremaining: 260ms\n","224:\tlearn: 0.3890763\ttotal: 768ms\tremaining: 256ms\n","225:\tlearn: 0.3877225\ttotal: 769ms\tremaining: 252ms\n","226:\tlearn: 0.3860519\ttotal: 775ms\tremaining: 249ms\n","227:\tlearn: 0.3852185\ttotal: 776ms\tremaining: 245ms\n","228:\tlearn: 0.3837483\ttotal: 778ms\tremaining: 241ms\n","229:\tlearn: 0.3824650\ttotal: 780ms\tremaining: 237ms\n","230:\tlearn: 0.3812150\ttotal: 782ms\tremaining: 234ms\n","231:\tlearn: 0.3802588\ttotal: 790ms\tremaining: 232ms\n","232:\tlearn: 0.3789402\ttotal: 791ms\tremaining: 227ms\n","233:\tlearn: 0.3773021\ttotal: 794ms\tremaining: 224ms\n","234:\tlearn: 0.3757053\ttotal: 796ms\tremaining: 220ms\n","235:\tlearn: 0.3744625\ttotal: 798ms\tremaining: 216ms\n","236:\tlearn: 0.3733267\ttotal: 804ms\tremaining: 214ms\n","237:\tlearn: 0.3720982\ttotal: 807ms\tremaining: 210ms\n","238:\tlearn: 0.3709801\ttotal: 808ms\tremaining: 206ms\n","239:\tlearn: 0.3696362\ttotal: 811ms\tremaining: 203ms\n","240:\tlearn: 0.3687778\ttotal: 822ms\tremaining: 201ms\n","241:\tlearn: 0.3676614\ttotal: 824ms\tremaining: 197ms\n","242:\tlearn: 0.3662128\ttotal: 825ms\tremaining: 193ms\n","243:\tlearn: 0.3652231\ttotal: 827ms\tremaining: 190ms\n","244:\tlearn: 0.3639995\ttotal: 829ms\tremaining: 186ms\n","245:\tlearn: 0.3634077\ttotal: 833ms\tremaining: 183ms\n","246:\tlearn: 0.3622545\ttotal: 835ms\tremaining: 179ms\n","247:\tlearn: 0.3608549\ttotal: 837ms\tremaining: 175ms\n","248:\tlearn: 0.3598761\ttotal: 839ms\tremaining: 172ms\n","249:\tlearn: 0.3578606\ttotal: 841ms\tremaining: 168ms\n","250:\tlearn: 0.3566096\ttotal: 847ms\tremaining: 165ms\n","251:\tlearn: 0.3556862\ttotal: 848ms\tremaining: 162ms\n","252:\tlearn: 0.3547143\ttotal: 851ms\tremaining: 158ms\n","253:\tlearn: 0.3541524\ttotal: 853ms\tremaining: 154ms\n","254:\tlearn: 0.3532346\ttotal: 855ms\tremaining: 151ms\n","255:\tlearn: 0.3525307\ttotal: 856ms\tremaining: 147ms\n","256:\tlearn: 0.3515461\ttotal: 859ms\tremaining: 144ms\n","257:\tlearn: 0.3504944\ttotal: 868ms\tremaining: 141ms\n","258:\tlearn: 0.3499392\ttotal: 871ms\tremaining: 138ms\n","259:\tlearn: 0.3487562\ttotal: 878ms\tremaining: 135ms\n","260:\tlearn: 0.3479683\ttotal: 879ms\tremaining: 131ms\n","261:\tlearn: 0.3469242\ttotal: 881ms\tremaining: 128ms\n","262:\tlearn: 0.3464706\ttotal: 883ms\tremaining: 124ms\n","263:\tlearn: 0.3453934\ttotal: 884ms\tremaining: 121ms\n","264:\tlearn: 0.3442134\ttotal: 891ms\tremaining: 118ms\n","265:\tlearn: 0.3435868\ttotal: 892ms\tremaining: 114ms\n","266:\tlearn: 0.3429413\ttotal: 894ms\tremaining: 111ms\n","267:\tlearn: 0.3422835\ttotal: 896ms\tremaining: 107ms\n","268:\tlearn: 0.3417275\ttotal: 898ms\tremaining: 103ms\n","269:\tlearn: 0.3404035\ttotal: 900ms\tremaining: 100ms\n","270:\tlearn: 0.3395285\ttotal: 902ms\tremaining: 96.5ms\n","271:\tlearn: 0.3384494\ttotal: 904ms\tremaining: 93.1ms\n","272:\tlearn: 0.3376872\ttotal: 906ms\tremaining: 89.6ms\n","273:\tlearn: 0.3369320\ttotal: 908ms\tremaining: 86.2ms\n","274:\tlearn: 0.3360470\ttotal: 910ms\tremaining: 82.8ms\n","275:\tlearn: 0.3352002\ttotal: 912ms\tremaining: 79.3ms\n","276:\tlearn: 0.3347377\ttotal: 914ms\tremaining: 75.9ms\n","277:\tlearn: 0.3336913\ttotal: 916ms\tremaining: 72.5ms\n","278:\tlearn: 0.3330284\ttotal: 918ms\tremaining: 69.1ms\n","279:\tlearn: 0.3322843\ttotal: 921ms\tremaining: 65.8ms\n","280:\tlearn: 0.3310853\ttotal: 923ms\tremaining: 62.4ms\n","281:\tlearn: 0.3304458\ttotal: 925ms\tremaining: 59.1ms\n","282:\tlearn: 0.3292685\ttotal: 931ms\tremaining: 55.9ms\n","283:\tlearn: 0.3279304\ttotal: 932ms\tremaining: 52.5ms\n","284:\tlearn: 0.3269021\ttotal: 934ms\tremaining: 49.1ms\n","285:\tlearn: 0.3257725\ttotal: 935ms\tremaining: 45.8ms\n","286:\tlearn: 0.3253873\ttotal: 937ms\tremaining: 42.5ms\n","287:\tlearn: 0.3243078\ttotal: 939ms\tremaining: 39.1ms\n","288:\tlearn: 0.3235261\ttotal: 941ms\tremaining: 35.8ms\n","289:\tlearn: 0.3224491\ttotal: 943ms\tremaining: 32.5ms\n","290:\tlearn: 0.3214341\ttotal: 945ms\tremaining: 29.2ms\n","291:\tlearn: 0.3201543\ttotal: 947ms\tremaining: 26ms\n","292:\tlearn: 0.3192376\ttotal: 949ms\tremaining: 22.7ms\n","293:\tlearn: 0.3183108\ttotal: 951ms\tremaining: 19.4ms\n","294:\tlearn: 0.3171965\ttotal: 954ms\tremaining: 16.2ms\n","295:\tlearn: 0.3167579\ttotal: 956ms\tremaining: 12.9ms\n","296:\tlearn: 0.3157283\ttotal: 958ms\tremaining: 9.67ms\n","297:\tlearn: 0.3146846\ttotal: 960ms\tremaining: 6.44ms\n","298:\tlearn: 0.3140330\ttotal: 962ms\tremaining: 3.22ms\n","299:\tlearn: 0.3126995\ttotal: 964ms\tremaining: 0us\n","0:\tlearn: 1.3415482\ttotal: 1.02ms\tremaining: 305ms\n","1:\tlearn: 1.2946215\ttotal: 1.34ms\tremaining: 199ms\n","2:\tlearn: 1.2576576\ttotal: 2.27ms\tremaining: 224ms\n","3:\tlearn: 1.2254499\ttotal: 7.64ms\tremaining: 565ms\n","4:\tlearn: 1.1909181\ttotal: 9.81ms\tremaining: 579ms\n","5:\tlearn: 1.1653207\ttotal: 13.5ms\tremaining: 662ms\n","6:\tlearn: 1.1365286\ttotal: 19.6ms\tremaining: 820ms\n","7:\tlearn: 1.1142527\ttotal: 23.3ms\tremaining: 851ms\n","8:\tlearn: 1.0878784\ttotal: 25.6ms\tremaining: 828ms\n","9:\tlearn: 1.0659674\ttotal: 31.7ms\tremaining: 919ms\n","10:\tlearn: 1.0443061\ttotal: 33ms\tremaining: 867ms\n","11:\tlearn: 1.0219843\ttotal: 35.4ms\tremaining: 850ms\n","12:\tlearn: 1.0053395\ttotal: 37.5ms\tremaining: 829ms\n","13:\tlearn: 0.9902131\ttotal: 39.6ms\tremaining: 810ms\n","14:\tlearn: 0.9744988\ttotal: 41.6ms\tremaining: 791ms\n","15:\tlearn: 0.9609501\ttotal: 44.3ms\tremaining: 787ms\n","16:\tlearn: 0.9479552\ttotal: 45.8ms\tremaining: 762ms\n","17:\tlearn: 0.9396154\ttotal: 47.7ms\tremaining: 747ms\n","18:\tlearn: 0.9290672\ttotal: 49.2ms\tremaining: 727ms\n","19:\tlearn: 0.9182200\ttotal: 59.5ms\tremaining: 833ms\n","20:\tlearn: 0.9113138\ttotal: 60.8ms\tremaining: 808ms\n","21:\tlearn: 0.9047615\ttotal: 62.9ms\tremaining: 795ms\n","22:\tlearn: 0.8977519\ttotal: 73.6ms\tremaining: 886ms\n","23:\tlearn: 0.8884568\ttotal: 75.7ms\tremaining: 870ms\n","24:\tlearn: 0.8819784\ttotal: 77.6ms\tremaining: 854ms\n","25:\tlearn: 0.8768596\ttotal: 82.2ms\tremaining: 866ms\n","26:\tlearn: 0.8713406\ttotal: 85.9ms\tremaining: 869ms\n","27:\tlearn: 0.8632387\ttotal: 88ms\tremaining: 855ms\n","28:\tlearn: 0.8581439\ttotal: 89.1ms\tremaining: 833ms\n","29:\tlearn: 0.8530889\ttotal: 92.4ms\tremaining: 832ms\n","30:\tlearn: 0.8480118\ttotal: 94.5ms\tremaining: 820ms\n","31:\tlearn: 0.8423465\ttotal: 96.5ms\tremaining: 809ms\n","32:\tlearn: 0.8367569\ttotal: 101ms\tremaining: 816ms\n","33:\tlearn: 0.8307175\ttotal: 103ms\tremaining: 805ms\n","34:\tlearn: 0.8261104\ttotal: 113ms\tremaining: 857ms\n","35:\tlearn: 0.8211487\ttotal: 117ms\tremaining: 857ms\n","36:\tlearn: 0.8169139\ttotal: 121ms\tremaining: 861ms\n","37:\tlearn: 0.8152495\ttotal: 138ms\tremaining: 949ms\n","38:\tlearn: 0.8126520\ttotal: 141ms\tremaining: 945ms\n","39:\tlearn: 0.8080267\ttotal: 143ms\tremaining: 928ms\n","40:\tlearn: 0.8044229\ttotal: 148ms\tremaining: 932ms\n","41:\tlearn: 0.7987723\ttotal: 152ms\tremaining: 931ms\n","42:\tlearn: 0.7960964\ttotal: 153ms\tremaining: 917ms\n","43:\tlearn: 0.7927559\ttotal: 157ms\tremaining: 914ms\n","44:\tlearn: 0.7898943\ttotal: 161ms\tremaining: 910ms\n","45:\tlearn: 0.7865567\ttotal: 163ms\tremaining: 900ms\n","46:\tlearn: 0.7831764\ttotal: 167ms\tremaining: 898ms\n","47:\tlearn: 0.7779520\ttotal: 169ms\tremaining: 888ms\n","48:\tlearn: 0.7748048\ttotal: 172ms\tremaining: 881ms\n","49:\tlearn: 0.7732283\ttotal: 175ms\tremaining: 876ms\n","50:\tlearn: 0.7684130\ttotal: 179ms\tremaining: 876ms\n","51:\tlearn: 0.7642385\ttotal: 183ms\tremaining: 872ms\n","52:\tlearn: 0.7624107\ttotal: 187ms\tremaining: 873ms\n","53:\tlearn: 0.7581068\ttotal: 190ms\tremaining: 867ms\n","54:\tlearn: 0.7524307\ttotal: 192ms\tremaining: 856ms\n","55:\tlearn: 0.7472655\ttotal: 197ms\tremaining: 856ms\n","56:\tlearn: 0.7440059\ttotal: 198ms\tremaining: 844ms\n","57:\tlearn: 0.7409198\ttotal: 204ms\tremaining: 853ms\n","58:\tlearn: 0.7385916\ttotal: 208ms\tremaining: 851ms\n","59:\tlearn: 0.7353148\ttotal: 212ms\tremaining: 848ms\n","60:\tlearn: 0.7314812\ttotal: 216ms\tremaining: 847ms\n","61:\tlearn: 0.7232781\ttotal: 218ms\tremaining: 838ms\n","62:\tlearn: 0.7206238\ttotal: 220ms\tremaining: 829ms\n","63:\tlearn: 0.7166982\ttotal: 223ms\tremaining: 821ms\n","64:\tlearn: 0.7106223\ttotal: 224ms\tremaining: 811ms\n","65:\tlearn: 0.7054998\ttotal: 234ms\tremaining: 828ms\n","66:\tlearn: 0.7012661\ttotal: 237ms\tremaining: 824ms\n","67:\tlearn: 0.6967795\ttotal: 238ms\tremaining: 812ms\n","68:\tlearn: 0.6927338\ttotal: 240ms\tremaining: 804ms\n","69:\tlearn: 0.6893075\ttotal: 244ms\tremaining: 802ms\n","70:\tlearn: 0.6843004\ttotal: 246ms\tremaining: 793ms\n","71:\tlearn: 0.6807291\ttotal: 248ms\tremaining: 784ms\n","72:\tlearn: 0.6776202\ttotal: 249ms\tremaining: 773ms\n","73:\tlearn: 0.6738757\ttotal: 252ms\tremaining: 770ms\n","74:\tlearn: 0.6684009\ttotal: 256ms\tremaining: 768ms\n","75:\tlearn: 0.6650716\ttotal: 257ms\tremaining: 758ms\n","76:\tlearn: 0.6623554\ttotal: 259ms\tremaining: 750ms\n","77:\tlearn: 0.6588819\ttotal: 261ms\tremaining: 742ms\n","78:\tlearn: 0.6561286\ttotal: 266ms\tremaining: 744ms\n","79:\tlearn: 0.6535659\ttotal: 267ms\tremaining: 735ms\n","80:\tlearn: 0.6507970\ttotal: 269ms\tremaining: 729ms\n","81:\tlearn: 0.6456878\ttotal: 273ms\tremaining: 727ms\n","82:\tlearn: 0.6430508\ttotal: 276ms\tremaining: 721ms\n","83:\tlearn: 0.6387316\ttotal: 278ms\tremaining: 715ms\n","84:\tlearn: 0.6347779\ttotal: 280ms\tremaining: 708ms\n","85:\tlearn: 0.6324233\ttotal: 285ms\tremaining: 710ms\n","86:\tlearn: 0.6299934\ttotal: 287ms\tremaining: 702ms\n","87:\tlearn: 0.6267570\ttotal: 295ms\tremaining: 710ms\n","88:\tlearn: 0.6233899\ttotal: 301ms\tremaining: 714ms\n","89:\tlearn: 0.6219855\ttotal: 314ms\tremaining: 732ms\n","90:\tlearn: 0.6194357\ttotal: 318ms\tremaining: 730ms\n","91:\tlearn: 0.6159079\ttotal: 334ms\tremaining: 756ms\n","92:\tlearn: 0.6131568\ttotal: 337ms\tremaining: 751ms\n","93:\tlearn: 0.6102590\ttotal: 354ms\tremaining: 777ms\n","94:\tlearn: 0.6072557\ttotal: 361ms\tremaining: 778ms\n","95:\tlearn: 0.6035168\ttotal: 365ms\tremaining: 776ms\n","96:\tlearn: 0.6023144\ttotal: 385ms\tremaining: 805ms\n","97:\tlearn: 0.5998305\ttotal: 398ms\tremaining: 821ms\n","98:\tlearn: 0.5965881\ttotal: 399ms\tremaining: 811ms\n","99:\tlearn: 0.5935474\ttotal: 405ms\tremaining: 811ms\n","100:\tlearn: 0.5902917\ttotal: 407ms\tremaining: 801ms\n","101:\tlearn: 0.5884786\ttotal: 409ms\tremaining: 794ms\n","102:\tlearn: 0.5856781\ttotal: 417ms\tremaining: 798ms\n","103:\tlearn: 0.5828300\ttotal: 428ms\tremaining: 806ms\n","104:\tlearn: 0.5812126\ttotal: 430ms\tremaining: 799ms\n","105:\tlearn: 0.5787972\ttotal: 442ms\tremaining: 808ms\n","106:\tlearn: 0.5745767\ttotal: 443ms\tremaining: 798ms\n","107:\tlearn: 0.5722997\ttotal: 448ms\tremaining: 796ms\n","108:\tlearn: 0.5694693\ttotal: 458ms\tremaining: 802ms\n","109:\tlearn: 0.5661205\ttotal: 459ms\tremaining: 792ms\n","110:\tlearn: 0.5634596\ttotal: 460ms\tremaining: 783ms\n","111:\tlearn: 0.5611057\ttotal: 466ms\tremaining: 782ms\n","112:\tlearn: 0.5583950\ttotal: 467ms\tremaining: 772ms\n","113:\tlearn: 0.5560544\ttotal: 468ms\tremaining: 763ms\n","114:\tlearn: 0.5546639\ttotal: 477ms\tremaining: 767ms\n","115:\tlearn: 0.5525984\ttotal: 478ms\tremaining: 758ms\n","116:\tlearn: 0.5508736\ttotal: 479ms\tremaining: 749ms\n","117:\tlearn: 0.5483874\ttotal: 489ms\tremaining: 754ms\n","118:\tlearn: 0.5456017\ttotal: 492ms\tremaining: 749ms\n","119:\tlearn: 0.5435154\ttotal: 498ms\tremaining: 747ms\n","120:\tlearn: 0.5416437\ttotal: 499ms\tremaining: 738ms\n","121:\tlearn: 0.5381425\ttotal: 505ms\tremaining: 736ms\n","122:\tlearn: 0.5366611\ttotal: 507ms\tremaining: 730ms\n","123:\tlearn: 0.5352923\ttotal: 508ms\tremaining: 721ms\n","124:\tlearn: 0.5323660\ttotal: 509ms\tremaining: 713ms\n","125:\tlearn: 0.5306043\ttotal: 510ms\tremaining: 704ms\n","126:\tlearn: 0.5297408\ttotal: 511ms\tremaining: 696ms\n","127:\tlearn: 0.5281890\ttotal: 512ms\tremaining: 688ms\n","128:\tlearn: 0.5248330\ttotal: 513ms\tremaining: 680ms\n","129:\tlearn: 0.5232734\ttotal: 517ms\tremaining: 676ms\n","130:\tlearn: 0.5219192\ttotal: 518ms\tremaining: 668ms\n","131:\tlearn: 0.5202315\ttotal: 519ms\tremaining: 661ms\n","132:\tlearn: 0.5186522\ttotal: 520ms\tremaining: 653ms\n","133:\tlearn: 0.5164232\ttotal: 521ms\tremaining: 646ms\n","134:\tlearn: 0.5148329\ttotal: 522ms\tremaining: 638ms\n","135:\tlearn: 0.5136653\ttotal: 527ms\tremaining: 636ms\n","136:\tlearn: 0.5113854\ttotal: 528ms\tremaining: 629ms\n","137:\tlearn: 0.5091586\ttotal: 529ms\tremaining: 621ms\n","138:\tlearn: 0.5076212\ttotal: 536ms\tremaining: 621ms\n","139:\tlearn: 0.5056838\ttotal: 541ms\tremaining: 618ms\n","140:\tlearn: 0.5035191\ttotal: 547ms\tremaining: 617ms\n","141:\tlearn: 0.5006237\ttotal: 551ms\tremaining: 613ms\n","142:\tlearn: 0.4985877\ttotal: 555ms\tremaining: 609ms\n","143:\tlearn: 0.4964785\ttotal: 559ms\tremaining: 605ms\n","144:\tlearn: 0.4943769\ttotal: 563ms\tremaining: 602ms\n","145:\tlearn: 0.4929956\ttotal: 567ms\tremaining: 598ms\n","146:\tlearn: 0.4912623\ttotal: 571ms\tremaining: 594ms\n","147:\tlearn: 0.4892769\ttotal: 573ms\tremaining: 588ms\n","148:\tlearn: 0.4879128\ttotal: 577ms\tremaining: 585ms\n","149:\tlearn: 0.4868081\ttotal: 583ms\tremaining: 583ms\n","150:\tlearn: 0.4856476\ttotal: 586ms\tremaining: 578ms\n","151:\tlearn: 0.4837619\ttotal: 590ms\tremaining: 575ms\n","152:\tlearn: 0.4820114\ttotal: 594ms\tremaining: 570ms\n","153:\tlearn: 0.4800556\ttotal: 599ms\tremaining: 568ms\n","154:\tlearn: 0.4788992\ttotal: 609ms\tremaining: 570ms\n","155:\tlearn: 0.4773791\ttotal: 620ms\tremaining: 572ms\n","156:\tlearn: 0.4759054\ttotal: 622ms\tremaining: 566ms\n","157:\tlearn: 0.4746968\ttotal: 627ms\tremaining: 564ms\n","158:\tlearn: 0.4724396\ttotal: 630ms\tremaining: 559ms\n","159:\tlearn: 0.4710726\ttotal: 631ms\tremaining: 552ms\n","160:\tlearn: 0.4692525\ttotal: 633ms\tremaining: 547ms\n","161:\tlearn: 0.4683381\ttotal: 635ms\tremaining: 541ms\n","162:\tlearn: 0.4671345\ttotal: 641ms\tremaining: 539ms\n","163:\tlearn: 0.4653183\ttotal: 642ms\tremaining: 532ms\n","164:\tlearn: 0.4641766\ttotal: 646ms\tremaining: 529ms\n","165:\tlearn: 0.4627126\ttotal: 652ms\tremaining: 526ms\n","166:\tlearn: 0.4617017\ttotal: 655ms\tremaining: 521ms\n","167:\tlearn: 0.4600662\ttotal: 658ms\tremaining: 517ms\n","168:\tlearn: 0.4581183\ttotal: 664ms\tremaining: 514ms\n","169:\tlearn: 0.4569035\ttotal: 666ms\tremaining: 509ms\n","170:\tlearn: 0.4555614\ttotal: 669ms\tremaining: 505ms\n","171:\tlearn: 0.4536812\ttotal: 676ms\tremaining: 503ms\n","172:\tlearn: 0.4513396\ttotal: 677ms\tremaining: 497ms\n","173:\tlearn: 0.4489761\ttotal: 679ms\tremaining: 492ms\n","174:\tlearn: 0.4471520\ttotal: 683ms\tremaining: 488ms\n","175:\tlearn: 0.4461761\ttotal: 687ms\tremaining: 484ms\n","176:\tlearn: 0.4441919\ttotal: 690ms\tremaining: 479ms\n","177:\tlearn: 0.4432403\ttotal: 694ms\tremaining: 476ms\n","178:\tlearn: 0.4410303\ttotal: 696ms\tremaining: 471ms\n","179:\tlearn: 0.4400951\ttotal: 700ms\tremaining: 467ms\n","180:\tlearn: 0.4393697\ttotal: 702ms\tremaining: 462ms\n","181:\tlearn: 0.4375081\ttotal: 704ms\tremaining: 457ms\n","182:\tlearn: 0.4353500\ttotal: 717ms\tremaining: 458ms\n","183:\tlearn: 0.4316975\ttotal: 722ms\tremaining: 455ms\n","184:\tlearn: 0.4300402\ttotal: 725ms\tremaining: 450ms\n","185:\tlearn: 0.4284126\ttotal: 734ms\tremaining: 450ms\n","186:\tlearn: 0.4269560\ttotal: 739ms\tremaining: 447ms\n","187:\tlearn: 0.4261620\ttotal: 754ms\tremaining: 449ms\n","188:\tlearn: 0.4251354\ttotal: 755ms\tremaining: 444ms\n","189:\tlearn: 0.4239340\ttotal: 759ms\tremaining: 439ms\n","190:\tlearn: 0.4226003\ttotal: 765ms\tremaining: 437ms\n","191:\tlearn: 0.4219896\ttotal: 771ms\tremaining: 434ms\n","192:\tlearn: 0.4200371\ttotal: 778ms\tremaining: 431ms\n","193:\tlearn: 0.4188470\ttotal: 788ms\tremaining: 431ms\n","194:\tlearn: 0.4169624\ttotal: 790ms\tremaining: 425ms\n","195:\tlearn: 0.4156824\ttotal: 797ms\tremaining: 423ms\n","196:\tlearn: 0.4142906\ttotal: 801ms\tremaining: 419ms\n","197:\tlearn: 0.4128438\ttotal: 804ms\tremaining: 414ms\n","198:\tlearn: 0.4118376\ttotal: 814ms\tremaining: 413ms\n","199:\tlearn: 0.4104667\ttotal: 817ms\tremaining: 408ms\n","200:\tlearn: 0.4085512\ttotal: 819ms\tremaining: 403ms\n","201:\tlearn: 0.4077456\ttotal: 824ms\tremaining: 400ms\n","202:\tlearn: 0.4066741\ttotal: 826ms\tremaining: 395ms\n","203:\tlearn: 0.4059353\ttotal: 828ms\tremaining: 390ms\n","204:\tlearn: 0.4050160\ttotal: 830ms\tremaining: 385ms\n","205:\tlearn: 0.4040212\ttotal: 832ms\tremaining: 380ms\n","206:\tlearn: 0.4015774\ttotal: 834ms\tremaining: 374ms\n","207:\tlearn: 0.4006483\ttotal: 835ms\tremaining: 370ms\n","208:\tlearn: 0.3994835\ttotal: 838ms\tremaining: 365ms\n","209:\tlearn: 0.3975735\ttotal: 839ms\tremaining: 360ms\n","210:\tlearn: 0.3964121\ttotal: 841ms\tremaining: 355ms\n","211:\tlearn: 0.3954680\ttotal: 843ms\tremaining: 350ms\n","212:\tlearn: 0.3944943\ttotal: 845ms\tremaining: 345ms\n","213:\tlearn: 0.3933858\ttotal: 847ms\tremaining: 340ms\n","214:\tlearn: 0.3922443\ttotal: 849ms\tremaining: 335ms\n","215:\tlearn: 0.3910783\ttotal: 851ms\tremaining: 331ms\n","216:\tlearn: 0.3899482\ttotal: 853ms\tremaining: 326ms\n","217:\tlearn: 0.3879705\ttotal: 854ms\tremaining: 321ms\n","218:\tlearn: 0.3869356\ttotal: 856ms\tremaining: 317ms\n","219:\tlearn: 0.3863255\ttotal: 858ms\tremaining: 312ms\n","220:\tlearn: 0.3857136\ttotal: 859ms\tremaining: 307ms\n","221:\tlearn: 0.3845652\ttotal: 860ms\tremaining: 302ms\n","222:\tlearn: 0.3831476\ttotal: 862ms\tremaining: 298ms\n","223:\tlearn: 0.3817512\ttotal: 864ms\tremaining: 293ms\n","224:\tlearn: 0.3806211\ttotal: 866ms\tremaining: 289ms\n","225:\tlearn: 0.3793193\ttotal: 868ms\tremaining: 284ms\n","226:\tlearn: 0.3783314\ttotal: 870ms\tremaining: 280ms\n","227:\tlearn: 0.3759287\ttotal: 872ms\tremaining: 275ms\n","228:\tlearn: 0.3743254\ttotal: 874ms\tremaining: 271ms\n","229:\tlearn: 0.3734095\ttotal: 876ms\tremaining: 267ms\n","230:\tlearn: 0.3723443\ttotal: 878ms\tremaining: 262ms\n","231:\tlearn: 0.3711563\ttotal: 879ms\tremaining: 258ms\n","232:\tlearn: 0.3702089\ttotal: 881ms\tremaining: 253ms\n","233:\tlearn: 0.3690283\ttotal: 884ms\tremaining: 249ms\n","234:\tlearn: 0.3682240\ttotal: 885ms\tremaining: 245ms\n","235:\tlearn: 0.3673030\ttotal: 887ms\tremaining: 241ms\n","236:\tlearn: 0.3664840\ttotal: 889ms\tremaining: 236ms\n","237:\tlearn: 0.3650486\ttotal: 891ms\tremaining: 232ms\n","238:\tlearn: 0.3636045\ttotal: 893ms\tremaining: 228ms\n","239:\tlearn: 0.3628877\ttotal: 895ms\tremaining: 224ms\n","240:\tlearn: 0.3617899\ttotal: 899ms\tremaining: 220ms\n","241:\tlearn: 0.3608440\ttotal: 900ms\tremaining: 216ms\n","242:\tlearn: 0.3595421\ttotal: 909ms\tremaining: 213ms\n","243:\tlearn: 0.3588508\ttotal: 910ms\tremaining: 209ms\n","244:\tlearn: 0.3579756\ttotal: 912ms\tremaining: 205ms\n","245:\tlearn: 0.3564260\ttotal: 914ms\tremaining: 201ms\n","246:\tlearn: 0.3551131\ttotal: 916ms\tremaining: 197ms\n","247:\tlearn: 0.3538414\ttotal: 918ms\tremaining: 192ms\n","248:\tlearn: 0.3529181\ttotal: 920ms\tremaining: 188ms\n","249:\tlearn: 0.3515104\ttotal: 922ms\tremaining: 184ms\n","250:\tlearn: 0.3505602\ttotal: 923ms\tremaining: 180ms\n","251:\tlearn: 0.3495271\ttotal: 925ms\tremaining: 176ms\n","252:\tlearn: 0.3486451\ttotal: 927ms\tremaining: 172ms\n","253:\tlearn: 0.3477454\ttotal: 931ms\tremaining: 169ms\n","254:\tlearn: 0.3468395\ttotal: 932ms\tremaining: 165ms\n","255:\tlearn: 0.3460451\ttotal: 934ms\tremaining: 160ms\n","256:\tlearn: 0.3444594\ttotal: 935ms\tremaining: 156ms\n","257:\tlearn: 0.3436745\ttotal: 935ms\tremaining: 152ms\n","258:\tlearn: 0.3431051\ttotal: 936ms\tremaining: 148ms\n","259:\tlearn: 0.3414677\ttotal: 937ms\tremaining: 144ms\n","260:\tlearn: 0.3405461\ttotal: 938ms\tremaining: 140ms\n","261:\tlearn: 0.3396382\ttotal: 939ms\tremaining: 136ms\n","262:\tlearn: 0.3385758\ttotal: 945ms\tremaining: 133ms\n","263:\tlearn: 0.3375701\ttotal: 946ms\tremaining: 129ms\n","264:\tlearn: 0.3370375\ttotal: 947ms\tremaining: 125ms\n","265:\tlearn: 0.3359224\ttotal: 948ms\tremaining: 121ms\n","266:\tlearn: 0.3347308\ttotal: 949ms\tremaining: 117ms\n","267:\tlearn: 0.3332815\ttotal: 950ms\tremaining: 113ms\n","268:\tlearn: 0.3325254\ttotal: 951ms\tremaining: 110ms\n","269:\tlearn: 0.3310543\ttotal: 952ms\tremaining: 106ms\n","270:\tlearn: 0.3306261\ttotal: 952ms\tremaining: 102ms\n","271:\tlearn: 0.3300959\ttotal: 953ms\tremaining: 98.1ms\n","272:\tlearn: 0.3286275\ttotal: 954ms\tremaining: 94.3ms\n","273:\tlearn: 0.3279777\ttotal: 955ms\tremaining: 90.6ms\n","274:\tlearn: 0.3272825\ttotal: 955ms\tremaining: 86.9ms\n","275:\tlearn: 0.3267813\ttotal: 956ms\tremaining: 83.2ms\n","276:\tlearn: 0.3257895\ttotal: 957ms\tremaining: 79.5ms\n","277:\tlearn: 0.3249455\ttotal: 958ms\tremaining: 75.8ms\n","278:\tlearn: 0.3244912\ttotal: 962ms\tremaining: 72.4ms\n","279:\tlearn: 0.3233262\ttotal: 967ms\tremaining: 69.1ms\n","280:\tlearn: 0.3225136\ttotal: 968ms\tremaining: 65.4ms\n","281:\tlearn: 0.3216658\ttotal: 971ms\tremaining: 62ms\n","282:\tlearn: 0.3201450\ttotal: 977ms\tremaining: 58.7ms\n","283:\tlearn: 0.3194455\ttotal: 978ms\tremaining: 55.1ms\n","284:\tlearn: 0.3177855\ttotal: 979ms\tremaining: 51.5ms\n","285:\tlearn: 0.3170394\ttotal: 981ms\tremaining: 48ms\n","286:\tlearn: 0.3159180\ttotal: 982ms\tremaining: 44.5ms\n","287:\tlearn: 0.3150689\ttotal: 982ms\tremaining: 40.9ms\n","288:\tlearn: 0.3146252\ttotal: 984ms\tremaining: 37.4ms\n","289:\tlearn: 0.3137885\ttotal: 986ms\tremaining: 34ms\n","290:\tlearn: 0.3129815\ttotal: 987ms\tremaining: 30.5ms\n","291:\tlearn: 0.3124943\ttotal: 989ms\tremaining: 27.1ms\n","292:\tlearn: 0.3118089\ttotal: 991ms\tremaining: 23.7ms\n","293:\tlearn: 0.3108978\ttotal: 993ms\tremaining: 20.3ms\n","294:\tlearn: 0.3097730\ttotal: 1s\tremaining: 17ms\n","295:\tlearn: 0.3090379\ttotal: 1s\tremaining: 13.6ms\n","296:\tlearn: 0.3079060\ttotal: 1.01s\tremaining: 10.2ms\n","297:\tlearn: 0.3069315\ttotal: 1.01s\tremaining: 6.76ms\n","298:\tlearn: 0.3061486\ttotal: 1.01s\tremaining: 3.38ms\n","299:\tlearn: 0.3050794\ttotal: 1.01s\tremaining: 0us\n","0:\tlearn: 1.3808603\ttotal: 989us\tremaining: 296ms\n","1:\tlearn: 1.3751254\ttotal: 1.67ms\tremaining: 248ms\n","2:\tlearn: 1.3701926\ttotal: 3.01ms\tremaining: 298ms\n","3:\tlearn: 1.3659746\ttotal: 4.86ms\tremaining: 360ms\n","4:\tlearn: 1.3617655\ttotal: 6.55ms\tremaining: 386ms\n","5:\tlearn: 1.3571691\ttotal: 11.3ms\tremaining: 554ms\n","6:\tlearn: 1.3525424\ttotal: 12.6ms\tremaining: 528ms\n","7:\tlearn: 1.3483328\ttotal: 14ms\tremaining: 511ms\n","8:\tlearn: 1.3438344\ttotal: 15.7ms\tremaining: 508ms\n","9:\tlearn: 1.3389779\ttotal: 17.8ms\tremaining: 515ms\n","10:\tlearn: 1.3342646\ttotal: 23ms\tremaining: 605ms\n","11:\tlearn: 1.3288082\ttotal: 24.3ms\tremaining: 583ms\n","12:\tlearn: 1.3237336\ttotal: 25.4ms\tremaining: 562ms\n","13:\tlearn: 1.3198421\ttotal: 28.3ms\tremaining: 578ms\n","14:\tlearn: 1.3149293\ttotal: 30.3ms\tremaining: 575ms\n","15:\tlearn: 1.3099589\ttotal: 32.1ms\tremaining: 570ms\n","16:\tlearn: 1.3051010\ttotal: 33.9ms\tremaining: 565ms\n","17:\tlearn: 1.3007018\ttotal: 35.4ms\tremaining: 555ms\n","18:\tlearn: 1.2967111\ttotal: 36.3ms\tremaining: 537ms\n","19:\tlearn: 1.2924446\ttotal: 37.8ms\tremaining: 530ms\n","20:\tlearn: 1.2875869\ttotal: 39.5ms\tremaining: 525ms\n","21:\tlearn: 1.2836047\ttotal: 40.9ms\tremaining: 516ms\n","22:\tlearn: 1.2795469\ttotal: 42.7ms\tremaining: 515ms\n","23:\tlearn: 1.2756466\ttotal: 44.7ms\tremaining: 514ms\n","24:\tlearn: 1.2720524\ttotal: 46.5ms\tremaining: 511ms\n","25:\tlearn: 1.2681787\ttotal: 48.3ms\tremaining: 509ms\n","26:\tlearn: 1.2644768\ttotal: 49.7ms\tremaining: 502ms\n","27:\tlearn: 1.2606380\ttotal: 51.2ms\tremaining: 497ms\n","28:\tlearn: 1.2559355\ttotal: 53.9ms\tremaining: 503ms\n","29:\tlearn: 1.2524392\ttotal: 55.7ms\tremaining: 501ms\n","30:\tlearn: 1.2487263\ttotal: 57.7ms\tremaining: 501ms\n","31:\tlearn: 1.2451054\ttotal: 60.8ms\tremaining: 509ms\n","32:\tlearn: 1.2411680\ttotal: 64ms\tremaining: 518ms\n","33:\tlearn: 1.2370366\ttotal: 65.5ms\tremaining: 512ms\n","34:\tlearn: 1.2331292\ttotal: 67.5ms\tremaining: 511ms\n","35:\tlearn: 1.2291996\ttotal: 73.9ms\tremaining: 542ms\n","36:\tlearn: 1.2258789\ttotal: 76.7ms\tremaining: 545ms\n","37:\tlearn: 1.2224062\ttotal: 78.7ms\tremaining: 543ms\n","38:\tlearn: 1.2189593\ttotal: 79.9ms\tremaining: 535ms\n","39:\tlearn: 1.2156539\ttotal: 80.4ms\tremaining: 523ms\n","40:\tlearn: 1.2123015\ttotal: 84.1ms\tremaining: 531ms\n","41:\tlearn: 1.2081971\ttotal: 86.2ms\tremaining: 529ms\n","42:\tlearn: 1.2052537\ttotal: 88.1ms\tremaining: 527ms\n","43:\tlearn: 1.2020168\ttotal: 90.1ms\tremaining: 524ms\n","44:\tlearn: 1.1984463\ttotal: 95.2ms\tremaining: 539ms\n","45:\tlearn: 1.1951807\ttotal: 97.3ms\tremaining: 537ms\n","46:\tlearn: 1.1920458\ttotal: 101ms\tremaining: 544ms\n","47:\tlearn: 1.1887353\ttotal: 103ms\tremaining: 539ms\n","48:\tlearn: 1.1852713\ttotal: 105ms\tremaining: 536ms\n","49:\tlearn: 1.1823931\ttotal: 107ms\tremaining: 533ms\n","50:\tlearn: 1.1792429\ttotal: 111ms\tremaining: 541ms\n","51:\tlearn: 1.1763819\ttotal: 113ms\tremaining: 537ms\n","52:\tlearn: 1.1728682\ttotal: 115ms\tremaining: 537ms\n","53:\tlearn: 1.1692480\ttotal: 117ms\tremaining: 533ms\n","54:\tlearn: 1.1665761\ttotal: 119ms\tremaining: 530ms\n","55:\tlearn: 1.1638571\ttotal: 120ms\tremaining: 524ms\n","56:\tlearn: 1.1607217\ttotal: 122ms\tremaining: 520ms\n","57:\tlearn: 1.1581131\ttotal: 124ms\tremaining: 519ms\n","58:\tlearn: 1.1553911\ttotal: 126ms\tremaining: 514ms\n","59:\tlearn: 1.1519709\ttotal: 127ms\tremaining: 507ms\n","60:\tlearn: 1.1492468\ttotal: 128ms\tremaining: 501ms\n","61:\tlearn: 1.1465439\ttotal: 130ms\tremaining: 498ms\n","62:\tlearn: 1.1443290\ttotal: 132ms\tremaining: 495ms\n","63:\tlearn: 1.1414315\ttotal: 133ms\tremaining: 492ms\n","64:\tlearn: 1.1386929\ttotal: 135ms\tremaining: 489ms\n","65:\tlearn: 1.1360672\ttotal: 137ms\tremaining: 487ms\n","66:\tlearn: 1.1329650\ttotal: 139ms\tremaining: 484ms\n","67:\tlearn: 1.1307433\ttotal: 141ms\tremaining: 481ms\n","68:\tlearn: 1.1278379\ttotal: 143ms\tremaining: 477ms\n","69:\tlearn: 1.1247592\ttotal: 149ms\tremaining: 488ms\n","70:\tlearn: 1.1222224\ttotal: 150ms\tremaining: 485ms\n","71:\tlearn: 1.1194578\ttotal: 152ms\tremaining: 482ms\n","72:\tlearn: 1.1172581\ttotal: 153ms\tremaining: 477ms\n","73:\tlearn: 1.1148873\ttotal: 156ms\tremaining: 476ms\n","74:\tlearn: 1.1123973\ttotal: 157ms\tremaining: 472ms\n","75:\tlearn: 1.1098090\ttotal: 159ms\tremaining: 469ms\n","76:\tlearn: 1.1070766\ttotal: 165ms\tremaining: 478ms\n","77:\tlearn: 1.1050699\ttotal: 167ms\tremaining: 475ms\n","78:\tlearn: 1.1031846\ttotal: 169ms\tremaining: 472ms\n","79:\tlearn: 1.1005998\ttotal: 171ms\tremaining: 469ms\n","80:\tlearn: 1.0981921\ttotal: 172ms\tremaining: 466ms\n","81:\tlearn: 1.0960488\ttotal: 174ms\tremaining: 463ms\n","82:\tlearn: 1.0935198\ttotal: 176ms\tremaining: 459ms\n","83:\tlearn: 1.0912311\ttotal: 177ms\tremaining: 455ms\n","84:\tlearn: 1.0889460\ttotal: 178ms\tremaining: 451ms\n","85:\tlearn: 1.0865824\ttotal: 180ms\tremaining: 448ms\n","86:\tlearn: 1.0843205\ttotal: 182ms\tremaining: 445ms\n","87:\tlearn: 1.0821277\ttotal: 183ms\tremaining: 442ms\n","88:\tlearn: 1.0801006\ttotal: 185ms\tremaining: 438ms\n","89:\tlearn: 1.0780355\ttotal: 186ms\tremaining: 433ms\n","90:\tlearn: 1.0758293\ttotal: 187ms\tremaining: 430ms\n","91:\tlearn: 1.0735513\ttotal: 189ms\tremaining: 427ms\n","92:\tlearn: 1.0712741\ttotal: 190ms\tremaining: 423ms\n","93:\tlearn: 1.0692462\ttotal: 191ms\tremaining: 419ms\n","94:\tlearn: 1.0670031\ttotal: 194ms\tremaining: 419ms\n","95:\tlearn: 1.0650930\ttotal: 196ms\tremaining: 416ms\n","96:\tlearn: 1.0628853\ttotal: 197ms\tremaining: 412ms\n","97:\tlearn: 1.0603839\ttotal: 199ms\tremaining: 410ms\n","98:\tlearn: 1.0581980\ttotal: 201ms\tremaining: 407ms\n","99:\tlearn: 1.0561864\ttotal: 202ms\tremaining: 405ms\n","100:\tlearn: 1.0542508\ttotal: 204ms\tremaining: 402ms\n","101:\tlearn: 1.0522619\ttotal: 206ms\tremaining: 400ms\n","102:\tlearn: 1.0500986\ttotal: 207ms\tremaining: 396ms\n","103:\tlearn: 1.0481658\ttotal: 208ms\tremaining: 391ms\n","104:\tlearn: 1.0459890\ttotal: 209ms\tremaining: 388ms\n","105:\tlearn: 1.0444301\ttotal: 211ms\tremaining: 386ms\n","106:\tlearn: 1.0423425\ttotal: 213ms\tremaining: 384ms\n","107:\tlearn: 1.0401836\ttotal: 214ms\tremaining: 381ms\n","108:\tlearn: 1.0381822\ttotal: 220ms\tremaining: 385ms\n","109:\tlearn: 1.0365162\ttotal: 223ms\tremaining: 386ms\n","110:\tlearn: 1.0347819\ttotal: 225ms\tremaining: 384ms\n","111:\tlearn: 1.0331139\ttotal: 227ms\tremaining: 382ms\n","112:\tlearn: 1.0314618\ttotal: 229ms\tremaining: 378ms\n","113:\tlearn: 1.0298529\ttotal: 230ms\tremaining: 375ms\n","114:\tlearn: 1.0280558\ttotal: 234ms\tremaining: 377ms\n","115:\tlearn: 1.0264765\ttotal: 236ms\tremaining: 375ms\n","116:\tlearn: 1.0249427\ttotal: 241ms\tremaining: 377ms\n","117:\tlearn: 1.0235761\ttotal: 243ms\tremaining: 374ms\n","118:\tlearn: 1.0217864\ttotal: 244ms\tremaining: 371ms\n","119:\tlearn: 1.0201426\ttotal: 248ms\tremaining: 373ms\n","120:\tlearn: 1.0186511\ttotal: 252ms\tremaining: 372ms\n","121:\tlearn: 1.0168460\ttotal: 255ms\tremaining: 372ms\n","122:\tlearn: 1.0149183\ttotal: 258ms\tremaining: 371ms\n","123:\tlearn: 1.0134658\ttotal: 262ms\tremaining: 373ms\n","124:\tlearn: 1.0116285\ttotal: 263ms\tremaining: 369ms\n","125:\tlearn: 1.0099182\ttotal: 267ms\tremaining: 369ms\n","126:\tlearn: 1.0084295\ttotal: 268ms\tremaining: 365ms\n","127:\tlearn: 1.0068961\ttotal: 269ms\tremaining: 362ms\n","128:\tlearn: 1.0050615\ttotal: 271ms\tremaining: 359ms\n","129:\tlearn: 1.0033346\ttotal: 274ms\tremaining: 358ms\n","130:\tlearn: 1.0021494\ttotal: 275ms\tremaining: 355ms\n","131:\tlearn: 1.0007200\ttotal: 277ms\tremaining: 353ms\n","132:\tlearn: 0.9994854\ttotal: 279ms\tremaining: 350ms\n","133:\tlearn: 0.9980382\ttotal: 283ms\tremaining: 350ms\n","134:\tlearn: 0.9966511\ttotal: 285ms\tremaining: 348ms\n","135:\tlearn: 0.9949869\ttotal: 287ms\tremaining: 346ms\n","136:\tlearn: 0.9935196\ttotal: 288ms\tremaining: 342ms\n","137:\tlearn: 0.9923401\ttotal: 290ms\tremaining: 340ms\n","138:\tlearn: 0.9905772\ttotal: 291ms\tremaining: 337ms\n","139:\tlearn: 0.9891609\ttotal: 293ms\tremaining: 335ms\n","140:\tlearn: 0.9881383\ttotal: 294ms\tremaining: 332ms\n","141:\tlearn: 0.9869405\ttotal: 296ms\tremaining: 329ms\n","142:\tlearn: 0.9855260\ttotal: 300ms\tremaining: 330ms\n","143:\tlearn: 0.9844025\ttotal: 304ms\tremaining: 329ms\n","144:\tlearn: 0.9830664\ttotal: 306ms\tremaining: 327ms\n","145:\tlearn: 0.9819228\ttotal: 307ms\tremaining: 324ms\n","146:\tlearn: 0.9802750\ttotal: 308ms\tremaining: 321ms\n","147:\tlearn: 0.9786862\ttotal: 310ms\tremaining: 318ms\n","148:\tlearn: 0.9776764\ttotal: 311ms\tremaining: 315ms\n","149:\tlearn: 0.9761262\ttotal: 318ms\tremaining: 318ms\n","150:\tlearn: 0.9743694\ttotal: 320ms\tremaining: 316ms\n","151:\tlearn: 0.9731165\ttotal: 330ms\tremaining: 321ms\n","152:\tlearn: 0.9716343\ttotal: 331ms\tremaining: 318ms\n","153:\tlearn: 0.9704777\ttotal: 333ms\tremaining: 316ms\n","154:\tlearn: 0.9693757\ttotal: 334ms\tremaining: 313ms\n","155:\tlearn: 0.9680681\ttotal: 335ms\tremaining: 309ms\n","156:\tlearn: 0.9669047\ttotal: 337ms\tremaining: 307ms\n","157:\tlearn: 0.9656346\ttotal: 338ms\tremaining: 304ms\n","158:\tlearn: 0.9643505\ttotal: 340ms\tremaining: 301ms\n","159:\tlearn: 0.9630111\ttotal: 342ms\tremaining: 299ms\n","160:\tlearn: 0.9616204\ttotal: 347ms\tremaining: 299ms\n","161:\tlearn: 0.9602044\ttotal: 349ms\tremaining: 297ms\n","162:\tlearn: 0.9590915\ttotal: 351ms\tremaining: 295ms\n","163:\tlearn: 0.9575742\ttotal: 353ms\tremaining: 293ms\n","164:\tlearn: 0.9566444\ttotal: 357ms\tremaining: 292ms\n","165:\tlearn: 0.9552188\ttotal: 359ms\tremaining: 290ms\n","166:\tlearn: 0.9543467\ttotal: 360ms\tremaining: 287ms\n","167:\tlearn: 0.9530944\ttotal: 362ms\tremaining: 284ms\n","168:\tlearn: 0.9518985\ttotal: 364ms\tremaining: 282ms\n","169:\tlearn: 0.9504638\ttotal: 365ms\tremaining: 279ms\n","170:\tlearn: 0.9496185\ttotal: 367ms\tremaining: 277ms\n","171:\tlearn: 0.9482939\ttotal: 369ms\tremaining: 275ms\n","172:\tlearn: 0.9469971\ttotal: 371ms\tremaining: 272ms\n","173:\tlearn: 0.9457724\ttotal: 373ms\tremaining: 270ms\n","174:\tlearn: 0.9445621\ttotal: 377ms\tremaining: 269ms\n","175:\tlearn: 0.9437008\ttotal: 379ms\tremaining: 267ms\n","176:\tlearn: 0.9426739\ttotal: 381ms\tremaining: 265ms\n","177:\tlearn: 0.9416983\ttotal: 383ms\tremaining: 262ms\n","178:\tlearn: 0.9404829\ttotal: 385ms\tremaining: 260ms\n","179:\tlearn: 0.9394726\ttotal: 387ms\tremaining: 258ms\n","180:\tlearn: 0.9384588\ttotal: 389ms\tremaining: 256ms\n","181:\tlearn: 0.9376435\ttotal: 394ms\tremaining: 255ms\n","182:\tlearn: 0.9368569\ttotal: 395ms\tremaining: 252ms\n","183:\tlearn: 0.9357604\ttotal: 395ms\tremaining: 249ms\n","184:\tlearn: 0.9341988\ttotal: 395ms\tremaining: 246ms\n","185:\tlearn: 0.9327232\ttotal: 402ms\tremaining: 246ms\n","186:\tlearn: 0.9315264\ttotal: 403ms\tremaining: 243ms\n","187:\tlearn: 0.9301053\ttotal: 408ms\tremaining: 243ms\n","188:\tlearn: 0.9287757\ttotal: 413ms\tremaining: 242ms\n","189:\tlearn: 0.9277732\ttotal: 416ms\tremaining: 241ms\n","190:\tlearn: 0.9264840\ttotal: 421ms\tremaining: 240ms\n","191:\tlearn: 0.9254722\ttotal: 424ms\tremaining: 239ms\n","192:\tlearn: 0.9242594\ttotal: 428ms\tremaining: 237ms\n","193:\tlearn: 0.9231765\ttotal: 431ms\tremaining: 235ms\n","194:\tlearn: 0.9220124\ttotal: 434ms\tremaining: 234ms\n","195:\tlearn: 0.9210457\ttotal: 437ms\tremaining: 232ms\n","196:\tlearn: 0.9200164\ttotal: 440ms\tremaining: 230ms\n","197:\tlearn: 0.9192447\ttotal: 442ms\tremaining: 228ms\n","198:\tlearn: 0.9178465\ttotal: 451ms\tremaining: 229ms\n","199:\tlearn: 0.9166321\ttotal: 455ms\tremaining: 228ms\n","200:\tlearn: 0.9155973\ttotal: 456ms\tremaining: 225ms\n","201:\tlearn: 0.9144843\ttotal: 458ms\tremaining: 222ms\n","202:\tlearn: 0.9133798\ttotal: 460ms\tremaining: 220ms\n","203:\tlearn: 0.9122946\ttotal: 462ms\tremaining: 217ms\n","204:\tlearn: 0.9110450\ttotal: 465ms\tremaining: 216ms\n","205:\tlearn: 0.9098502\ttotal: 466ms\tremaining: 213ms\n","206:\tlearn: 0.9083268\ttotal: 468ms\tremaining: 210ms\n","207:\tlearn: 0.9073677\ttotal: 470ms\tremaining: 208ms\n","208:\tlearn: 0.9060717\ttotal: 472ms\tremaining: 205ms\n","209:\tlearn: 0.9053123\ttotal: 473ms\tremaining: 203ms\n","210:\tlearn: 0.9039616\ttotal: 475ms\tremaining: 200ms\n","211:\tlearn: 0.9025370\ttotal: 477ms\tremaining: 198ms\n","212:\tlearn: 0.9018532\ttotal: 479ms\tremaining: 195ms\n","213:\tlearn: 0.9007570\ttotal: 480ms\tremaining: 193ms\n","214:\tlearn: 0.8999489\ttotal: 482ms\tremaining: 191ms\n","215:\tlearn: 0.8984474\ttotal: 484ms\tremaining: 188ms\n","216:\tlearn: 0.8975511\ttotal: 485ms\tremaining: 186ms\n","217:\tlearn: 0.8965103\ttotal: 487ms\tremaining: 183ms\n","218:\tlearn: 0.8954917\ttotal: 489ms\tremaining: 181ms\n","219:\tlearn: 0.8944006\ttotal: 491ms\tremaining: 178ms\n","220:\tlearn: 0.8929947\ttotal: 493ms\tremaining: 176ms\n","221:\tlearn: 0.8919992\ttotal: 496ms\tremaining: 174ms\n","222:\tlearn: 0.8910524\ttotal: 498ms\tremaining: 172ms\n","223:\tlearn: 0.8901416\ttotal: 501ms\tremaining: 170ms\n","224:\tlearn: 0.8890423\ttotal: 505ms\tremaining: 168ms\n","225:\tlearn: 0.8877331\ttotal: 506ms\tremaining: 166ms\n","226:\tlearn: 0.8869287\ttotal: 509ms\tremaining: 164ms\n","227:\tlearn: 0.8859654\ttotal: 511ms\tremaining: 161ms\n","228:\tlearn: 0.8847270\ttotal: 512ms\tremaining: 159ms\n","229:\tlearn: 0.8837391\ttotal: 514ms\tremaining: 156ms\n","230:\tlearn: 0.8826980\ttotal: 515ms\tremaining: 154ms\n","231:\tlearn: 0.8816791\ttotal: 517ms\tremaining: 151ms\n","232:\tlearn: 0.8808244\ttotal: 522ms\tremaining: 150ms\n","233:\tlearn: 0.8799001\ttotal: 524ms\tremaining: 148ms\n","234:\tlearn: 0.8788568\ttotal: 526ms\tremaining: 145ms\n","235:\tlearn: 0.8779526\ttotal: 527ms\tremaining: 143ms\n","236:\tlearn: 0.8772796\ttotal: 530ms\tremaining: 141ms\n","237:\tlearn: 0.8762937\ttotal: 531ms\tremaining: 138ms\n","238:\tlearn: 0.8749651\ttotal: 536ms\tremaining: 137ms\n","239:\tlearn: 0.8744732\ttotal: 537ms\tremaining: 134ms\n","240:\tlearn: 0.8736052\ttotal: 539ms\tremaining: 132ms\n","241:\tlearn: 0.8727000\ttotal: 549ms\tremaining: 131ms\n","242:\tlearn: 0.8718440\ttotal: 551ms\tremaining: 129ms\n","243:\tlearn: 0.8713231\ttotal: 554ms\tremaining: 127ms\n","244:\tlearn: 0.8704502\ttotal: 555ms\tremaining: 125ms\n","245:\tlearn: 0.8694645\ttotal: 557ms\tremaining: 122ms\n","246:\tlearn: 0.8687026\ttotal: 559ms\tremaining: 120ms\n","247:\tlearn: 0.8681023\ttotal: 560ms\tremaining: 117ms\n","248:\tlearn: 0.8671259\ttotal: 562ms\tremaining: 115ms\n","249:\tlearn: 0.8660112\ttotal: 563ms\tremaining: 113ms\n","250:\tlearn: 0.8653420\ttotal: 565ms\tremaining: 110ms\n","251:\tlearn: 0.8643779\ttotal: 569ms\tremaining: 108ms\n","252:\tlearn: 0.8636320\ttotal: 570ms\tremaining: 106ms\n","253:\tlearn: 0.8627336\ttotal: 573ms\tremaining: 104ms\n","254:\tlearn: 0.8616964\ttotal: 575ms\tremaining: 102ms\n","255:\tlearn: 0.8607086\ttotal: 578ms\tremaining: 99.3ms\n","256:\tlearn: 0.8598941\ttotal: 578ms\tremaining: 96.8ms\n","257:\tlearn: 0.8591447\ttotal: 580ms\tremaining: 94.5ms\n","258:\tlearn: 0.8581460\ttotal: 582ms\tremaining: 92.1ms\n","259:\tlearn: 0.8571461\ttotal: 584ms\tremaining: 89.8ms\n","260:\tlearn: 0.8564793\ttotal: 586ms\tremaining: 87.5ms\n","261:\tlearn: 0.8557809\ttotal: 588ms\tremaining: 85.2ms\n","262:\tlearn: 0.8550955\ttotal: 590ms\tremaining: 83ms\n","263:\tlearn: 0.8544724\ttotal: 597ms\tremaining: 81.3ms\n","264:\tlearn: 0.8538545\ttotal: 598ms\tremaining: 78.9ms\n","265:\tlearn: 0.8530362\ttotal: 599ms\tremaining: 76.6ms\n","266:\tlearn: 0.8519726\ttotal: 601ms\tremaining: 74.3ms\n","267:\tlearn: 0.8513144\ttotal: 602ms\tremaining: 71.9ms\n","268:\tlearn: 0.8508447\ttotal: 604ms\tremaining: 69.6ms\n","269:\tlearn: 0.8499078\ttotal: 606ms\tremaining: 67.3ms\n","270:\tlearn: 0.8489631\ttotal: 608ms\tremaining: 65ms\n","271:\tlearn: 0.8479791\ttotal: 609ms\tremaining: 62.7ms\n","272:\tlearn: 0.8471537\ttotal: 619ms\tremaining: 61.3ms\n","273:\tlearn: 0.8465607\ttotal: 622ms\tremaining: 59ms\n","274:\tlearn: 0.8455010\ttotal: 625ms\tremaining: 56.8ms\n","275:\tlearn: 0.8447333\ttotal: 627ms\tremaining: 54.5ms\n","276:\tlearn: 0.8440397\ttotal: 628ms\tremaining: 52.2ms\n","277:\tlearn: 0.8431943\ttotal: 633ms\tremaining: 50.1ms\n","278:\tlearn: 0.8425206\ttotal: 635ms\tremaining: 47.8ms\n","279:\tlearn: 0.8418060\ttotal: 637ms\tremaining: 45.5ms\n","280:\tlearn: 0.8408305\ttotal: 638ms\tremaining: 43.1ms\n","281:\tlearn: 0.8400080\ttotal: 640ms\tremaining: 40.8ms\n","282:\tlearn: 0.8392099\ttotal: 642ms\tremaining: 38.5ms\n","283:\tlearn: 0.8383321\ttotal: 644ms\tremaining: 36.3ms\n","284:\tlearn: 0.8373194\ttotal: 646ms\tremaining: 34ms\n","285:\tlearn: 0.8368244\ttotal: 647ms\tremaining: 31.7ms\n","286:\tlearn: 0.8363605\ttotal: 649ms\tremaining: 29.4ms\n","287:\tlearn: 0.8353897\ttotal: 650ms\tremaining: 27.1ms\n","288:\tlearn: 0.8346495\ttotal: 652ms\tremaining: 24.8ms\n","289:\tlearn: 0.8340274\ttotal: 654ms\tremaining: 22.6ms\n","290:\tlearn: 0.8335064\ttotal: 656ms\tremaining: 20.3ms\n","291:\tlearn: 0.8327114\ttotal: 658ms\tremaining: 18ms\n","292:\tlearn: 0.8320142\ttotal: 663ms\tremaining: 15.8ms\n","293:\tlearn: 0.8315650\ttotal: 664ms\tremaining: 13.5ms\n","294:\tlearn: 0.8308624\ttotal: 666ms\tremaining: 11.3ms\n","295:\tlearn: 0.8301981\ttotal: 667ms\tremaining: 9.02ms\n","296:\tlearn: 0.8294164\ttotal: 669ms\tremaining: 6.76ms\n","297:\tlearn: 0.8286975\ttotal: 671ms\tremaining: 4.5ms\n","298:\tlearn: 0.8281901\ttotal: 675ms\tremaining: 2.26ms\n","299:\tlearn: 0.8274540\ttotal: 677ms\tremaining: 0us\n","0:\tlearn: 1.3810748\ttotal: 7.61ms\tremaining: 2.28s\n","1:\tlearn: 1.3755020\ttotal: 13.2ms\tremaining: 1.97s\n","2:\tlearn: 1.3705965\ttotal: 15.5ms\tremaining: 1.54s\n","3:\tlearn: 1.3656338\ttotal: 17.1ms\tremaining: 1.26s\n","4:\tlearn: 1.3610415\ttotal: 24ms\tremaining: 1.42s\n","5:\tlearn: 1.3553767\ttotal: 27ms\tremaining: 1.32s\n","6:\tlearn: 1.3508738\ttotal: 29.2ms\tremaining: 1.22s\n","7:\tlearn: 1.3461596\ttotal: 31.3ms\tremaining: 1.14s\n","8:\tlearn: 1.3408885\ttotal: 33.3ms\tremaining: 1.07s\n","9:\tlearn: 1.3365300\ttotal: 36ms\tremaining: 1.04s\n","10:\tlearn: 1.3322708\ttotal: 38.8ms\tremaining: 1.02s\n","11:\tlearn: 1.3283061\ttotal: 45ms\tremaining: 1.08s\n","12:\tlearn: 1.3241828\ttotal: 46.8ms\tremaining: 1.03s\n","13:\tlearn: 1.3193009\ttotal: 51.8ms\tremaining: 1.06s\n","14:\tlearn: 1.3144606\ttotal: 54.5ms\tremaining: 1.04s\n","15:\tlearn: 1.3108376\ttotal: 55.8ms\tremaining: 990ms\n","16:\tlearn: 1.3065324\ttotal: 58ms\tremaining: 965ms\n","17:\tlearn: 1.3017369\ttotal: 59ms\tremaining: 924ms\n","18:\tlearn: 1.2977329\ttotal: 60.5ms\tremaining: 894ms\n","19:\tlearn: 1.2941102\ttotal: 62ms\tremaining: 869ms\n","20:\tlearn: 1.2893061\ttotal: 63.3ms\tremaining: 841ms\n","21:\tlearn: 1.2852635\ttotal: 65.4ms\tremaining: 826ms\n","22:\tlearn: 1.2811357\ttotal: 67.6ms\tremaining: 814ms\n","23:\tlearn: 1.2772154\ttotal: 68.9ms\tremaining: 792ms\n","24:\tlearn: 1.2733876\ttotal: 70.7ms\tremaining: 778ms\n","25:\tlearn: 1.2696003\ttotal: 72.7ms\tremaining: 766ms\n","26:\tlearn: 1.2658046\ttotal: 74.7ms\tremaining: 755ms\n","27:\tlearn: 1.2622209\ttotal: 76.4ms\tremaining: 742ms\n","28:\tlearn: 1.2586450\ttotal: 78.1ms\tremaining: 730ms\n","29:\tlearn: 1.2545855\ttotal: 79.6ms\tremaining: 717ms\n","30:\tlearn: 1.2512720\ttotal: 81.2ms\tremaining: 705ms\n","31:\tlearn: 1.2476312\ttotal: 82.5ms\tremaining: 691ms\n","32:\tlearn: 1.2443027\ttotal: 83.8ms\tremaining: 678ms\n","33:\tlearn: 1.2403154\ttotal: 85.8ms\tremaining: 672ms\n","34:\tlearn: 1.2358922\ttotal: 87.7ms\tremaining: 664ms\n","35:\tlearn: 1.2322893\ttotal: 89.7ms\tremaining: 658ms\n","36:\tlearn: 1.2289064\ttotal: 91.8ms\tremaining: 653ms\n","37:\tlearn: 1.2257201\ttotal: 93.6ms\tremaining: 646ms\n","38:\tlearn: 1.2225170\ttotal: 98.5ms\tremaining: 659ms\n","39:\tlearn: 1.2190601\ttotal: 99ms\tremaining: 643ms\n","40:\tlearn: 1.2161364\ttotal: 100ms\tremaining: 633ms\n","41:\tlearn: 1.2131005\ttotal: 103ms\tremaining: 633ms\n","42:\tlearn: 1.2094160\ttotal: 105ms\tremaining: 626ms\n","43:\tlearn: 1.2066550\ttotal: 107ms\tremaining: 621ms\n","44:\tlearn: 1.2035562\ttotal: 109ms\tremaining: 617ms\n","45:\tlearn: 1.2004866\ttotal: 114ms\tremaining: 632ms\n","46:\tlearn: 1.1977352\ttotal: 117ms\tremaining: 628ms\n","47:\tlearn: 1.1948847\ttotal: 118ms\tremaining: 620ms\n","48:\tlearn: 1.1916573\ttotal: 120ms\tremaining: 615ms\n","49:\tlearn: 1.1886642\ttotal: 123ms\tremaining: 614ms\n","50:\tlearn: 1.1856503\ttotal: 126ms\tremaining: 615ms\n","51:\tlearn: 1.1830121\ttotal: 127ms\tremaining: 606ms\n","52:\tlearn: 1.1796992\ttotal: 132ms\tremaining: 614ms\n","53:\tlearn: 1.1769542\ttotal: 134ms\tremaining: 611ms\n","54:\tlearn: 1.1742755\ttotal: 136ms\tremaining: 604ms\n","55:\tlearn: 1.1712080\ttotal: 139ms\tremaining: 605ms\n","56:\tlearn: 1.1678831\ttotal: 141ms\tremaining: 601ms\n","57:\tlearn: 1.1652192\ttotal: 142ms\tremaining: 592ms\n","58:\tlearn: 1.1622327\ttotal: 143ms\tremaining: 583ms\n","59:\tlearn: 1.1596856\ttotal: 144ms\tremaining: 576ms\n","60:\tlearn: 1.1567367\ttotal: 146ms\tremaining: 572ms\n","61:\tlearn: 1.1539434\ttotal: 147ms\tremaining: 564ms\n","62:\tlearn: 1.1508056\ttotal: 149ms\tremaining: 560ms\n","63:\tlearn: 1.1484069\ttotal: 152ms\tremaining: 559ms\n","64:\tlearn: 1.1459043\ttotal: 152ms\tremaining: 550ms\n","65:\tlearn: 1.1429857\ttotal: 154ms\tremaining: 545ms\n","66:\tlearn: 1.1405472\ttotal: 156ms\tremaining: 543ms\n","67:\tlearn: 1.1378585\ttotal: 157ms\tremaining: 537ms\n","68:\tlearn: 1.1354074\ttotal: 160ms\tremaining: 535ms\n","69:\tlearn: 1.1329055\ttotal: 161ms\tremaining: 528ms\n","70:\tlearn: 1.1301565\ttotal: 163ms\tremaining: 526ms\n","71:\tlearn: 1.1278533\ttotal: 165ms\tremaining: 521ms\n","72:\tlearn: 1.1255266\ttotal: 166ms\tremaining: 516ms\n","73:\tlearn: 1.1232371\ttotal: 168ms\tremaining: 513ms\n","74:\tlearn: 1.1210279\ttotal: 171ms\tremaining: 513ms\n","75:\tlearn: 1.1186354\ttotal: 171ms\tremaining: 505ms\n","76:\tlearn: 1.1159719\ttotal: 173ms\tremaining: 500ms\n","77:\tlearn: 1.1135977\ttotal: 175ms\tremaining: 498ms\n","78:\tlearn: 1.1115375\ttotal: 177ms\tremaining: 495ms\n","79:\tlearn: 1.1096508\ttotal: 179ms\tremaining: 492ms\n","80:\tlearn: 1.1071576\ttotal: 181ms\tremaining: 489ms\n","81:\tlearn: 1.1051095\ttotal: 183ms\tremaining: 487ms\n","82:\tlearn: 1.1031446\ttotal: 185ms\tremaining: 484ms\n","83:\tlearn: 1.1010189\ttotal: 188ms\tremaining: 483ms\n","84:\tlearn: 1.0983445\ttotal: 189ms\tremaining: 478ms\n","85:\tlearn: 1.0964800\ttotal: 191ms\tremaining: 475ms\n","86:\tlearn: 1.0943365\ttotal: 193ms\tremaining: 471ms\n","87:\tlearn: 1.0920812\ttotal: 195ms\tremaining: 470ms\n","88:\tlearn: 1.0899340\ttotal: 196ms\tremaining: 465ms\n","89:\tlearn: 1.0875562\ttotal: 198ms\tremaining: 463ms\n","90:\tlearn: 1.0850477\ttotal: 201ms\tremaining: 461ms\n","91:\tlearn: 1.0828589\ttotal: 203ms\tremaining: 458ms\n","92:\tlearn: 1.0810483\ttotal: 204ms\tremaining: 454ms\n","93:\tlearn: 1.0791380\ttotal: 205ms\tremaining: 450ms\n","94:\tlearn: 1.0772921\ttotal: 208ms\tremaining: 448ms\n","95:\tlearn: 1.0753207\ttotal: 210ms\tremaining: 445ms\n","96:\tlearn: 1.0731188\ttotal: 212ms\tremaining: 443ms\n","97:\tlearn: 1.0714576\ttotal: 213ms\tremaining: 440ms\n","98:\tlearn: 1.0690465\ttotal: 216ms\tremaining: 438ms\n","99:\tlearn: 1.0668485\ttotal: 218ms\tremaining: 436ms\n","100:\tlearn: 1.0647845\ttotal: 221ms\tremaining: 436ms\n","101:\tlearn: 1.0630556\ttotal: 223ms\tremaining: 433ms\n","102:\tlearn: 1.0607447\ttotal: 224ms\tremaining: 428ms\n","103:\tlearn: 1.0588804\ttotal: 225ms\tremaining: 424ms\n","104:\tlearn: 1.0569807\ttotal: 226ms\tremaining: 420ms\n","105:\tlearn: 1.0552504\ttotal: 228ms\tremaining: 418ms\n","106:\tlearn: 1.0531530\ttotal: 229ms\tremaining: 413ms\n","107:\tlearn: 1.0515371\ttotal: 250ms\tremaining: 444ms\n","108:\tlearn: 1.0497570\ttotal: 251ms\tremaining: 440ms\n","109:\tlearn: 1.0479767\ttotal: 253ms\tremaining: 437ms\n","110:\tlearn: 1.0463900\ttotal: 255ms\tremaining: 433ms\n","111:\tlearn: 1.0445569\ttotal: 256ms\tremaining: 430ms\n","112:\tlearn: 1.0428088\ttotal: 260ms\tremaining: 431ms\n","113:\tlearn: 1.0409010\ttotal: 267ms\tremaining: 435ms\n","114:\tlearn: 1.0393130\ttotal: 268ms\tremaining: 432ms\n","115:\tlearn: 1.0379403\ttotal: 270ms\tremaining: 428ms\n","116:\tlearn: 1.0360064\ttotal: 277ms\tremaining: 434ms\n","117:\tlearn: 1.0339202\ttotal: 282ms\tremaining: 435ms\n","118:\tlearn: 1.0322293\ttotal: 284ms\tremaining: 432ms\n","119:\tlearn: 1.0307318\ttotal: 286ms\tremaining: 429ms\n","120:\tlearn: 1.0291504\ttotal: 290ms\tremaining: 429ms\n","121:\tlearn: 1.0276770\ttotal: 293ms\tremaining: 427ms\n","122:\tlearn: 1.0263898\ttotal: 294ms\tremaining: 423ms\n","123:\tlearn: 1.0250814\ttotal: 295ms\tremaining: 419ms\n","124:\tlearn: 1.0234368\ttotal: 297ms\tremaining: 416ms\n","125:\tlearn: 1.0217944\ttotal: 299ms\tremaining: 413ms\n","126:\tlearn: 1.0203790\ttotal: 300ms\tremaining: 409ms\n","127:\tlearn: 1.0187712\ttotal: 302ms\tremaining: 405ms\n","128:\tlearn: 1.0170164\ttotal: 304ms\tremaining: 403ms\n","129:\tlearn: 1.0155695\ttotal: 305ms\tremaining: 399ms\n","130:\tlearn: 1.0138817\ttotal: 307ms\tremaining: 396ms\n","131:\tlearn: 1.0123748\ttotal: 309ms\tremaining: 393ms\n","132:\tlearn: 1.0112421\ttotal: 310ms\tremaining: 389ms\n","133:\tlearn: 1.0100747\ttotal: 311ms\tremaining: 385ms\n","134:\tlearn: 1.0088659\ttotal: 311ms\tremaining: 381ms\n","135:\tlearn: 1.0076256\ttotal: 313ms\tremaining: 377ms\n","136:\tlearn: 1.0057629\ttotal: 315ms\tremaining: 375ms\n","137:\tlearn: 1.0045663\ttotal: 316ms\tremaining: 371ms\n","138:\tlearn: 1.0030085\ttotal: 318ms\tremaining: 368ms\n","139:\tlearn: 1.0015002\ttotal: 323ms\tremaining: 369ms\n","140:\tlearn: 1.0001656\ttotal: 325ms\tremaining: 366ms\n","141:\tlearn: 0.9985452\ttotal: 326ms\tremaining: 363ms\n","142:\tlearn: 0.9972829\ttotal: 328ms\tremaining: 360ms\n","143:\tlearn: 0.9958957\ttotal: 329ms\tremaining: 357ms\n","144:\tlearn: 0.9944561\ttotal: 331ms\tremaining: 354ms\n","145:\tlearn: 0.9932433\ttotal: 333ms\tremaining: 352ms\n","146:\tlearn: 0.9917340\ttotal: 335ms\tremaining: 349ms\n","147:\tlearn: 0.9905050\ttotal: 337ms\tremaining: 346ms\n","148:\tlearn: 0.9891720\ttotal: 338ms\tremaining: 343ms\n","149:\tlearn: 0.9877754\ttotal: 340ms\tremaining: 340ms\n","150:\tlearn: 0.9864261\ttotal: 340ms\tremaining: 336ms\n","151:\tlearn: 0.9851327\ttotal: 342ms\tremaining: 333ms\n","152:\tlearn: 0.9840403\ttotal: 344ms\tremaining: 330ms\n","153:\tlearn: 0.9827296\ttotal: 347ms\tremaining: 329ms\n","154:\tlearn: 0.9816982\ttotal: 347ms\tremaining: 325ms\n","155:\tlearn: 0.9806127\ttotal: 348ms\tremaining: 321ms\n","156:\tlearn: 0.9794830\ttotal: 350ms\tremaining: 318ms\n","157:\tlearn: 0.9784369\ttotal: 350ms\tremaining: 315ms\n","158:\tlearn: 0.9770108\ttotal: 352ms\tremaining: 312ms\n","159:\tlearn: 0.9754009\ttotal: 353ms\tremaining: 309ms\n","160:\tlearn: 0.9741784\ttotal: 355ms\tremaining: 307ms\n","161:\tlearn: 0.9731711\ttotal: 357ms\tremaining: 304ms\n","162:\tlearn: 0.9717167\ttotal: 359ms\tremaining: 302ms\n","163:\tlearn: 0.9703833\ttotal: 360ms\tremaining: 299ms\n","164:\tlearn: 0.9691430\ttotal: 362ms\tremaining: 297ms\n","165:\tlearn: 0.9682039\ttotal: 365ms\tremaining: 294ms\n","166:\tlearn: 0.9668987\ttotal: 366ms\tremaining: 291ms\n","167:\tlearn: 0.9657206\ttotal: 367ms\tremaining: 288ms\n","168:\tlearn: 0.9645042\ttotal: 368ms\tremaining: 285ms\n","169:\tlearn: 0.9634260\ttotal: 370ms\tremaining: 283ms\n","170:\tlearn: 0.9621899\ttotal: 371ms\tremaining: 280ms\n","171:\tlearn: 0.9611270\ttotal: 376ms\tremaining: 280ms\n","172:\tlearn: 0.9600316\ttotal: 378ms\tremaining: 277ms\n","173:\tlearn: 0.9590107\ttotal: 380ms\tremaining: 275ms\n","174:\tlearn: 0.9578738\ttotal: 381ms\tremaining: 272ms\n","175:\tlearn: 0.9567640\ttotal: 382ms\tremaining: 269ms\n","176:\tlearn: 0.9559538\ttotal: 382ms\tremaining: 266ms\n","177:\tlearn: 0.9546640\ttotal: 383ms\tremaining: 262ms\n","178:\tlearn: 0.9535152\ttotal: 384ms\tremaining: 259ms\n","179:\tlearn: 0.9523762\ttotal: 384ms\tremaining: 256ms\n","180:\tlearn: 0.9510201\ttotal: 385ms\tremaining: 253ms\n","181:\tlearn: 0.9500966\ttotal: 386ms\tremaining: 250ms\n","182:\tlearn: 0.9491836\ttotal: 386ms\tremaining: 247ms\n","183:\tlearn: 0.9480918\ttotal: 387ms\tremaining: 244ms\n","184:\tlearn: 0.9473045\ttotal: 387ms\tremaining: 241ms\n","185:\tlearn: 0.9456738\ttotal: 388ms\tremaining: 238ms\n","186:\tlearn: 0.9444791\ttotal: 389ms\tremaining: 235ms\n","187:\tlearn: 0.9434668\ttotal: 390ms\tremaining: 232ms\n","188:\tlearn: 0.9424463\ttotal: 391ms\tremaining: 230ms\n","189:\tlearn: 0.9413069\ttotal: 391ms\tremaining: 227ms\n","190:\tlearn: 0.9402606\ttotal: 392ms\tremaining: 224ms\n","191:\tlearn: 0.9390081\ttotal: 392ms\tremaining: 221ms\n","192:\tlearn: 0.9378579\ttotal: 393ms\tremaining: 218ms\n","193:\tlearn: 0.9368256\ttotal: 394ms\tremaining: 215ms\n","194:\tlearn: 0.9357895\ttotal: 394ms\tremaining: 212ms\n","195:\tlearn: 0.9346690\ttotal: 395ms\tremaining: 210ms\n","196:\tlearn: 0.9338985\ttotal: 396ms\tremaining: 207ms\n","197:\tlearn: 0.9331331\ttotal: 396ms\tremaining: 204ms\n","198:\tlearn: 0.9320767\ttotal: 397ms\tremaining: 201ms\n","199:\tlearn: 0.9313728\ttotal: 398ms\tremaining: 199ms\n","200:\tlearn: 0.9306188\ttotal: 398ms\tremaining: 196ms\n","201:\tlearn: 0.9297136\ttotal: 403ms\tremaining: 196ms\n","202:\tlearn: 0.9289110\ttotal: 404ms\tremaining: 193ms\n","203:\tlearn: 0.9276572\ttotal: 405ms\tremaining: 190ms\n","204:\tlearn: 0.9267801\ttotal: 405ms\tremaining: 188ms\n","205:\tlearn: 0.9256157\ttotal: 406ms\tremaining: 185ms\n","206:\tlearn: 0.9245005\ttotal: 411ms\tremaining: 185ms\n","207:\tlearn: 0.9237907\ttotal: 412ms\tremaining: 182ms\n","208:\tlearn: 0.9231011\ttotal: 412ms\tremaining: 179ms\n","209:\tlearn: 0.9223377\ttotal: 413ms\tremaining: 177ms\n","210:\tlearn: 0.9210841\ttotal: 414ms\tremaining: 174ms\n","211:\tlearn: 0.9202619\ttotal: 414ms\tremaining: 172ms\n","212:\tlearn: 0.9194201\ttotal: 415ms\tremaining: 170ms\n","213:\tlearn: 0.9187800\ttotal: 415ms\tremaining: 167ms\n","214:\tlearn: 0.9177553\ttotal: 416ms\tremaining: 164ms\n","215:\tlearn: 0.9167074\ttotal: 417ms\tremaining: 162ms\n","216:\tlearn: 0.9155014\ttotal: 417ms\tremaining: 160ms\n","217:\tlearn: 0.9144387\ttotal: 418ms\tremaining: 157ms\n","218:\tlearn: 0.9137656\ttotal: 419ms\tremaining: 155ms\n","219:\tlearn: 0.9128761\ttotal: 419ms\tremaining: 152ms\n","220:\tlearn: 0.9119950\ttotal: 420ms\tremaining: 150ms\n","221:\tlearn: 0.9111093\ttotal: 420ms\tremaining: 148ms\n","222:\tlearn: 0.9104700\ttotal: 421ms\tremaining: 145ms\n","223:\tlearn: 0.9097369\ttotal: 422ms\tremaining: 143ms\n","224:\tlearn: 0.9087936\ttotal: 422ms\tremaining: 141ms\n","225:\tlearn: 0.9081469\ttotal: 423ms\tremaining: 139ms\n","226:\tlearn: 0.9076064\ttotal: 424ms\tremaining: 136ms\n","227:\tlearn: 0.9068525\ttotal: 425ms\tremaining: 134ms\n","228:\tlearn: 0.9060401\ttotal: 426ms\tremaining: 132ms\n","229:\tlearn: 0.9051523\ttotal: 427ms\tremaining: 130ms\n","230:\tlearn: 0.9041225\ttotal: 428ms\tremaining: 128ms\n","231:\tlearn: 0.9030807\ttotal: 429ms\tremaining: 126ms\n","232:\tlearn: 0.9022226\ttotal: 430ms\tremaining: 124ms\n","233:\tlearn: 0.9013994\ttotal: 431ms\tremaining: 122ms\n","234:\tlearn: 0.9004805\ttotal: 432ms\tremaining: 119ms\n","235:\tlearn: 0.8998473\ttotal: 433ms\tremaining: 117ms\n","236:\tlearn: 0.8991705\ttotal: 434ms\tremaining: 115ms\n","237:\tlearn: 0.8982494\ttotal: 434ms\tremaining: 113ms\n","238:\tlearn: 0.8974952\ttotal: 435ms\tremaining: 111ms\n","239:\tlearn: 0.8968231\ttotal: 436ms\tremaining: 109ms\n","240:\tlearn: 0.8962661\ttotal: 436ms\tremaining: 107ms\n","241:\tlearn: 0.8955227\ttotal: 437ms\tremaining: 105ms\n","242:\tlearn: 0.8945657\ttotal: 438ms\tremaining: 103ms\n","243:\tlearn: 0.8936380\ttotal: 439ms\tremaining: 101ms\n","244:\tlearn: 0.8930418\ttotal: 439ms\tremaining: 98.7ms\n","245:\tlearn: 0.8924929\ttotal: 440ms\tremaining: 96.7ms\n","246:\tlearn: 0.8917649\ttotal: 441ms\tremaining: 94.7ms\n","247:\tlearn: 0.8908999\ttotal: 443ms\tremaining: 92.8ms\n","248:\tlearn: 0.8903189\ttotal: 443ms\tremaining: 90.8ms\n","249:\tlearn: 0.8895370\ttotal: 444ms\tremaining: 88.8ms\n","250:\tlearn: 0.8889351\ttotal: 445ms\tremaining: 86.8ms\n","251:\tlearn: 0.8884383\ttotal: 445ms\tremaining: 84.8ms\n","252:\tlearn: 0.8876896\ttotal: 446ms\tremaining: 82.9ms\n","253:\tlearn: 0.8869818\ttotal: 447ms\tremaining: 81ms\n","254:\tlearn: 0.8863569\ttotal: 448ms\tremaining: 79.1ms\n","255:\tlearn: 0.8855737\ttotal: 450ms\tremaining: 77.4ms\n","256:\tlearn: 0.8851358\ttotal: 451ms\tremaining: 75.4ms\n","257:\tlearn: 0.8845290\ttotal: 452ms\tremaining: 73.6ms\n","258:\tlearn: 0.8838827\ttotal: 453ms\tremaining: 71.7ms\n","259:\tlearn: 0.8832412\ttotal: 454ms\tremaining: 69.8ms\n","260:\tlearn: 0.8824589\ttotal: 455ms\tremaining: 67.9ms\n","261:\tlearn: 0.8817277\ttotal: 463ms\tremaining: 67.2ms\n","262:\tlearn: 0.8809585\ttotal: 464ms\tremaining: 65.3ms\n","263:\tlearn: 0.8804690\ttotal: 465ms\tremaining: 63.4ms\n","264:\tlearn: 0.8797122\ttotal: 466ms\tremaining: 61.5ms\n","265:\tlearn: 0.8792825\ttotal: 470ms\tremaining: 60.1ms\n","266:\tlearn: 0.8785312\ttotal: 471ms\tremaining: 58.3ms\n","267:\tlearn: 0.8779901\ttotal: 472ms\tremaining: 56.4ms\n","268:\tlearn: 0.8772472\ttotal: 473ms\tremaining: 54.5ms\n","269:\tlearn: 0.8764726\ttotal: 474ms\tremaining: 52.7ms\n","270:\tlearn: 0.8758275\ttotal: 475ms\tremaining: 50.8ms\n","271:\tlearn: 0.8754152\ttotal: 475ms\tremaining: 48.9ms\n","272:\tlearn: 0.8746989\ttotal: 476ms\tremaining: 47.1ms\n","273:\tlearn: 0.8737089\ttotal: 477ms\tremaining: 45.2ms\n","274:\tlearn: 0.8727086\ttotal: 478ms\tremaining: 43.4ms\n","275:\tlearn: 0.8716185\ttotal: 478ms\tremaining: 41.6ms\n","276:\tlearn: 0.8712651\ttotal: 479ms\tremaining: 39.7ms\n","277:\tlearn: 0.8706645\ttotal: 479ms\tremaining: 37.9ms\n","278:\tlearn: 0.8698770\ttotal: 480ms\tremaining: 36.1ms\n","279:\tlearn: 0.8693892\ttotal: 481ms\tremaining: 34.3ms\n","280:\tlearn: 0.8689626\ttotal: 482ms\tremaining: 32.6ms\n","281:\tlearn: 0.8680420\ttotal: 483ms\tremaining: 30.8ms\n","282:\tlearn: 0.8675355\ttotal: 483ms\tremaining: 29ms\n","283:\tlearn: 0.8669989\ttotal: 484ms\tremaining: 27.3ms\n","284:\tlearn: 0.8665247\ttotal: 484ms\tremaining: 25.5ms\n","285:\tlearn: 0.8657732\ttotal: 485ms\tremaining: 23.7ms\n","286:\tlearn: 0.8649839\ttotal: 486ms\tremaining: 22ms\n","287:\tlearn: 0.8643492\ttotal: 486ms\tremaining: 20.3ms\n","288:\tlearn: 0.8636728\ttotal: 487ms\tremaining: 18.5ms\n","289:\tlearn: 0.8631121\ttotal: 488ms\tremaining: 16.8ms\n","290:\tlearn: 0.8624482\ttotal: 489ms\tremaining: 15.1ms\n","291:\tlearn: 0.8620420\ttotal: 490ms\tremaining: 13.4ms\n","292:\tlearn: 0.8614453\ttotal: 491ms\tremaining: 11.7ms\n","293:\tlearn: 0.8606490\ttotal: 492ms\tremaining: 10ms\n","294:\tlearn: 0.8599775\ttotal: 492ms\tremaining: 8.34ms\n","295:\tlearn: 0.8592824\ttotal: 493ms\tremaining: 6.66ms\n","296:\tlearn: 0.8584549\ttotal: 493ms\tremaining: 4.98ms\n","297:\tlearn: 0.8578204\ttotal: 494ms\tremaining: 3.31ms\n","298:\tlearn: 0.8568714\ttotal: 495ms\tremaining: 1.65ms\n","299:\tlearn: 0.8562224\ttotal: 496ms\tremaining: 0us\n","0:\tlearn: 1.3817438\ttotal: 3.69ms\tremaining: 1.1s\n","1:\tlearn: 1.3764268\ttotal: 3.95ms\tremaining: 589ms\n","2:\tlearn: 1.3707189\ttotal: 5.2ms\tremaining: 515ms\n","3:\tlearn: 1.3660773\ttotal: 5.67ms\tremaining: 420ms\n","4:\tlearn: 1.3611325\ttotal: 6.32ms\tremaining: 373ms\n","5:\tlearn: 1.3567059\ttotal: 6.98ms\tremaining: 342ms\n","6:\tlearn: 1.3512230\ttotal: 7.61ms\tremaining: 319ms\n","7:\tlearn: 1.3465892\ttotal: 9.88ms\tremaining: 361ms\n","8:\tlearn: 1.3421415\ttotal: 10.6ms\tremaining: 342ms\n","9:\tlearn: 1.3376595\ttotal: 12.2ms\tremaining: 353ms\n","10:\tlearn: 1.3320999\ttotal: 14.8ms\tremaining: 388ms\n","11:\tlearn: 1.3263893\ttotal: 15.1ms\tremaining: 362ms\n","12:\tlearn: 1.3217411\ttotal: 15.7ms\tremaining: 347ms\n","13:\tlearn: 1.3169056\ttotal: 22.8ms\tremaining: 465ms\n","14:\tlearn: 1.3124814\ttotal: 29ms\tremaining: 551ms\n","15:\tlearn: 1.3081495\ttotal: 30ms\tremaining: 533ms\n","16:\tlearn: 1.3030382\ttotal: 30.4ms\tremaining: 506ms\n","17:\tlearn: 1.2985324\ttotal: 31.3ms\tremaining: 491ms\n","18:\tlearn: 1.2951715\ttotal: 32.3ms\tremaining: 478ms\n","19:\tlearn: 1.2913267\ttotal: 33ms\tremaining: 462ms\n","20:\tlearn: 1.2869189\ttotal: 33.6ms\tremaining: 447ms\n","21:\tlearn: 1.2823162\ttotal: 38ms\tremaining: 480ms\n","22:\tlearn: 1.2784252\ttotal: 39.2ms\tremaining: 472ms\n","23:\tlearn: 1.2742856\ttotal: 39.6ms\tremaining: 456ms\n","24:\tlearn: 1.2695249\ttotal: 40ms\tremaining: 440ms\n","25:\tlearn: 1.2655812\ttotal: 40.6ms\tremaining: 428ms\n","26:\tlearn: 1.2620550\ttotal: 41ms\tremaining: 415ms\n","27:\tlearn: 1.2582429\ttotal: 41.7ms\tremaining: 405ms\n","28:\tlearn: 1.2539680\ttotal: 42.1ms\tremaining: 393ms\n","29:\tlearn: 1.2499792\ttotal: 42.7ms\tremaining: 384ms\n","30:\tlearn: 1.2462819\ttotal: 43ms\tremaining: 373ms\n","31:\tlearn: 1.2426582\ttotal: 43.4ms\tremaining: 364ms\n","32:\tlearn: 1.2388142\ttotal: 44.1ms\tremaining: 357ms\n","33:\tlearn: 1.2350449\ttotal: 44.8ms\tremaining: 351ms\n","34:\tlearn: 1.2316475\ttotal: 45.5ms\tremaining: 344ms\n","35:\tlearn: 1.2284219\ttotal: 46.1ms\tremaining: 338ms\n","36:\tlearn: 1.2248725\ttotal: 47.1ms\tremaining: 335ms\n","37:\tlearn: 1.2218541\ttotal: 47.7ms\tremaining: 329ms\n","38:\tlearn: 1.2184769\ttotal: 48.6ms\tremaining: 325ms\n","39:\tlearn: 1.2151291\ttotal: 49.4ms\tremaining: 321ms\n","40:\tlearn: 1.2113410\ttotal: 50.1ms\tremaining: 316ms\n","41:\tlearn: 1.2081103\ttotal: 53.6ms\tremaining: 329ms\n","42:\tlearn: 1.2048713\ttotal: 53.8ms\tremaining: 321ms\n","43:\tlearn: 1.2011134\ttotal: 54.4ms\tremaining: 317ms\n","44:\tlearn: 1.1980419\ttotal: 54.8ms\tremaining: 311ms\n","45:\tlearn: 1.1942199\ttotal: 55.1ms\tremaining: 304ms\n","46:\tlearn: 1.1904782\ttotal: 55.7ms\tremaining: 300ms\n","47:\tlearn: 1.1877896\ttotal: 56.4ms\tremaining: 296ms\n","48:\tlearn: 1.1849625\ttotal: 57ms\tremaining: 292ms\n","49:\tlearn: 1.1820180\ttotal: 57.7ms\tremaining: 288ms\n","50:\tlearn: 1.1788884\ttotal: 57.9ms\tremaining: 283ms\n","51:\tlearn: 1.1763878\ttotal: 58.6ms\tremaining: 279ms\n","52:\tlearn: 1.1732501\ttotal: 59.2ms\tremaining: 276ms\n","53:\tlearn: 1.1701036\ttotal: 59.6ms\tremaining: 272ms\n","54:\tlearn: 1.1671061\ttotal: 60.2ms\tremaining: 268ms\n","55:\tlearn: 1.1642203\ttotal: 60.4ms\tremaining: 263ms\n","56:\tlearn: 1.1611781\ttotal: 61.3ms\tremaining: 261ms\n","57:\tlearn: 1.1587325\ttotal: 61.9ms\tremaining: 258ms\n","58:\tlearn: 1.1556394\ttotal: 62.3ms\tremaining: 254ms\n","59:\tlearn: 1.1531201\ttotal: 63.2ms\tremaining: 253ms\n","60:\tlearn: 1.1509316\ttotal: 64.1ms\tremaining: 251ms\n","61:\tlearn: 1.1483404\ttotal: 65ms\tremaining: 250ms\n","62:\tlearn: 1.1460574\ttotal: 66.1ms\tremaining: 249ms\n","63:\tlearn: 1.1436169\ttotal: 66.5ms\tremaining: 245ms\n","64:\tlearn: 1.1413914\ttotal: 67.4ms\tremaining: 244ms\n","65:\tlearn: 1.1388243\ttotal: 69.4ms\tremaining: 246ms\n","66:\tlearn: 1.1366645\ttotal: 73ms\tremaining: 254ms\n","67:\tlearn: 1.1341083\ttotal: 73.6ms\tremaining: 251ms\n","68:\tlearn: 1.1312241\ttotal: 74.3ms\tremaining: 249ms\n","69:\tlearn: 1.1290574\ttotal: 75ms\tremaining: 246ms\n","70:\tlearn: 1.1268495\ttotal: 75.9ms\tremaining: 245ms\n","71:\tlearn: 1.1247194\ttotal: 76.9ms\tremaining: 243ms\n","72:\tlearn: 1.1226445\ttotal: 77.6ms\tremaining: 241ms\n","73:\tlearn: 1.1199456\ttotal: 78.5ms\tremaining: 240ms\n","74:\tlearn: 1.1177940\ttotal: 79.4ms\tremaining: 238ms\n","75:\tlearn: 1.1156484\ttotal: 80ms\tremaining: 236ms\n","76:\tlearn: 1.1133811\ttotal: 80.6ms\tremaining: 233ms\n","77:\tlearn: 1.1109348\ttotal: 81.2ms\tremaining: 231ms\n","78:\tlearn: 1.1085886\ttotal: 82.9ms\tremaining: 232ms\n","79:\tlearn: 1.1060754\ttotal: 83.5ms\tremaining: 230ms\n","80:\tlearn: 1.1035727\ttotal: 84.2ms\tremaining: 228ms\n","81:\tlearn: 1.1010452\ttotal: 84.4ms\tremaining: 224ms\n","82:\tlearn: 1.0986369\ttotal: 85.1ms\tremaining: 222ms\n","83:\tlearn: 1.0958504\ttotal: 85.4ms\tremaining: 220ms\n","84:\tlearn: 1.0937397\ttotal: 86ms\tremaining: 218ms\n","85:\tlearn: 1.0916805\ttotal: 86.2ms\tremaining: 215ms\n","86:\tlearn: 1.0891690\ttotal: 86.7ms\tremaining: 212ms\n","87:\tlearn: 1.0872037\ttotal: 86.9ms\tremaining: 209ms\n","88:\tlearn: 1.0853014\ttotal: 87.2ms\tremaining: 207ms\n","89:\tlearn: 1.0832479\ttotal: 87.8ms\tremaining: 205ms\n","90:\tlearn: 1.0813571\ttotal: 88.5ms\tremaining: 203ms\n","91:\tlearn: 1.0790818\ttotal: 89.4ms\tremaining: 202ms\n","92:\tlearn: 1.0767080\ttotal: 90.3ms\tremaining: 201ms\n","93:\tlearn: 1.0746779\ttotal: 91.3ms\tremaining: 200ms\n","94:\tlearn: 1.0726862\ttotal: 91.9ms\tremaining: 198ms\n","95:\tlearn: 1.0705294\ttotal: 92.3ms\tremaining: 196ms\n","96:\tlearn: 1.0687581\ttotal: 92.9ms\tremaining: 194ms\n","97:\tlearn: 1.0667293\ttotal: 93.5ms\tremaining: 193ms\n","98:\tlearn: 1.0643644\ttotal: 94.2ms\tremaining: 191ms\n","99:\tlearn: 1.0621952\ttotal: 94.8ms\tremaining: 190ms\n","100:\tlearn: 1.0603863\ttotal: 95.4ms\tremaining: 188ms\n","101:\tlearn: 1.0587531\ttotal: 96ms\tremaining: 186ms\n","102:\tlearn: 1.0569689\ttotal: 96.7ms\tremaining: 185ms\n","103:\tlearn: 1.0548539\ttotal: 96.9ms\tremaining: 183ms\n","104:\tlearn: 1.0535123\ttotal: 97.6ms\tremaining: 181ms\n","105:\tlearn: 1.0516126\ttotal: 98.2ms\tremaining: 180ms\n","106:\tlearn: 1.0494263\ttotal: 98.8ms\tremaining: 178ms\n","107:\tlearn: 1.0477791\ttotal: 99ms\tremaining: 176ms\n","108:\tlearn: 1.0460303\ttotal: 99.4ms\tremaining: 174ms\n","109:\tlearn: 1.0444761\ttotal: 100ms\tremaining: 173ms\n","110:\tlearn: 1.0425067\ttotal: 101ms\tremaining: 172ms\n","111:\tlearn: 1.0408401\ttotal: 102ms\tremaining: 171ms\n","112:\tlearn: 1.0389535\ttotal: 103ms\tremaining: 170ms\n","113:\tlearn: 1.0372033\ttotal: 104ms\tremaining: 169ms\n","114:\tlearn: 1.0356947\ttotal: 104ms\tremaining: 167ms\n","115:\tlearn: 1.0340122\ttotal: 105ms\tremaining: 166ms\n","116:\tlearn: 1.0326630\ttotal: 106ms\tremaining: 165ms\n","117:\tlearn: 1.0307662\ttotal: 106ms\tremaining: 164ms\n","118:\tlearn: 1.0293529\ttotal: 107ms\tremaining: 163ms\n","119:\tlearn: 1.0276889\ttotal: 108ms\tremaining: 162ms\n","120:\tlearn: 1.0259447\ttotal: 109ms\tremaining: 161ms\n","121:\tlearn: 1.0246109\ttotal: 110ms\tremaining: 160ms\n","122:\tlearn: 1.0229486\ttotal: 110ms\tremaining: 158ms\n","123:\tlearn: 1.0210380\ttotal: 111ms\tremaining: 157ms\n","124:\tlearn: 1.0194450\ttotal: 112ms\tremaining: 156ms\n","125:\tlearn: 1.0176091\ttotal: 112ms\tremaining: 155ms\n","126:\tlearn: 1.0160018\ttotal: 114ms\tremaining: 155ms\n","127:\tlearn: 1.0142782\ttotal: 114ms\tremaining: 153ms\n","128:\tlearn: 1.0129329\ttotal: 115ms\tremaining: 152ms\n","129:\tlearn: 1.0114183\ttotal: 116ms\tremaining: 151ms\n","130:\tlearn: 1.0099231\ttotal: 116ms\tremaining: 150ms\n","131:\tlearn: 1.0083532\ttotal: 117ms\tremaining: 149ms\n","132:\tlearn: 1.0067690\ttotal: 118ms\tremaining: 148ms\n","133:\tlearn: 1.0053066\ttotal: 118ms\tremaining: 146ms\n","134:\tlearn: 1.0039677\ttotal: 119ms\tremaining: 145ms\n","135:\tlearn: 1.0022444\ttotal: 120ms\tremaining: 145ms\n","136:\tlearn: 1.0007962\ttotal: 121ms\tremaining: 144ms\n","137:\tlearn: 0.9991408\ttotal: 122ms\tremaining: 143ms\n","138:\tlearn: 0.9974991\ttotal: 122ms\tremaining: 142ms\n","139:\tlearn: 0.9961197\ttotal: 123ms\tremaining: 140ms\n","140:\tlearn: 0.9947373\ttotal: 123ms\tremaining: 139ms\n","141:\tlearn: 0.9933824\ttotal: 124ms\tremaining: 138ms\n","142:\tlearn: 0.9919767\ttotal: 124ms\tremaining: 136ms\n","143:\tlearn: 0.9907278\ttotal: 124ms\tremaining: 135ms\n","144:\tlearn: 0.9889830\ttotal: 125ms\tremaining: 133ms\n","145:\tlearn: 0.9876241\ttotal: 126ms\tremaining: 132ms\n","146:\tlearn: 0.9862934\ttotal: 126ms\tremaining: 131ms\n","147:\tlearn: 0.9847975\ttotal: 126ms\tremaining: 130ms\n","148:\tlearn: 0.9832352\ttotal: 127ms\tremaining: 129ms\n","149:\tlearn: 0.9821973\ttotal: 128ms\tremaining: 128ms\n","150:\tlearn: 0.9810299\ttotal: 128ms\tremaining: 127ms\n","151:\tlearn: 0.9800293\ttotal: 129ms\tremaining: 125ms\n","152:\tlearn: 0.9786157\ttotal: 130ms\tremaining: 125ms\n","153:\tlearn: 0.9770840\ttotal: 130ms\tremaining: 124ms\n","154:\tlearn: 0.9760544\ttotal: 131ms\tremaining: 122ms\n","155:\tlearn: 0.9750444\ttotal: 131ms\tremaining: 121ms\n","156:\tlearn: 0.9736674\ttotal: 132ms\tremaining: 120ms\n","157:\tlearn: 0.9725005\ttotal: 133ms\tremaining: 119ms\n","158:\tlearn: 0.9715551\ttotal: 133ms\tremaining: 118ms\n","159:\tlearn: 0.9706529\ttotal: 134ms\tremaining: 117ms\n","160:\tlearn: 0.9696790\ttotal: 134ms\tremaining: 116ms\n","161:\tlearn: 0.9685844\ttotal: 135ms\tremaining: 115ms\n","162:\tlearn: 0.9675555\ttotal: 135ms\tremaining: 114ms\n","163:\tlearn: 0.9665117\ttotal: 136ms\tremaining: 113ms\n","164:\tlearn: 0.9651093\ttotal: 137ms\tremaining: 112ms\n","165:\tlearn: 0.9640565\ttotal: 138ms\tremaining: 111ms\n","166:\tlearn: 0.9632229\ttotal: 138ms\tremaining: 110ms\n","167:\tlearn: 0.9623042\ttotal: 138ms\tremaining: 109ms\n","168:\tlearn: 0.9608153\ttotal: 139ms\tremaining: 108ms\n","169:\tlearn: 0.9595865\ttotal: 140ms\tremaining: 107ms\n","170:\tlearn: 0.9584424\ttotal: 141ms\tremaining: 106ms\n","171:\tlearn: 0.9573933\ttotal: 141ms\tremaining: 105ms\n","172:\tlearn: 0.9565590\ttotal: 142ms\tremaining: 104ms\n","173:\tlearn: 0.9556890\ttotal: 142ms\tremaining: 103ms\n","174:\tlearn: 0.9544775\ttotal: 143ms\tremaining: 102ms\n","175:\tlearn: 0.9536447\ttotal: 143ms\tremaining: 101ms\n","176:\tlearn: 0.9522552\ttotal: 144ms\tremaining: 99.8ms\n","177:\tlearn: 0.9514659\ttotal: 144ms\tremaining: 98.6ms\n","178:\tlearn: 0.9502306\ttotal: 144ms\tremaining: 97.7ms\n","179:\tlearn: 0.9488150\ttotal: 145ms\tremaining: 96.8ms\n","180:\tlearn: 0.9473967\ttotal: 146ms\tremaining: 95.8ms\n","181:\tlearn: 0.9464808\ttotal: 146ms\tremaining: 94.9ms\n","182:\tlearn: 0.9452461\ttotal: 147ms\tremaining: 94ms\n","183:\tlearn: 0.9439358\ttotal: 148ms\tremaining: 93.3ms\n","184:\tlearn: 0.9426745\ttotal: 149ms\tremaining: 92.6ms\n","185:\tlearn: 0.9418267\ttotal: 150ms\tremaining: 91.6ms\n","186:\tlearn: 0.9405848\ttotal: 150ms\tremaining: 90.9ms\n","187:\tlearn: 0.9394901\ttotal: 151ms\tremaining: 90ms\n","188:\tlearn: 0.9386968\ttotal: 152ms\tremaining: 89.2ms\n","189:\tlearn: 0.9376379\ttotal: 164ms\tremaining: 95.1ms\n","190:\tlearn: 0.9366208\ttotal: 166ms\tremaining: 94.9ms\n","191:\tlearn: 0.9356611\ttotal: 167ms\tremaining: 93.7ms\n","192:\tlearn: 0.9349015\ttotal: 168ms\tremaining: 92.9ms\n","193:\tlearn: 0.9339328\ttotal: 179ms\tremaining: 97.6ms\n","194:\tlearn: 0.9329080\ttotal: 180ms\tremaining: 96.7ms\n","195:\tlearn: 0.9322469\ttotal: 181ms\tremaining: 96.1ms\n","196:\tlearn: 0.9314213\ttotal: 183ms\tremaining: 95.8ms\n","197:\tlearn: 0.9303748\ttotal: 186ms\tremaining: 95.7ms\n","198:\tlearn: 0.9294470\ttotal: 191ms\tremaining: 97.2ms\n","199:\tlearn: 0.9283400\ttotal: 195ms\tremaining: 97.3ms\n","200:\tlearn: 0.9276287\ttotal: 199ms\tremaining: 98.2ms\n","201:\tlearn: 0.9267308\ttotal: 201ms\tremaining: 97.5ms\n","202:\tlearn: 0.9259484\ttotal: 205ms\tremaining: 97.8ms\n","203:\tlearn: 0.9251524\ttotal: 209ms\tremaining: 98.4ms\n","204:\tlearn: 0.9242741\ttotal: 214ms\tremaining: 98.9ms\n","205:\tlearn: 0.9232278\ttotal: 217ms\tremaining: 98.9ms\n","206:\tlearn: 0.9225915\ttotal: 223ms\tremaining: 100ms\n","207:\tlearn: 0.9215707\ttotal: 225ms\tremaining: 99.5ms\n","208:\tlearn: 0.9202870\ttotal: 230ms\tremaining: 100ms\n","209:\tlearn: 0.9195833\ttotal: 235ms\tremaining: 101ms\n","210:\tlearn: 0.9189798\ttotal: 240ms\tremaining: 101ms\n","211:\tlearn: 0.9180657\ttotal: 243ms\tremaining: 101ms\n","212:\tlearn: 0.9170545\ttotal: 244ms\tremaining: 99.7ms\n","213:\tlearn: 0.9159580\ttotal: 248ms\tremaining: 99.8ms\n","214:\tlearn: 0.9150569\ttotal: 250ms\tremaining: 98.9ms\n","215:\tlearn: 0.9141778\ttotal: 252ms\tremaining: 97.9ms\n","216:\tlearn: 0.9132587\ttotal: 258ms\tremaining: 98.5ms\n","217:\tlearn: 0.9121343\ttotal: 259ms\tremaining: 97.4ms\n","218:\tlearn: 0.9113988\ttotal: 261ms\tremaining: 96.6ms\n","219:\tlearn: 0.9106686\ttotal: 263ms\tremaining: 95.7ms\n","220:\tlearn: 0.9099988\ttotal: 266ms\tremaining: 95.1ms\n","221:\tlearn: 0.9091053\ttotal: 272ms\tremaining: 95.4ms\n","222:\tlearn: 0.9081341\ttotal: 274ms\tremaining: 94.5ms\n","223:\tlearn: 0.9073357\ttotal: 275ms\tremaining: 93.3ms\n","224:\tlearn: 0.9066571\ttotal: 279ms\tremaining: 92.9ms\n","225:\tlearn: 0.9060903\ttotal: 282ms\tremaining: 92.2ms\n","226:\tlearn: 0.9053556\ttotal: 284ms\tremaining: 91.2ms\n","227:\tlearn: 0.9047747\ttotal: 284ms\tremaining: 89.6ms\n","228:\tlearn: 0.9036878\ttotal: 287ms\tremaining: 88.8ms\n","229:\tlearn: 0.9028979\ttotal: 289ms\tremaining: 88ms\n","230:\tlearn: 0.9022228\ttotal: 290ms\tremaining: 86.7ms\n","231:\tlearn: 0.9014621\ttotal: 291ms\tremaining: 85.3ms\n","232:\tlearn: 0.9008808\ttotal: 291ms\tremaining: 83.8ms\n","233:\tlearn: 0.8998864\ttotal: 292ms\tremaining: 82.4ms\n","234:\tlearn: 0.8988222\ttotal: 293ms\tremaining: 81.1ms\n","235:\tlearn: 0.8982837\ttotal: 302ms\tremaining: 82ms\n","236:\tlearn: 0.8974451\ttotal: 303ms\tremaining: 80.5ms\n","237:\tlearn: 0.8967915\ttotal: 306ms\tremaining: 79.6ms\n","238:\tlearn: 0.8956135\ttotal: 310ms\tremaining: 79ms\n","239:\tlearn: 0.8949704\ttotal: 310ms\tremaining: 77.5ms\n","240:\tlearn: 0.8941004\ttotal: 310ms\tremaining: 76ms\n","241:\tlearn: 0.8935413\ttotal: 311ms\tremaining: 74.5ms\n","242:\tlearn: 0.8925816\ttotal: 314ms\tremaining: 73.7ms\n","243:\tlearn: 0.8919415\ttotal: 315ms\tremaining: 72.2ms\n","244:\tlearn: 0.8911495\ttotal: 318ms\tremaining: 71.3ms\n","245:\tlearn: 0.8904689\ttotal: 321ms\tremaining: 70.5ms\n","246:\tlearn: 0.8895582\ttotal: 322ms\tremaining: 69ms\n","247:\tlearn: 0.8887047\ttotal: 328ms\tremaining: 68.8ms\n","248:\tlearn: 0.8881091\ttotal: 329ms\tremaining: 67.4ms\n","249:\tlearn: 0.8876812\ttotal: 330ms\tremaining: 66ms\n","250:\tlearn: 0.8869624\ttotal: 331ms\tremaining: 64.6ms\n","251:\tlearn: 0.8864972\ttotal: 336ms\tremaining: 64ms\n","252:\tlearn: 0.8856025\ttotal: 340ms\tremaining: 63.1ms\n","253:\tlearn: 0.8849646\ttotal: 342ms\tremaining: 61.9ms\n","254:\tlearn: 0.8842294\ttotal: 345ms\tremaining: 60.8ms\n","255:\tlearn: 0.8834014\ttotal: 348ms\tremaining: 59.9ms\n","256:\tlearn: 0.8828492\ttotal: 349ms\tremaining: 58.4ms\n","257:\tlearn: 0.8817241\ttotal: 350ms\tremaining: 56.9ms\n","258:\tlearn: 0.8809350\ttotal: 350ms\tremaining: 55.5ms\n","259:\tlearn: 0.8799120\ttotal: 351ms\tremaining: 54ms\n","260:\tlearn: 0.8793315\ttotal: 352ms\tremaining: 52.5ms\n","261:\tlearn: 0.8786972\ttotal: 352ms\tremaining: 51ms\n","262:\tlearn: 0.8780962\ttotal: 355ms\tremaining: 50ms\n","263:\tlearn: 0.8776237\ttotal: 356ms\tremaining: 48.5ms\n","264:\tlearn: 0.8768096\ttotal: 359ms\tremaining: 47.5ms\n","265:\tlearn: 0.8762970\ttotal: 361ms\tremaining: 46.1ms\n","266:\tlearn: 0.8755446\ttotal: 365ms\tremaining: 45.1ms\n","267:\tlearn: 0.8749917\ttotal: 368ms\tremaining: 43.9ms\n","268:\tlearn: 0.8742732\ttotal: 369ms\tremaining: 42.5ms\n","269:\tlearn: 0.8736999\ttotal: 369ms\tremaining: 41ms\n","270:\tlearn: 0.8730034\ttotal: 373ms\tremaining: 39.9ms\n","271:\tlearn: 0.8725393\ttotal: 373ms\tremaining: 38.4ms\n","272:\tlearn: 0.8717418\ttotal: 374ms\tremaining: 37ms\n","273:\tlearn: 0.8710341\ttotal: 377ms\tremaining: 35.8ms\n","274:\tlearn: 0.8704580\ttotal: 378ms\tremaining: 34.4ms\n","275:\tlearn: 0.8695734\ttotal: 387ms\tremaining: 33.7ms\n","276:\tlearn: 0.8691632\ttotal: 388ms\tremaining: 32.2ms\n","277:\tlearn: 0.8683836\ttotal: 388ms\tremaining: 30.7ms\n","278:\tlearn: 0.8678469\ttotal: 389ms\tremaining: 29.3ms\n","279:\tlearn: 0.8671864\ttotal: 392ms\tremaining: 28ms\n","280:\tlearn: 0.8665065\ttotal: 396ms\tremaining: 26.7ms\n","281:\tlearn: 0.8660704\ttotal: 396ms\tremaining: 25.3ms\n","282:\tlearn: 0.8654116\ttotal: 399ms\tremaining: 24ms\n","283:\tlearn: 0.8648132\ttotal: 404ms\tremaining: 22.8ms\n","284:\tlearn: 0.8643517\ttotal: 406ms\tremaining: 21.4ms\n","285:\tlearn: 0.8635983\ttotal: 411ms\tremaining: 20.1ms\n","286:\tlearn: 0.8629860\ttotal: 413ms\tremaining: 18.7ms\n","287:\tlearn: 0.8621295\ttotal: 418ms\tremaining: 17.4ms\n","288:\tlearn: 0.8616124\ttotal: 420ms\tremaining: 16ms\n","289:\tlearn: 0.8609800\ttotal: 424ms\tremaining: 14.6ms\n","290:\tlearn: 0.8603076\ttotal: 427ms\tremaining: 13.2ms\n","291:\tlearn: 0.8598587\ttotal: 430ms\tremaining: 11.8ms\n","292:\tlearn: 0.8589521\ttotal: 430ms\tremaining: 10.3ms\n","293:\tlearn: 0.8585000\ttotal: 431ms\tremaining: 8.79ms\n","294:\tlearn: 0.8575816\ttotal: 432ms\tremaining: 7.31ms\n","295:\tlearn: 0.8567832\ttotal: 432ms\tremaining: 5.84ms\n","296:\tlearn: 0.8563276\ttotal: 435ms\tremaining: 4.4ms\n","297:\tlearn: 0.8558594\ttotal: 438ms\tremaining: 2.94ms\n","298:\tlearn: 0.8552380\ttotal: 441ms\tremaining: 1.47ms\n","299:\tlearn: 0.8548235\ttotal: 441ms\tremaining: 0us\n","0:\tlearn: 1.3814036\ttotal: 4.45ms\tremaining: 1.33s\n","1:\tlearn: 1.3764854\ttotal: 26.3ms\tremaining: 3.91s\n","2:\tlearn: 1.3706317\ttotal: 28.5ms\tremaining: 2.82s\n","3:\tlearn: 1.3650352\ttotal: 31.9ms\tremaining: 2.36s\n","4:\tlearn: 1.3603215\ttotal: 35.4ms\tremaining: 2.09s\n","5:\tlearn: 1.3544313\ttotal: 39.3ms\tremaining: 1.92s\n","6:\tlearn: 1.3491497\ttotal: 40.9ms\tremaining: 1.71s\n","7:\tlearn: 1.3443315\ttotal: 44.9ms\tremaining: 1.64s\n","8:\tlearn: 1.3391471\ttotal: 49.3ms\tremaining: 1.59s\n","9:\tlearn: 1.3340073\ttotal: 53.1ms\tremaining: 1.54s\n","10:\tlearn: 1.3300971\ttotal: 59.5ms\tremaining: 1.56s\n","11:\tlearn: 1.3254615\ttotal: 60.5ms\tremaining: 1.45s\n","12:\tlearn: 1.3210498\ttotal: 61.5ms\tremaining: 1.36s\n","13:\tlearn: 1.3159964\ttotal: 62.5ms\tremaining: 1.28s\n","14:\tlearn: 1.3117860\ttotal: 68.9ms\tremaining: 1.31s\n","15:\tlearn: 1.3079710\ttotal: 69.8ms\tremaining: 1.24s\n","16:\tlearn: 1.3034993\ttotal: 71ms\tremaining: 1.18s\n","17:\tlearn: 1.2991221\ttotal: 77.5ms\tremaining: 1.21s\n","18:\tlearn: 1.2949844\ttotal: 78.5ms\tremaining: 1.16s\n","19:\tlearn: 1.2911903\ttotal: 79.6ms\tremaining: 1.11s\n","20:\tlearn: 1.2871855\ttotal: 83.7ms\tremaining: 1.11s\n","21:\tlearn: 1.2826983\ttotal: 84.3ms\tremaining: 1.06s\n","22:\tlearn: 1.2786411\ttotal: 85.5ms\tremaining: 1.03s\n","23:\tlearn: 1.2750202\ttotal: 90ms\tremaining: 1.03s\n","24:\tlearn: 1.2712181\ttotal: 95.8ms\tremaining: 1.05s\n","25:\tlearn: 1.2674785\ttotal: 98.2ms\tremaining: 1.03s\n","26:\tlearn: 1.2639816\ttotal: 104ms\tremaining: 1.05s\n","27:\tlearn: 1.2597769\ttotal: 110ms\tremaining: 1.06s\n","28:\tlearn: 1.2558132\ttotal: 112ms\tremaining: 1.04s\n","29:\tlearn: 1.2516633\ttotal: 117ms\tremaining: 1.05s\n","30:\tlearn: 1.2485695\ttotal: 118ms\tremaining: 1.02s\n","31:\tlearn: 1.2453551\ttotal: 120ms\tremaining: 1.01s\n","32:\tlearn: 1.2418225\ttotal: 128ms\tremaining: 1.03s\n","33:\tlearn: 1.2379047\ttotal: 129ms\tremaining: 1.01s\n","34:\tlearn: 1.2345051\ttotal: 130ms\tremaining: 986ms\n","35:\tlearn: 1.2306604\ttotal: 132ms\tremaining: 971ms\n","36:\tlearn: 1.2273720\ttotal: 135ms\tremaining: 959ms\n","37:\tlearn: 1.2239537\ttotal: 139ms\tremaining: 958ms\n","38:\tlearn: 1.2207479\ttotal: 142ms\tremaining: 948ms\n","39:\tlearn: 1.2175499\ttotal: 145ms\tremaining: 942ms\n","40:\tlearn: 1.2139564\ttotal: 147ms\tremaining: 932ms\n","41:\tlearn: 1.2101117\ttotal: 151ms\tremaining: 928ms\n","42:\tlearn: 1.2064406\ttotal: 153ms\tremaining: 914ms\n","43:\tlearn: 1.2031876\ttotal: 161ms\tremaining: 940ms\n","44:\tlearn: 1.1998997\ttotal: 163ms\tremaining: 923ms\n","45:\tlearn: 1.1971955\ttotal: 164ms\tremaining: 908ms\n","46:\tlearn: 1.1942617\ttotal: 167ms\tremaining: 898ms\n","47:\tlearn: 1.1910580\ttotal: 169ms\tremaining: 889ms\n","48:\tlearn: 1.1877376\ttotal: 170ms\tremaining: 873ms\n","49:\tlearn: 1.1843767\ttotal: 171ms\tremaining: 856ms\n","50:\tlearn: 1.1815056\ttotal: 177ms\tremaining: 866ms\n","51:\tlearn: 1.1781470\ttotal: 179ms\tremaining: 851ms\n","52:\tlearn: 1.1752843\ttotal: 180ms\tremaining: 837ms\n","53:\tlearn: 1.1723271\ttotal: 180ms\tremaining: 820ms\n","54:\tlearn: 1.1693780\ttotal: 181ms\tremaining: 806ms\n","55:\tlearn: 1.1671608\ttotal: 182ms\tremaining: 793ms\n","56:\tlearn: 1.1644670\ttotal: 183ms\tremaining: 780ms\n","57:\tlearn: 1.1618150\ttotal: 188ms\tremaining: 785ms\n","58:\tlearn: 1.1590888\ttotal: 190ms\tremaining: 774ms\n","59:\tlearn: 1.1562893\ttotal: 191ms\tremaining: 762ms\n","60:\tlearn: 1.1531183\ttotal: 191ms\tremaining: 750ms\n","61:\tlearn: 1.1506023\ttotal: 192ms\tremaining: 737ms\n","62:\tlearn: 1.1475139\ttotal: 199ms\tremaining: 750ms\n","63:\tlearn: 1.1448175\ttotal: 200ms\tremaining: 738ms\n","64:\tlearn: 1.1424808\ttotal: 202ms\tremaining: 730ms\n","65:\tlearn: 1.1395944\ttotal: 203ms\tremaining: 721ms\n","66:\tlearn: 1.1369915\ttotal: 205ms\tremaining: 712ms\n","67:\tlearn: 1.1345108\ttotal: 206ms\tremaining: 704ms\n","68:\tlearn: 1.1317191\ttotal: 210ms\tremaining: 702ms\n","69:\tlearn: 1.1292946\ttotal: 211ms\tremaining: 692ms\n","70:\tlearn: 1.1272925\ttotal: 212ms\tremaining: 683ms\n","71:\tlearn: 1.1247439\ttotal: 218ms\tremaining: 691ms\n","72:\tlearn: 1.1217504\ttotal: 219ms\tremaining: 681ms\n","73:\tlearn: 1.1195129\ttotal: 226ms\tremaining: 690ms\n","74:\tlearn: 1.1173198\ttotal: 229ms\tremaining: 687ms\n","75:\tlearn: 1.1147372\ttotal: 231ms\tremaining: 682ms\n","76:\tlearn: 1.1124554\ttotal: 237ms\tremaining: 686ms\n","77:\tlearn: 1.1095915\ttotal: 242ms\tremaining: 688ms\n","78:\tlearn: 1.1072934\ttotal: 243ms\tremaining: 679ms\n","79:\tlearn: 1.1051031\ttotal: 248ms\tremaining: 681ms\n","80:\tlearn: 1.1026460\ttotal: 251ms\tremaining: 679ms\n","81:\tlearn: 1.1001416\ttotal: 252ms\tremaining: 670ms\n","82:\tlearn: 1.0976202\ttotal: 264ms\tremaining: 689ms\n","83:\tlearn: 1.0957104\ttotal: 265ms\tremaining: 682ms\n","84:\tlearn: 1.0934000\ttotal: 266ms\tremaining: 673ms\n","85:\tlearn: 1.0907255\ttotal: 273ms\tremaining: 680ms\n","86:\tlearn: 1.0886453\ttotal: 276ms\tremaining: 676ms\n","87:\tlearn: 1.0868354\ttotal: 277ms\tremaining: 668ms\n","88:\tlearn: 1.0842885\ttotal: 278ms\tremaining: 659ms\n","89:\tlearn: 1.0818157\ttotal: 279ms\tremaining: 651ms\n","90:\tlearn: 1.0800962\ttotal: 280ms\tremaining: 643ms\n","91:\tlearn: 1.0780220\ttotal: 281ms\tremaining: 634ms\n","92:\tlearn: 1.0763633\ttotal: 283ms\tremaining: 630ms\n","93:\tlearn: 1.0740870\ttotal: 284ms\tremaining: 623ms\n","94:\tlearn: 1.0716693\ttotal: 285ms\tremaining: 615ms\n","95:\tlearn: 1.0698291\ttotal: 288ms\tremaining: 612ms\n","96:\tlearn: 1.0676643\ttotal: 289ms\tremaining: 605ms\n","97:\tlearn: 1.0653535\ttotal: 290ms\tremaining: 598ms\n","98:\tlearn: 1.0630826\ttotal: 291ms\tremaining: 591ms\n","99:\tlearn: 1.0610018\ttotal: 292ms\tremaining: 583ms\n","100:\tlearn: 1.0593457\ttotal: 292ms\tremaining: 576ms\n","101:\tlearn: 1.0576081\ttotal: 297ms\tremaining: 577ms\n","102:\tlearn: 1.0556439\ttotal: 298ms\tremaining: 571ms\n","103:\tlearn: 1.0541011\ttotal: 299ms\tremaining: 564ms\n","104:\tlearn: 1.0522729\ttotal: 300ms\tremaining: 558ms\n","105:\tlearn: 1.0504938\ttotal: 301ms\tremaining: 550ms\n","106:\tlearn: 1.0487972\ttotal: 302ms\tremaining: 544ms\n","107:\tlearn: 1.0471497\ttotal: 302ms\tremaining: 537ms\n","108:\tlearn: 1.0452298\ttotal: 303ms\tremaining: 532ms\n","109:\tlearn: 1.0434544\ttotal: 306ms\tremaining: 529ms\n","110:\tlearn: 1.0415557\ttotal: 314ms\tremaining: 535ms\n","111:\tlearn: 1.0400349\ttotal: 315ms\tremaining: 529ms\n","112:\tlearn: 1.0382156\ttotal: 316ms\tremaining: 523ms\n","113:\tlearn: 1.0362035\ttotal: 323ms\tremaining: 526ms\n","114:\tlearn: 1.0346017\ttotal: 325ms\tremaining: 522ms\n","115:\tlearn: 1.0327689\ttotal: 327ms\tremaining: 518ms\n","116:\tlearn: 1.0313555\ttotal: 329ms\tremaining: 514ms\n","117:\tlearn: 1.0294267\ttotal: 331ms\tremaining: 510ms\n","118:\tlearn: 1.0280147\ttotal: 333ms\tremaining: 506ms\n","119:\tlearn: 1.0266139\ttotal: 334ms\tremaining: 502ms\n","120:\tlearn: 1.0254310\ttotal: 336ms\tremaining: 496ms\n","121:\tlearn: 1.0236353\ttotal: 338ms\tremaining: 493ms\n","122:\tlearn: 1.0216393\ttotal: 339ms\tremaining: 488ms\n","123:\tlearn: 1.0199709\ttotal: 341ms\tremaining: 483ms\n","124:\tlearn: 1.0185771\ttotal: 342ms\tremaining: 478ms\n","125:\tlearn: 1.0172406\ttotal: 344ms\tremaining: 475ms\n","126:\tlearn: 1.0155122\ttotal: 345ms\tremaining: 470ms\n","127:\tlearn: 1.0140622\ttotal: 346ms\tremaining: 465ms\n","128:\tlearn: 1.0124196\ttotal: 348ms\tremaining: 462ms\n","129:\tlearn: 1.0110878\ttotal: 349ms\tremaining: 457ms\n","130:\tlearn: 1.0096469\ttotal: 350ms\tremaining: 452ms\n","131:\tlearn: 1.0081930\ttotal: 352ms\tremaining: 448ms\n","132:\tlearn: 1.0068446\ttotal: 354ms\tremaining: 445ms\n","133:\tlearn: 1.0054059\ttotal: 361ms\tremaining: 448ms\n","134:\tlearn: 1.0037073\ttotal: 366ms\tremaining: 447ms\n","135:\tlearn: 1.0021434\ttotal: 369ms\tremaining: 445ms\n","136:\tlearn: 1.0010061\ttotal: 370ms\tremaining: 441ms\n","137:\tlearn: 0.9997551\ttotal: 372ms\tremaining: 437ms\n","138:\tlearn: 0.9982701\ttotal: 376ms\tremaining: 435ms\n","139:\tlearn: 0.9963996\ttotal: 378ms\tremaining: 432ms\n","140:\tlearn: 0.9950960\ttotal: 379ms\tremaining: 428ms\n","141:\tlearn: 0.9937622\ttotal: 383ms\tremaining: 426ms\n","142:\tlearn: 0.9923966\ttotal: 384ms\tremaining: 421ms\n","143:\tlearn: 0.9911360\ttotal: 385ms\tremaining: 417ms\n","144:\tlearn: 0.9895857\ttotal: 388ms\tremaining: 414ms\n","145:\tlearn: 0.9880511\ttotal: 396ms\tremaining: 418ms\n","146:\tlearn: 0.9867842\ttotal: 398ms\tremaining: 414ms\n","147:\tlearn: 0.9856194\ttotal: 400ms\tremaining: 411ms\n","148:\tlearn: 0.9840416\ttotal: 402ms\tremaining: 408ms\n","149:\tlearn: 0.9829644\ttotal: 404ms\tremaining: 404ms\n","150:\tlearn: 0.9820839\ttotal: 406ms\tremaining: 401ms\n","151:\tlearn: 0.9807038\ttotal: 413ms\tremaining: 402ms\n","152:\tlearn: 0.9791973\ttotal: 414ms\tremaining: 398ms\n","153:\tlearn: 0.9780192\ttotal: 416ms\tremaining: 394ms\n","154:\tlearn: 0.9769529\ttotal: 418ms\tremaining: 391ms\n","155:\tlearn: 0.9751653\ttotal: 421ms\tremaining: 388ms\n","156:\tlearn: 0.9742047\ttotal: 422ms\tremaining: 385ms\n","157:\tlearn: 0.9726862\ttotal: 425ms\tremaining: 382ms\n","158:\tlearn: 0.9714788\ttotal: 427ms\tremaining: 378ms\n","159:\tlearn: 0.9702524\ttotal: 429ms\tremaining: 375ms\n","160:\tlearn: 0.9692362\ttotal: 431ms\tremaining: 372ms\n","161:\tlearn: 0.9680980\ttotal: 432ms\tremaining: 368ms\n","162:\tlearn: 0.9673764\ttotal: 434ms\tremaining: 365ms\n","163:\tlearn: 0.9661176\ttotal: 436ms\tremaining: 362ms\n","164:\tlearn: 0.9651125\ttotal: 439ms\tremaining: 359ms\n","165:\tlearn: 0.9641889\ttotal: 440ms\tremaining: 355ms\n","166:\tlearn: 0.9630642\ttotal: 441ms\tremaining: 351ms\n","167:\tlearn: 0.9620390\ttotal: 446ms\tremaining: 350ms\n","168:\tlearn: 0.9610072\ttotal: 451ms\tremaining: 350ms\n","169:\tlearn: 0.9599474\ttotal: 463ms\tremaining: 354ms\n","170:\tlearn: 0.9589573\ttotal: 464ms\tremaining: 350ms\n","171:\tlearn: 0.9578482\ttotal: 466ms\tremaining: 347ms\n","172:\tlearn: 0.9567317\ttotal: 468ms\tremaining: 344ms\n","173:\tlearn: 0.9555084\ttotal: 469ms\tremaining: 340ms\n","174:\tlearn: 0.9543182\ttotal: 471ms\tremaining: 336ms\n","175:\tlearn: 0.9534178\ttotal: 473ms\tremaining: 333ms\n","176:\tlearn: 0.9526240\ttotal: 475ms\tremaining: 330ms\n","177:\tlearn: 0.9514645\ttotal: 477ms\tremaining: 327ms\n","178:\tlearn: 0.9504415\ttotal: 479ms\tremaining: 324ms\n","179:\tlearn: 0.9496840\ttotal: 480ms\tremaining: 320ms\n","180:\tlearn: 0.9488203\ttotal: 481ms\tremaining: 316ms\n","181:\tlearn: 0.9477423\ttotal: 482ms\tremaining: 313ms\n","182:\tlearn: 0.9468383\ttotal: 485ms\tremaining: 310ms\n","183:\tlearn: 0.9458192\ttotal: 487ms\tremaining: 307ms\n","184:\tlearn: 0.9447121\ttotal: 490ms\tremaining: 304ms\n","185:\tlearn: 0.9438160\ttotal: 493ms\tremaining: 302ms\n","186:\tlearn: 0.9429279\ttotal: 494ms\tremaining: 299ms\n","187:\tlearn: 0.9419264\ttotal: 496ms\tremaining: 295ms\n","188:\tlearn: 0.9411234\ttotal: 498ms\tremaining: 292ms\n","189:\tlearn: 0.9400985\ttotal: 500ms\tremaining: 289ms\n","190:\tlearn: 0.9391528\ttotal: 502ms\tremaining: 286ms\n","191:\tlearn: 0.9380193\ttotal: 504ms\tremaining: 283ms\n","192:\tlearn: 0.9369883\ttotal: 506ms\tremaining: 280ms\n","193:\tlearn: 0.9359819\ttotal: 508ms\tremaining: 277ms\n","194:\tlearn: 0.9352483\ttotal: 510ms\tremaining: 274ms\n","195:\tlearn: 0.9340695\ttotal: 511ms\tremaining: 271ms\n","196:\tlearn: 0.9333528\ttotal: 513ms\tremaining: 268ms\n","197:\tlearn: 0.9323400\ttotal: 514ms\tremaining: 265ms\n","198:\tlearn: 0.9315807\ttotal: 516ms\tremaining: 262ms\n","199:\tlearn: 0.9305942\ttotal: 518ms\tremaining: 259ms\n","200:\tlearn: 0.9294901\ttotal: 519ms\tremaining: 256ms\n","201:\tlearn: 0.9284361\ttotal: 525ms\tremaining: 255ms\n","202:\tlearn: 0.9273356\ttotal: 526ms\tremaining: 251ms\n","203:\tlearn: 0.9262921\ttotal: 528ms\tremaining: 248ms\n","204:\tlearn: 0.9254039\ttotal: 530ms\tremaining: 246ms\n","205:\tlearn: 0.9246210\ttotal: 532ms\tremaining: 243ms\n","206:\tlearn: 0.9236340\ttotal: 534ms\tremaining: 240ms\n","207:\tlearn: 0.9226792\ttotal: 536ms\tremaining: 237ms\n","208:\tlearn: 0.9217999\ttotal: 538ms\tremaining: 234ms\n","209:\tlearn: 0.9210616\ttotal: 539ms\tremaining: 231ms\n","210:\tlearn: 0.9202560\ttotal: 541ms\tremaining: 228ms\n","211:\tlearn: 0.9195123\ttotal: 543ms\tremaining: 225ms\n","212:\tlearn: 0.9186191\ttotal: 544ms\tremaining: 222ms\n","213:\tlearn: 0.9178843\ttotal: 545ms\tremaining: 219ms\n","214:\tlearn: 0.9170998\ttotal: 547ms\tremaining: 216ms\n","215:\tlearn: 0.9164267\ttotal: 549ms\tremaining: 213ms\n","216:\tlearn: 0.9156085\ttotal: 550ms\tremaining: 211ms\n","217:\tlearn: 0.9148710\ttotal: 552ms\tremaining: 208ms\n","218:\tlearn: 0.9142578\ttotal: 554ms\tremaining: 205ms\n","219:\tlearn: 0.9134584\ttotal: 556ms\tremaining: 202ms\n","220:\tlearn: 0.9129564\ttotal: 558ms\tremaining: 199ms\n","221:\tlearn: 0.9123911\ttotal: 559ms\tremaining: 196ms\n","222:\tlearn: 0.9116230\ttotal: 561ms\tremaining: 194ms\n","223:\tlearn: 0.9107992\ttotal: 562ms\tremaining: 191ms\n","224:\tlearn: 0.9100835\ttotal: 564ms\tremaining: 188ms\n","225:\tlearn: 0.9090561\ttotal: 565ms\tremaining: 185ms\n","226:\tlearn: 0.9082573\ttotal: 567ms\tremaining: 182ms\n","227:\tlearn: 0.9073954\ttotal: 569ms\tremaining: 180ms\n","228:\tlearn: 0.9067942\ttotal: 571ms\tremaining: 177ms\n","229:\tlearn: 0.9062781\ttotal: 572ms\tremaining: 174ms\n","230:\tlearn: 0.9056895\ttotal: 574ms\tremaining: 171ms\n","231:\tlearn: 0.9051269\ttotal: 576ms\tremaining: 169ms\n","232:\tlearn: 0.9042959\ttotal: 578ms\tremaining: 166ms\n","233:\tlearn: 0.9036703\ttotal: 579ms\tremaining: 163ms\n","234:\tlearn: 0.9027513\ttotal: 581ms\tremaining: 161ms\n","235:\tlearn: 0.9020939\ttotal: 583ms\tremaining: 158ms\n","236:\tlearn: 0.9015357\ttotal: 585ms\tremaining: 155ms\n","237:\tlearn: 0.9007352\ttotal: 587ms\tremaining: 153ms\n","238:\tlearn: 0.8999065\ttotal: 589ms\tremaining: 150ms\n","239:\tlearn: 0.8993160\ttotal: 590ms\tremaining: 148ms\n","240:\tlearn: 0.8987302\ttotal: 592ms\tremaining: 145ms\n","241:\tlearn: 0.8979263\ttotal: 594ms\tremaining: 142ms\n","242:\tlearn: 0.8968933\ttotal: 597ms\tremaining: 140ms\n","243:\tlearn: 0.8962384\ttotal: 598ms\tremaining: 137ms\n","244:\tlearn: 0.8956353\ttotal: 601ms\tremaining: 135ms\n","245:\tlearn: 0.8951833\ttotal: 602ms\tremaining: 132ms\n","246:\tlearn: 0.8945484\ttotal: 603ms\tremaining: 129ms\n","247:\tlearn: 0.8937061\ttotal: 605ms\tremaining: 127ms\n","248:\tlearn: 0.8929481\ttotal: 607ms\tremaining: 124ms\n","249:\tlearn: 0.8924469\ttotal: 609ms\tremaining: 122ms\n","250:\tlearn: 0.8918465\ttotal: 611ms\tremaining: 119ms\n","251:\tlearn: 0.8912551\ttotal: 612ms\tremaining: 117ms\n","252:\tlearn: 0.8905595\ttotal: 613ms\tremaining: 114ms\n","253:\tlearn: 0.8896425\ttotal: 614ms\tremaining: 111ms\n","254:\tlearn: 0.8886754\ttotal: 616ms\tremaining: 109ms\n","255:\tlearn: 0.8882585\ttotal: 617ms\tremaining: 106ms\n","256:\tlearn: 0.8872055\ttotal: 618ms\tremaining: 103ms\n","257:\tlearn: 0.8865167\ttotal: 621ms\tremaining: 101ms\n","258:\tlearn: 0.8856794\ttotal: 623ms\tremaining: 98.6ms\n","259:\tlearn: 0.8848360\ttotal: 625ms\tremaining: 96.1ms\n","260:\tlearn: 0.8844039\ttotal: 627ms\tremaining: 93.6ms\n","261:\tlearn: 0.8839379\ttotal: 629ms\tremaining: 91.3ms\n","262:\tlearn: 0.8831331\ttotal: 631ms\tremaining: 88.8ms\n","263:\tlearn: 0.8825262\ttotal: 634ms\tremaining: 86.4ms\n","264:\tlearn: 0.8819296\ttotal: 635ms\tremaining: 83.9ms\n","265:\tlearn: 0.8811686\ttotal: 638ms\tremaining: 81.6ms\n","266:\tlearn: 0.8804070\ttotal: 639ms\tremaining: 79ms\n","267:\tlearn: 0.8799658\ttotal: 641ms\tremaining: 76.5ms\n","268:\tlearn: 0.8794454\ttotal: 642ms\tremaining: 74ms\n","269:\tlearn: 0.8784715\ttotal: 644ms\tremaining: 71.6ms\n","270:\tlearn: 0.8779612\ttotal: 648ms\tremaining: 69.3ms\n","271:\tlearn: 0.8772926\ttotal: 650ms\tremaining: 66.9ms\n","272:\tlearn: 0.8768648\ttotal: 652ms\tremaining: 64.5ms\n","273:\tlearn: 0.8764157\ttotal: 654ms\tremaining: 62ms\n","274:\tlearn: 0.8758924\ttotal: 656ms\tremaining: 59.6ms\n","275:\tlearn: 0.8754037\ttotal: 661ms\tremaining: 57.5ms\n","276:\tlearn: 0.8746616\ttotal: 662ms\tremaining: 55ms\n","277:\tlearn: 0.8741670\ttotal: 664ms\tremaining: 52.6ms\n","278:\tlearn: 0.8734531\ttotal: 672ms\tremaining: 50.5ms\n","279:\tlearn: 0.8727219\ttotal: 674ms\tremaining: 48.1ms\n","280:\tlearn: 0.8718704\ttotal: 676ms\tremaining: 45.7ms\n","281:\tlearn: 0.8713305\ttotal: 678ms\tremaining: 43.3ms\n","282:\tlearn: 0.8708806\ttotal: 679ms\tremaining: 40.8ms\n","283:\tlearn: 0.8703586\ttotal: 682ms\tremaining: 38.4ms\n","284:\tlearn: 0.8696228\ttotal: 684ms\tremaining: 36ms\n","285:\tlearn: 0.8692084\ttotal: 685ms\tremaining: 33.5ms\n","286:\tlearn: 0.8687664\ttotal: 687ms\tremaining: 31.1ms\n","287:\tlearn: 0.8681579\ttotal: 689ms\tremaining: 28.7ms\n","288:\tlearn: 0.8672156\ttotal: 691ms\tremaining: 26.3ms\n","289:\tlearn: 0.8665469\ttotal: 693ms\tremaining: 23.9ms\n","290:\tlearn: 0.8660430\ttotal: 695ms\tremaining: 21.5ms\n","291:\tlearn: 0.8654179\ttotal: 697ms\tremaining: 19.1ms\n","292:\tlearn: 0.8648524\ttotal: 704ms\tremaining: 16.8ms\n","293:\tlearn: 0.8644411\ttotal: 704ms\tremaining: 14.4ms\n","294:\tlearn: 0.8639641\ttotal: 705ms\tremaining: 11.9ms\n","295:\tlearn: 0.8635491\ttotal: 705ms\tremaining: 9.53ms\n","296:\tlearn: 0.8628065\ttotal: 706ms\tremaining: 7.13ms\n","297:\tlearn: 0.8621218\ttotal: 712ms\tremaining: 4.78ms\n","298:\tlearn: 0.8615333\ttotal: 715ms\tremaining: 2.39ms\n","299:\tlearn: 0.8612106\ttotal: 716ms\tremaining: 0us\n","0:\tlearn: 1.3816770\ttotal: 5.38ms\tremaining: 1.61s\n","1:\tlearn: 1.3760478\ttotal: 6.81ms\tremaining: 1.01s\n","2:\tlearn: 1.3698835\ttotal: 7.33ms\tremaining: 726ms\n","3:\tlearn: 1.3654359\ttotal: 8.29ms\tremaining: 613ms\n","4:\tlearn: 1.3601520\ttotal: 13.2ms\tremaining: 776ms\n","5:\tlearn: 1.3556473\ttotal: 13.8ms\tremaining: 675ms\n","6:\tlearn: 1.3504392\ttotal: 14.4ms\tremaining: 603ms\n","7:\tlearn: 1.3448427\ttotal: 14.8ms\tremaining: 541ms\n","8:\tlearn: 1.3395640\ttotal: 15.2ms\tremaining: 493ms\n","9:\tlearn: 1.3346214\ttotal: 15.9ms\tremaining: 461ms\n","10:\tlearn: 1.3304040\ttotal: 16.5ms\tremaining: 434ms\n","11:\tlearn: 1.3253329\ttotal: 17.2ms\tremaining: 412ms\n","12:\tlearn: 1.3199868\ttotal: 17.8ms\tremaining: 393ms\n","13:\tlearn: 1.3153347\ttotal: 18.4ms\tremaining: 376ms\n","14:\tlearn: 1.3107245\ttotal: 19.1ms\tremaining: 362ms\n","15:\tlearn: 1.3061120\ttotal: 19.6ms\tremaining: 348ms\n","16:\tlearn: 1.3016018\ttotal: 20.6ms\tremaining: 343ms\n","17:\tlearn: 1.2969244\ttotal: 21ms\tremaining: 329ms\n","18:\tlearn: 1.2921381\ttotal: 21.6ms\tremaining: 320ms\n","19:\tlearn: 1.2880530\ttotal: 22.3ms\tremaining: 312ms\n","20:\tlearn: 1.2838503\ttotal: 23.1ms\tremaining: 306ms\n","21:\tlearn: 1.2797396\ttotal: 23.7ms\tremaining: 299ms\n","22:\tlearn: 1.2754406\ttotal: 24.3ms\tremaining: 293ms\n","23:\tlearn: 1.2719646\ttotal: 25.2ms\tremaining: 290ms\n","24:\tlearn: 1.2677899\ttotal: 26.1ms\tremaining: 287ms\n","25:\tlearn: 1.2643519\ttotal: 27ms\tremaining: 284ms\n","26:\tlearn: 1.2603120\ttotal: 27.6ms\tremaining: 279ms\n","27:\tlearn: 1.2562312\ttotal: 28.3ms\tremaining: 275ms\n","28:\tlearn: 1.2521332\ttotal: 29ms\tremaining: 271ms\n","29:\tlearn: 1.2487091\ttotal: 29.7ms\tremaining: 267ms\n","30:\tlearn: 1.2453983\ttotal: 30.3ms\tremaining: 263ms\n","31:\tlearn: 1.2415838\ttotal: 31ms\tremaining: 259ms\n","32:\tlearn: 1.2374486\ttotal: 31.3ms\tremaining: 253ms\n","33:\tlearn: 1.2335697\ttotal: 31.9ms\tremaining: 250ms\n","34:\tlearn: 1.2301283\ttotal: 32.5ms\tremaining: 246ms\n","35:\tlearn: 1.2263591\ttotal: 33.1ms\tremaining: 243ms\n","36:\tlearn: 1.2230911\ttotal: 33.8ms\tremaining: 240ms\n","37:\tlearn: 1.2197821\ttotal: 34.4ms\tremaining: 237ms\n","38:\tlearn: 1.2163614\ttotal: 34.6ms\tremaining: 231ms\n","39:\tlearn: 1.2131920\ttotal: 35.2ms\tremaining: 229ms\n","40:\tlearn: 1.2096864\ttotal: 35.9ms\tremaining: 227ms\n","41:\tlearn: 1.2058457\ttotal: 36.6ms\tremaining: 225ms\n","42:\tlearn: 1.2023702\ttotal: 37.2ms\tremaining: 222ms\n","43:\tlearn: 1.1988418\ttotal: 37.9ms\tremaining: 220ms\n","44:\tlearn: 1.1957158\ttotal: 38.5ms\tremaining: 218ms\n","45:\tlearn: 1.1929119\ttotal: 39.4ms\tremaining: 218ms\n","46:\tlearn: 1.1898086\ttotal: 41.2ms\tremaining: 222ms\n","47:\tlearn: 1.1867536\ttotal: 42ms\tremaining: 221ms\n","48:\tlearn: 1.1832376\ttotal: 42.7ms\tremaining: 219ms\n","49:\tlearn: 1.1802154\ttotal: 43.5ms\tremaining: 217ms\n","50:\tlearn: 1.1776866\ttotal: 44.1ms\tremaining: 215ms\n","51:\tlearn: 1.1745530\ttotal: 44.7ms\tremaining: 213ms\n","52:\tlearn: 1.1712577\ttotal: 45.3ms\tremaining: 211ms\n","53:\tlearn: 1.1684784\ttotal: 45.6ms\tremaining: 208ms\n","54:\tlearn: 1.1659132\ttotal: 46.3ms\tremaining: 206ms\n","55:\tlearn: 1.1633741\ttotal: 46.7ms\tremaining: 203ms\n","56:\tlearn: 1.1605225\ttotal: 46.9ms\tremaining: 200ms\n","57:\tlearn: 1.1574531\ttotal: 47.5ms\tremaining: 198ms\n","58:\tlearn: 1.1547783\ttotal: 48.3ms\tremaining: 197ms\n","59:\tlearn: 1.1521123\ttotal: 49ms\tremaining: 196ms\n","60:\tlearn: 1.1489493\ttotal: 53.1ms\tremaining: 208ms\n","61:\tlearn: 1.1462289\ttotal: 53.9ms\tremaining: 207ms\n","62:\tlearn: 1.1431523\ttotal: 55.4ms\tremaining: 208ms\n","63:\tlearn: 1.1409007\ttotal: 58.8ms\tremaining: 217ms\n","64:\tlearn: 1.1379105\ttotal: 62.1ms\tremaining: 225ms\n","65:\tlearn: 1.1353731\ttotal: 65.1ms\tremaining: 231ms\n","66:\tlearn: 1.1329302\ttotal: 67.7ms\tremaining: 236ms\n","67:\tlearn: 1.1302693\ttotal: 68.7ms\tremaining: 234ms\n","68:\tlearn: 1.1277300\ttotal: 70.2ms\tremaining: 235ms\n","69:\tlearn: 1.1253299\ttotal: 70.9ms\tremaining: 233ms\n","70:\tlearn: 1.1227054\ttotal: 76.8ms\tremaining: 248ms\n","71:\tlearn: 1.1205261\ttotal: 77.1ms\tremaining: 244ms\n","72:\tlearn: 1.1180500\ttotal: 77.5ms\tremaining: 241ms\n","73:\tlearn: 1.1152162\ttotal: 78.1ms\tremaining: 239ms\n","74:\tlearn: 1.1131705\ttotal: 78.7ms\tremaining: 236ms\n","75:\tlearn: 1.1108063\ttotal: 79.4ms\tremaining: 234ms\n","76:\tlearn: 1.1085308\ttotal: 80ms\tremaining: 232ms\n","77:\tlearn: 1.1062288\ttotal: 80.7ms\tremaining: 230ms\n","78:\tlearn: 1.1034736\ttotal: 81.3ms\tremaining: 227ms\n","79:\tlearn: 1.1013014\ttotal: 81.9ms\tremaining: 225ms\n","80:\tlearn: 1.0990145\ttotal: 82.7ms\tremaining: 223ms\n","81:\tlearn: 1.0965287\ttotal: 83.1ms\tremaining: 221ms\n","82:\tlearn: 1.0944500\ttotal: 88.7ms\tremaining: 232ms\n","83:\tlearn: 1.0920922\ttotal: 89.4ms\tremaining: 230ms\n","84:\tlearn: 1.0901005\ttotal: 90.1ms\tremaining: 228ms\n","85:\tlearn: 1.0880074\ttotal: 90.7ms\tremaining: 226ms\n","86:\tlearn: 1.0858443\ttotal: 96.3ms\tremaining: 236ms\n","87:\tlearn: 1.0836172\ttotal: 96.6ms\tremaining: 233ms\n","88:\tlearn: 1.0816030\ttotal: 97.3ms\tremaining: 231ms\n","89:\tlearn: 1.0789491\ttotal: 97.7ms\tremaining: 228ms\n","90:\tlearn: 1.0768474\ttotal: 98.3ms\tremaining: 226ms\n","91:\tlearn: 1.0747332\ttotal: 103ms\tremaining: 233ms\n","92:\tlearn: 1.0726579\ttotal: 108ms\tremaining: 241ms\n","93:\tlearn: 1.0707709\ttotal: 111ms\tremaining: 243ms\n","94:\tlearn: 1.0686676\ttotal: 111ms\tremaining: 240ms\n","95:\tlearn: 1.0671218\ttotal: 116ms\tremaining: 247ms\n","96:\tlearn: 1.0652532\ttotal: 117ms\tremaining: 245ms\n","97:\tlearn: 1.0628180\ttotal: 118ms\tremaining: 243ms\n","98:\tlearn: 1.0605872\ttotal: 118ms\tremaining: 240ms\n","99:\tlearn: 1.0589164\ttotal: 119ms\tremaining: 238ms\n","100:\tlearn: 1.0567503\ttotal: 119ms\tremaining: 235ms\n","101:\tlearn: 1.0549109\ttotal: 126ms\tremaining: 245ms\n","102:\tlearn: 1.0534958\ttotal: 127ms\tremaining: 243ms\n","103:\tlearn: 1.0513439\ttotal: 128ms\tremaining: 242ms\n","104:\tlearn: 1.0494822\ttotal: 129ms\tremaining: 239ms\n","105:\tlearn: 1.0477255\ttotal: 129ms\tremaining: 236ms\n","106:\tlearn: 1.0458689\ttotal: 130ms\tremaining: 234ms\n","107:\tlearn: 1.0436653\ttotal: 131ms\tremaining: 233ms\n","108:\tlearn: 1.0418895\ttotal: 140ms\tremaining: 246ms\n","109:\tlearn: 1.0402020\ttotal: 141ms\tremaining: 243ms\n","110:\tlearn: 1.0381841\ttotal: 142ms\tremaining: 241ms\n","111:\tlearn: 1.0363457\ttotal: 142ms\tremaining: 239ms\n","112:\tlearn: 1.0345503\ttotal: 143ms\tremaining: 237ms\n","113:\tlearn: 1.0328724\ttotal: 157ms\tremaining: 256ms\n","114:\tlearn: 1.0308785\ttotal: 158ms\tremaining: 254ms\n","115:\tlearn: 1.0290404\ttotal: 159ms\tremaining: 252ms\n","116:\tlearn: 1.0271759\ttotal: 159ms\tremaining: 249ms\n","117:\tlearn: 1.0250910\ttotal: 162ms\tremaining: 250ms\n","118:\tlearn: 1.0234579\ttotal: 163ms\tremaining: 248ms\n","119:\tlearn: 1.0220612\ttotal: 174ms\tremaining: 260ms\n","120:\tlearn: 1.0204331\ttotal: 177ms\tremaining: 262ms\n","121:\tlearn: 1.0185398\ttotal: 181ms\tremaining: 264ms\n","122:\tlearn: 1.0169901\ttotal: 182ms\tremaining: 261ms\n","123:\tlearn: 1.0153660\ttotal: 185ms\tremaining: 262ms\n","124:\tlearn: 1.0139216\ttotal: 190ms\tremaining: 266ms\n","125:\tlearn: 1.0123347\ttotal: 191ms\tremaining: 264ms\n","126:\tlearn: 1.0109830\ttotal: 192ms\tremaining: 262ms\n","127:\tlearn: 1.0094317\ttotal: 192ms\tremaining: 258ms\n","128:\tlearn: 1.0078465\ttotal: 193ms\tremaining: 256ms\n","129:\tlearn: 1.0061309\ttotal: 194ms\tremaining: 253ms\n","130:\tlearn: 1.0048352\ttotal: 194ms\tremaining: 250ms\n","131:\tlearn: 1.0034638\ttotal: 194ms\tremaining: 247ms\n","132:\tlearn: 1.0020480\ttotal: 195ms\tremaining: 245ms\n","133:\tlearn: 1.0008385\ttotal: 196ms\tremaining: 242ms\n","134:\tlearn: 0.9991889\ttotal: 197ms\tremaining: 240ms\n","135:\tlearn: 0.9976868\ttotal: 197ms\tremaining: 238ms\n","136:\tlearn: 0.9959111\ttotal: 198ms\tremaining: 236ms\n","137:\tlearn: 0.9945518\ttotal: 198ms\tremaining: 233ms\n","138:\tlearn: 0.9930942\ttotal: 199ms\tremaining: 231ms\n","139:\tlearn: 0.9915462\ttotal: 200ms\tremaining: 229ms\n","140:\tlearn: 0.9903834\ttotal: 200ms\tremaining: 226ms\n","141:\tlearn: 0.9888008\ttotal: 201ms\tremaining: 223ms\n","142:\tlearn: 0.9871797\ttotal: 201ms\tremaining: 221ms\n","143:\tlearn: 0.9859948\ttotal: 202ms\tremaining: 218ms\n","144:\tlearn: 0.9843160\ttotal: 202ms\tremaining: 216ms\n","145:\tlearn: 0.9832650\ttotal: 203ms\tremaining: 214ms\n","146:\tlearn: 0.9817503\ttotal: 204ms\tremaining: 212ms\n","147:\tlearn: 0.9802361\ttotal: 205ms\tremaining: 210ms\n","148:\tlearn: 0.9788073\ttotal: 205ms\tremaining: 208ms\n","149:\tlearn: 0.9777869\ttotal: 206ms\tremaining: 206ms\n","150:\tlearn: 0.9765712\ttotal: 207ms\tremaining: 204ms\n","151:\tlearn: 0.9754443\ttotal: 207ms\tremaining: 202ms\n","152:\tlearn: 0.9745162\ttotal: 208ms\tremaining: 200ms\n","153:\tlearn: 0.9736058\ttotal: 208ms\tremaining: 197ms\n","154:\tlearn: 0.9723533\ttotal: 209ms\tremaining: 195ms\n","155:\tlearn: 0.9710735\ttotal: 210ms\tremaining: 194ms\n","156:\tlearn: 0.9697441\ttotal: 211ms\tremaining: 192ms\n","157:\tlearn: 0.9686424\ttotal: 211ms\tremaining: 190ms\n","158:\tlearn: 0.9675401\ttotal: 212ms\tremaining: 188ms\n","159:\tlearn: 0.9665821\ttotal: 212ms\tremaining: 186ms\n","160:\tlearn: 0.9653201\ttotal: 213ms\tremaining: 184ms\n","161:\tlearn: 0.9638377\ttotal: 213ms\tremaining: 182ms\n","162:\tlearn: 0.9626394\ttotal: 214ms\tremaining: 180ms\n","163:\tlearn: 0.9610503\ttotal: 215ms\tremaining: 179ms\n","164:\tlearn: 0.9601125\ttotal: 216ms\tremaining: 177ms\n","165:\tlearn: 0.9591069\ttotal: 217ms\tremaining: 175ms\n","166:\tlearn: 0.9579847\ttotal: 218ms\tremaining: 173ms\n","167:\tlearn: 0.9567267\ttotal: 218ms\tremaining: 172ms\n","168:\tlearn: 0.9558558\ttotal: 218ms\tremaining: 169ms\n","169:\tlearn: 0.9546926\ttotal: 219ms\tremaining: 168ms\n","170:\tlearn: 0.9535179\ttotal: 220ms\tremaining: 166ms\n","171:\tlearn: 0.9524110\ttotal: 220ms\tremaining: 164ms\n","172:\tlearn: 0.9513038\ttotal: 221ms\tremaining: 162ms\n","173:\tlearn: 0.9502336\ttotal: 221ms\tremaining: 160ms\n","174:\tlearn: 0.9490728\ttotal: 222ms\tremaining: 158ms\n","175:\tlearn: 0.9478548\ttotal: 222ms\tremaining: 157ms\n","176:\tlearn: 0.9464348\ttotal: 223ms\tremaining: 155ms\n","177:\tlearn: 0.9453036\ttotal: 224ms\tremaining: 154ms\n","178:\tlearn: 0.9442281\ttotal: 225ms\tremaining: 152ms\n","179:\tlearn: 0.9430364\ttotal: 226ms\tremaining: 150ms\n","180:\tlearn: 0.9421084\ttotal: 227ms\tremaining: 149ms\n","181:\tlearn: 0.9410090\ttotal: 231ms\tremaining: 149ms\n","182:\tlearn: 0.9401666\ttotal: 238ms\tremaining: 152ms\n","183:\tlearn: 0.9392008\ttotal: 241ms\tremaining: 152ms\n","184:\tlearn: 0.9381923\ttotal: 242ms\tremaining: 150ms\n","185:\tlearn: 0.9370231\ttotal: 242ms\tremaining: 149ms\n","186:\tlearn: 0.9357492\ttotal: 243ms\tremaining: 147ms\n","187:\tlearn: 0.9347676\ttotal: 245ms\tremaining: 146ms\n","188:\tlearn: 0.9336593\ttotal: 246ms\tremaining: 144ms\n","189:\tlearn: 0.9323092\ttotal: 251ms\tremaining: 145ms\n","190:\tlearn: 0.9314473\ttotal: 252ms\tremaining: 144ms\n","191:\tlearn: 0.9305614\ttotal: 252ms\tremaining: 142ms\n","192:\tlearn: 0.9293376\ttotal: 253ms\tremaining: 140ms\n","193:\tlearn: 0.9281722\ttotal: 254ms\tremaining: 139ms\n","194:\tlearn: 0.9269869\ttotal: 254ms\tremaining: 137ms\n","195:\tlearn: 0.9259108\ttotal: 255ms\tremaining: 135ms\n","196:\tlearn: 0.9248491\ttotal: 268ms\tremaining: 140ms\n","197:\tlearn: 0.9237281\ttotal: 269ms\tremaining: 138ms\n","198:\tlearn: 0.9228508\ttotal: 269ms\tremaining: 137ms\n","199:\tlearn: 0.9218631\ttotal: 270ms\tremaining: 135ms\n","200:\tlearn: 0.9208635\ttotal: 272ms\tremaining: 134ms\n","201:\tlearn: 0.9199747\ttotal: 272ms\tremaining: 132ms\n","202:\tlearn: 0.9188309\ttotal: 273ms\tremaining: 130ms\n","203:\tlearn: 0.9178478\ttotal: 274ms\tremaining: 129ms\n","204:\tlearn: 0.9166835\ttotal: 277ms\tremaining: 128ms\n","205:\tlearn: 0.9155149\ttotal: 278ms\tremaining: 127ms\n","206:\tlearn: 0.9145033\ttotal: 278ms\tremaining: 125ms\n","207:\tlearn: 0.9132357\ttotal: 279ms\tremaining: 123ms\n","208:\tlearn: 0.9120656\ttotal: 280ms\tremaining: 122ms\n","209:\tlearn: 0.9108975\ttotal: 281ms\tremaining: 120ms\n","210:\tlearn: 0.9101510\ttotal: 281ms\tremaining: 119ms\n","211:\tlearn: 0.9089596\ttotal: 282ms\tremaining: 117ms\n","212:\tlearn: 0.9081221\ttotal: 282ms\tremaining: 115ms\n","213:\tlearn: 0.9073582\ttotal: 283ms\tremaining: 114ms\n","214:\tlearn: 0.9063603\ttotal: 283ms\tremaining: 112ms\n","215:\tlearn: 0.9053362\ttotal: 284ms\tremaining: 110ms\n","216:\tlearn: 0.9045409\ttotal: 284ms\tremaining: 109ms\n","217:\tlearn: 0.9038019\ttotal: 285ms\tremaining: 107ms\n","218:\tlearn: 0.9027290\ttotal: 286ms\tremaining: 106ms\n","219:\tlearn: 0.9016159\ttotal: 287ms\tremaining: 104ms\n","220:\tlearn: 0.9005631\ttotal: 287ms\tremaining: 103ms\n","221:\tlearn: 0.8997516\ttotal: 288ms\tremaining: 101ms\n","222:\tlearn: 0.8987201\ttotal: 289ms\tremaining: 99.8ms\n","223:\tlearn: 0.8981871\ttotal: 290ms\tremaining: 98.3ms\n","224:\tlearn: 0.8974366\ttotal: 290ms\tremaining: 96.8ms\n","225:\tlearn: 0.8968400\ttotal: 291ms\tremaining: 95.2ms\n","226:\tlearn: 0.8960777\ttotal: 291ms\tremaining: 93.7ms\n","227:\tlearn: 0.8952838\ttotal: 305ms\tremaining: 96.2ms\n","228:\tlearn: 0.8945446\ttotal: 305ms\tremaining: 94.6ms\n","229:\tlearn: 0.8937901\ttotal: 306ms\tremaining: 93.2ms\n","230:\tlearn: 0.8930679\ttotal: 307ms\tremaining: 91.7ms\n","231:\tlearn: 0.8923524\ttotal: 308ms\tremaining: 90.2ms\n","232:\tlearn: 0.8915332\ttotal: 308ms\tremaining: 88.6ms\n","233:\tlearn: 0.8908652\ttotal: 309ms\tremaining: 87.2ms\n","234:\tlearn: 0.8900147\ttotal: 310ms\tremaining: 85.7ms\n","235:\tlearn: 0.8893480\ttotal: 311ms\tremaining: 84.3ms\n","236:\tlearn: 0.8883768\ttotal: 312ms\tremaining: 82.9ms\n","237:\tlearn: 0.8879296\ttotal: 312ms\tremaining: 81.4ms\n","238:\tlearn: 0.8872324\ttotal: 318ms\tremaining: 81.2ms\n","239:\tlearn: 0.8861938\ttotal: 319ms\tremaining: 79.7ms\n","240:\tlearn: 0.8853936\ttotal: 319ms\tremaining: 78.2ms\n","241:\tlearn: 0.8844624\ttotal: 320ms\tremaining: 76.7ms\n","242:\tlearn: 0.8837065\ttotal: 321ms\tremaining: 75.2ms\n","243:\tlearn: 0.8832466\ttotal: 321ms\tremaining: 73.7ms\n","244:\tlearn: 0.8824562\ttotal: 322ms\tremaining: 72.3ms\n","245:\tlearn: 0.8816086\ttotal: 323ms\tremaining: 70.8ms\n","246:\tlearn: 0.8809562\ttotal: 326ms\tremaining: 69.9ms\n","247:\tlearn: 0.8802630\ttotal: 326ms\tremaining: 68.4ms\n","248:\tlearn: 0.8797929\ttotal: 327ms\tremaining: 66.9ms\n","249:\tlearn: 0.8791835\ttotal: 327ms\tremaining: 65.4ms\n","250:\tlearn: 0.8784972\ttotal: 328ms\tremaining: 64ms\n","251:\tlearn: 0.8779355\ttotal: 329ms\tremaining: 62.6ms\n","252:\tlearn: 0.8773247\ttotal: 329ms\tremaining: 61.2ms\n","253:\tlearn: 0.8766477\ttotal: 330ms\tremaining: 59.8ms\n","254:\tlearn: 0.8757998\ttotal: 330ms\tremaining: 58.3ms\n","255:\tlearn: 0.8750080\ttotal: 331ms\tremaining: 56.9ms\n","256:\tlearn: 0.8741934\ttotal: 332ms\tremaining: 55.5ms\n","257:\tlearn: 0.8731976\ttotal: 333ms\tremaining: 54.2ms\n","258:\tlearn: 0.8724128\ttotal: 334ms\tremaining: 52.8ms\n","259:\tlearn: 0.8717660\ttotal: 335ms\tremaining: 51.5ms\n","260:\tlearn: 0.8708187\ttotal: 335ms\tremaining: 50.1ms\n","261:\tlearn: 0.8701112\ttotal: 336ms\tremaining: 48.8ms\n","262:\tlearn: 0.8693723\ttotal: 337ms\tremaining: 47.4ms\n","263:\tlearn: 0.8687569\ttotal: 337ms\tremaining: 46ms\n","264:\tlearn: 0.8679282\ttotal: 338ms\tremaining: 44.6ms\n","265:\tlearn: 0.8673682\ttotal: 338ms\tremaining: 43.3ms\n","266:\tlearn: 0.8665576\ttotal: 339ms\tremaining: 41.9ms\n","267:\tlearn: 0.8657282\ttotal: 340ms\tremaining: 40.6ms\n","268:\tlearn: 0.8651543\ttotal: 341ms\tremaining: 39.3ms\n","269:\tlearn: 0.8647088\ttotal: 342ms\tremaining: 38ms\n","270:\tlearn: 0.8641118\ttotal: 343ms\tremaining: 36.7ms\n","271:\tlearn: 0.8636172\ttotal: 343ms\tremaining: 35.3ms\n","272:\tlearn: 0.8631528\ttotal: 344ms\tremaining: 34ms\n","273:\tlearn: 0.8626110\ttotal: 345ms\tremaining: 32.7ms\n","274:\tlearn: 0.8619048\ttotal: 345ms\tremaining: 31.4ms\n","275:\tlearn: 0.8613112\ttotal: 346ms\tremaining: 30.1ms\n","276:\tlearn: 0.8606167\ttotal: 347ms\tremaining: 28.8ms\n","277:\tlearn: 0.8598769\ttotal: 348ms\tremaining: 27.5ms\n","278:\tlearn: 0.8593838\ttotal: 349ms\tremaining: 26.3ms\n","279:\tlearn: 0.8586217\ttotal: 350ms\tremaining: 25ms\n","280:\tlearn: 0.8580675\ttotal: 350ms\tremaining: 23.7ms\n","281:\tlearn: 0.8576336\ttotal: 351ms\tremaining: 22.4ms\n","282:\tlearn: 0.8570347\ttotal: 352ms\tremaining: 21.1ms\n","283:\tlearn: 0.8564431\ttotal: 352ms\tremaining: 19.8ms\n","284:\tlearn: 0.8557337\ttotal: 353ms\tremaining: 18.6ms\n","285:\tlearn: 0.8551073\ttotal: 355ms\tremaining: 17.4ms\n","286:\tlearn: 0.8545841\ttotal: 356ms\tremaining: 16.1ms\n","287:\tlearn: 0.8537793\ttotal: 357ms\tremaining: 14.9ms\n","288:\tlearn: 0.8529960\ttotal: 357ms\tremaining: 13.6ms\n","289:\tlearn: 0.8522401\ttotal: 358ms\tremaining: 12.3ms\n","290:\tlearn: 0.8515378\ttotal: 359ms\tremaining: 11.1ms\n","291:\tlearn: 0.8508420\ttotal: 359ms\tremaining: 9.85ms\n","292:\tlearn: 0.8500485\ttotal: 360ms\tremaining: 8.6ms\n","293:\tlearn: 0.8492623\ttotal: 361ms\tremaining: 7.36ms\n","294:\tlearn: 0.8488015\ttotal: 361ms\tremaining: 6.12ms\n","295:\tlearn: 0.8483726\ttotal: 362ms\tremaining: 4.89ms\n","296:\tlearn: 0.8473926\ttotal: 363ms\tremaining: 3.67ms\n","297:\tlearn: 0.8467303\ttotal: 364ms\tremaining: 2.44ms\n","298:\tlearn: 0.8458613\ttotal: 364ms\tremaining: 1.22ms\n","299:\tlearn: 0.8452776\ttotal: 365ms\tremaining: 0us\n","0:\tlearn: 1.3857495\ttotal: 5.3ms\tremaining: 1.58s\n","1:\tlearn: 1.3851685\ttotal: 5.97ms\tremaining: 889ms\n","2:\tlearn: 1.3846632\ttotal: 7.69ms\tremaining: 761ms\n","3:\tlearn: 1.3842245\ttotal: 8.57ms\tremaining: 635ms\n","4:\tlearn: 1.3837846\ttotal: 10.5ms\tremaining: 621ms\n","5:\tlearn: 1.3832986\ttotal: 12.3ms\tremaining: 602ms\n","6:\tlearn: 1.3828003\ttotal: 13.6ms\tremaining: 570ms\n","7:\tlearn: 1.3823482\ttotal: 15.2ms\tremaining: 554ms\n","8:\tlearn: 1.3818552\ttotal: 17ms\tremaining: 548ms\n","9:\tlearn: 1.3813376\ttotal: 18.1ms\tremaining: 525ms\n","10:\tlearn: 1.3808131\ttotal: 19.7ms\tremaining: 519ms\n","11:\tlearn: 1.3802036\ttotal: 20.8ms\tremaining: 498ms\n","12:\tlearn: 1.3796307\ttotal: 21.8ms\tremaining: 481ms\n","13:\tlearn: 1.3791877\ttotal: 23.9ms\tremaining: 489ms\n","14:\tlearn: 1.3786252\ttotal: 25.8ms\tremaining: 490ms\n","15:\tlearn: 1.3780410\ttotal: 27.4ms\tremaining: 486ms\n","16:\tlearn: 1.3774744\ttotal: 29.9ms\tremaining: 498ms\n","17:\tlearn: 1.3769542\ttotal: 31.2ms\tremaining: 489ms\n","18:\tlearn: 1.3764604\ttotal: 31.7ms\tremaining: 469ms\n","19:\tlearn: 1.3759452\ttotal: 32.9ms\tremaining: 461ms\n","20:\tlearn: 1.3753543\ttotal: 34.4ms\tremaining: 458ms\n","21:\tlearn: 1.3748625\ttotal: 35.6ms\tremaining: 450ms\n","22:\tlearn: 1.3742945\ttotal: 37.3ms\tremaining: 450ms\n","23:\tlearn: 1.3738169\ttotal: 39.2ms\tremaining: 451ms\n","24:\tlearn: 1.3733519\ttotal: 41ms\tremaining: 451ms\n","25:\tlearn: 1.3728688\ttotal: 42.7ms\tremaining: 450ms\n","26:\tlearn: 1.3723718\ttotal: 43.9ms\tremaining: 444ms\n","27:\tlearn: 1.3718720\ttotal: 45.5ms\tremaining: 442ms\n","28:\tlearn: 1.3712630\ttotal: 47.3ms\tremaining: 442ms\n","29:\tlearn: 1.3708044\ttotal: 49.1ms\tremaining: 442ms\n","30:\tlearn: 1.3703033\ttotal: 50.9ms\tremaining: 442ms\n","31:\tlearn: 1.3697603\ttotal: 52.4ms\tremaining: 439ms\n","32:\tlearn: 1.3692149\ttotal: 53.5ms\tremaining: 433ms\n","33:\tlearn: 1.3687075\ttotal: 54.6ms\tremaining: 427ms\n","34:\tlearn: 1.3681612\ttotal: 56.5ms\tremaining: 428ms\n","35:\tlearn: 1.3676155\ttotal: 58.4ms\tremaining: 428ms\n","36:\tlearn: 1.3671413\ttotal: 60.1ms\tremaining: 427ms\n","37:\tlearn: 1.3666472\ttotal: 62ms\tremaining: 427ms\n","38:\tlearn: 1.3661251\ttotal: 63ms\tremaining: 422ms\n","39:\tlearn: 1.3656247\ttotal: 63.4ms\tremaining: 412ms\n","40:\tlearn: 1.3651484\ttotal: 64.6ms\tremaining: 408ms\n","41:\tlearn: 1.3645788\ttotal: 66.3ms\tremaining: 407ms\n","42:\tlearn: 1.3641268\ttotal: 67.6ms\tremaining: 404ms\n","43:\tlearn: 1.3636083\ttotal: 68.5ms\tremaining: 399ms\n","44:\tlearn: 1.3630903\ttotal: 69.6ms\tremaining: 394ms\n","45:\tlearn: 1.3626079\ttotal: 71.4ms\tremaining: 394ms\n","46:\tlearn: 1.3621168\ttotal: 72.7ms\tremaining: 391ms\n","47:\tlearn: 1.3616187\ttotal: 74.1ms\tremaining: 389ms\n","48:\tlearn: 1.3610793\ttotal: 76ms\tremaining: 389ms\n","49:\tlearn: 1.3606419\ttotal: 77.7ms\tremaining: 389ms\n","50:\tlearn: 1.3600332\ttotal: 79ms\tremaining: 385ms\n","51:\tlearn: 1.3595802\ttotal: 80ms\tremaining: 382ms\n","52:\tlearn: 1.3590493\ttotal: 82.1ms\tremaining: 382ms\n","53:\tlearn: 1.3586312\ttotal: 84ms\tremaining: 383ms\n","54:\tlearn: 1.3580753\ttotal: 85.2ms\tremaining: 379ms\n","55:\tlearn: 1.3574996\ttotal: 86.2ms\tremaining: 376ms\n","56:\tlearn: 1.3570498\ttotal: 87.9ms\tremaining: 375ms\n","57:\tlearn: 1.3566078\ttotal: 89.4ms\tremaining: 373ms\n","58:\tlearn: 1.3561414\ttotal: 91ms\tremaining: 372ms\n","59:\tlearn: 1.3556704\ttotal: 92.9ms\tremaining: 372ms\n","60:\tlearn: 1.3552351\ttotal: 96.5ms\tremaining: 378ms\n","61:\tlearn: 1.3547468\ttotal: 96.9ms\tremaining: 372ms\n","62:\tlearn: 1.3542740\ttotal: 98.1ms\tremaining: 369ms\n","63:\tlearn: 1.3538243\ttotal: 106ms\tremaining: 389ms\n","64:\tlearn: 1.3533232\ttotal: 107ms\tremaining: 386ms\n","65:\tlearn: 1.3528577\ttotal: 110ms\tremaining: 390ms\n","66:\tlearn: 1.3524074\ttotal: 113ms\tremaining: 393ms\n","67:\tlearn: 1.3518542\ttotal: 121ms\tremaining: 414ms\n","68:\tlearn: 1.3514271\ttotal: 125ms\tremaining: 417ms\n","69:\tlearn: 1.3509136\ttotal: 128ms\tremaining: 421ms\n","70:\tlearn: 1.3504037\ttotal: 132ms\tremaining: 427ms\n","71:\tlearn: 1.3498779\ttotal: 136ms\tremaining: 431ms\n","72:\tlearn: 1.3493748\ttotal: 143ms\tremaining: 446ms\n","73:\tlearn: 1.3489126\ttotal: 145ms\tremaining: 443ms\n","74:\tlearn: 1.3484379\ttotal: 147ms\tremaining: 442ms\n","75:\tlearn: 1.3479512\ttotal: 151ms\tremaining: 444ms\n","76:\tlearn: 1.3474441\ttotal: 153ms\tremaining: 442ms\n","77:\tlearn: 1.3469566\ttotal: 155ms\tremaining: 440ms\n","78:\tlearn: 1.3465253\ttotal: 156ms\tremaining: 437ms\n","79:\tlearn: 1.3461627\ttotal: 158ms\tremaining: 435ms\n","80:\tlearn: 1.3456729\ttotal: 160ms\tremaining: 432ms\n","81:\tlearn: 1.3451960\ttotal: 162ms\tremaining: 430ms\n","82:\tlearn: 1.3446999\ttotal: 164ms\tremaining: 428ms\n","83:\tlearn: 1.3442549\ttotal: 165ms\tremaining: 425ms\n","84:\tlearn: 1.3437645\ttotal: 167ms\tremaining: 422ms\n","85:\tlearn: 1.3434082\ttotal: 169ms\tremaining: 420ms\n","86:\tlearn: 1.3429419\ttotal: 170ms\tremaining: 417ms\n","87:\tlearn: 1.3424432\ttotal: 172ms\tremaining: 414ms\n","88:\tlearn: 1.3419913\ttotal: 174ms\tremaining: 412ms\n","89:\tlearn: 1.3415582\ttotal: 176ms\tremaining: 410ms\n","90:\tlearn: 1.3410797\ttotal: 177ms\tremaining: 406ms\n","91:\tlearn: 1.3405757\ttotal: 178ms\tremaining: 402ms\n","92:\tlearn: 1.3400507\ttotal: 179ms\tremaining: 399ms\n","93:\tlearn: 1.3395984\ttotal: 181ms\tremaining: 396ms\n","94:\tlearn: 1.3391086\ttotal: 183ms\tremaining: 395ms\n","95:\tlearn: 1.3387032\ttotal: 185ms\tremaining: 393ms\n","96:\tlearn: 1.3381948\ttotal: 187ms\tremaining: 391ms\n","97:\tlearn: 1.3375647\ttotal: 189ms\tremaining: 389ms\n","98:\tlearn: 1.3371201\ttotal: 190ms\tremaining: 387ms\n","99:\tlearn: 1.3366667\ttotal: 192ms\tremaining: 384ms\n","100:\tlearn: 1.3361544\ttotal: 193ms\tremaining: 380ms\n","101:\tlearn: 1.3355848\ttotal: 195ms\tremaining: 378ms\n","102:\tlearn: 1.3351271\ttotal: 197ms\tremaining: 376ms\n","103:\tlearn: 1.3346977\ttotal: 198ms\tremaining: 372ms\n","104:\tlearn: 1.3342859\ttotal: 199ms\tremaining: 369ms\n","105:\tlearn: 1.3338383\ttotal: 202ms\tremaining: 370ms\n","106:\tlearn: 1.3334207\ttotal: 204ms\tremaining: 368ms\n","107:\tlearn: 1.3329324\ttotal: 206ms\tremaining: 366ms\n","108:\tlearn: 1.3323730\ttotal: 207ms\tremaining: 363ms\n","109:\tlearn: 1.3318972\ttotal: 209ms\tremaining: 360ms\n","110:\tlearn: 1.3314705\ttotal: 210ms\tremaining: 358ms\n","111:\tlearn: 1.3310457\ttotal: 212ms\tremaining: 355ms\n","112:\tlearn: 1.3305353\ttotal: 214ms\tremaining: 354ms\n","113:\tlearn: 1.3301169\ttotal: 215ms\tremaining: 352ms\n","114:\tlearn: 1.3296220\ttotal: 222ms\tremaining: 357ms\n","115:\tlearn: 1.3292245\ttotal: 224ms\tremaining: 355ms\n","116:\tlearn: 1.3287887\ttotal: 225ms\tremaining: 353ms\n","117:\tlearn: 1.3284155\ttotal: 227ms\tremaining: 351ms\n","118:\tlearn: 1.3279363\ttotal: 229ms\tremaining: 349ms\n","119:\tlearn: 1.3275056\ttotal: 231ms\tremaining: 346ms\n","120:\tlearn: 1.3271115\ttotal: 233ms\tremaining: 344ms\n","121:\tlearn: 1.3266672\ttotal: 235ms\tremaining: 342ms\n","122:\tlearn: 1.3261696\ttotal: 236ms\tremaining: 340ms\n","123:\tlearn: 1.3257248\ttotal: 238ms\tremaining: 337ms\n","124:\tlearn: 1.3252326\ttotal: 239ms\tremaining: 334ms\n","125:\tlearn: 1.3247352\ttotal: 240ms\tremaining: 331ms\n","126:\tlearn: 1.3242119\ttotal: 241ms\tremaining: 328ms\n","127:\tlearn: 1.3237165\ttotal: 242ms\tremaining: 325ms\n","128:\tlearn: 1.3232268\ttotal: 243ms\tremaining: 322ms\n","129:\tlearn: 1.3227147\ttotal: 245ms\tremaining: 320ms\n","130:\tlearn: 1.3223045\ttotal: 245ms\tremaining: 316ms\n","131:\tlearn: 1.3218439\ttotal: 247ms\tremaining: 314ms\n","132:\tlearn: 1.3212978\ttotal: 248ms\tremaining: 312ms\n","133:\tlearn: 1.3208679\ttotal: 250ms\tremaining: 309ms\n","134:\tlearn: 1.3203833\ttotal: 252ms\tremaining: 308ms\n","135:\tlearn: 1.3198757\ttotal: 253ms\tremaining: 306ms\n","136:\tlearn: 1.3194564\ttotal: 258ms\tremaining: 306ms\n","137:\tlearn: 1.3190228\ttotal: 260ms\tremaining: 305ms\n","138:\tlearn: 1.3184820\ttotal: 261ms\tremaining: 302ms\n","139:\tlearn: 1.3179414\ttotal: 262ms\tremaining: 300ms\n","140:\tlearn: 1.3176050\ttotal: 264ms\tremaining: 298ms\n","141:\tlearn: 1.3172778\ttotal: 266ms\tremaining: 296ms\n","142:\tlearn: 1.3168511\ttotal: 268ms\tremaining: 294ms\n","143:\tlearn: 1.3164130\ttotal: 269ms\tremaining: 291ms\n","144:\tlearn: 1.3159770\ttotal: 270ms\tremaining: 288ms\n","145:\tlearn: 1.3154816\ttotal: 272ms\tremaining: 287ms\n","146:\tlearn: 1.3149803\ttotal: 273ms\tremaining: 284ms\n","147:\tlearn: 1.3144986\ttotal: 274ms\tremaining: 282ms\n","148:\tlearn: 1.3140300\ttotal: 277ms\tremaining: 281ms\n","149:\tlearn: 1.3136087\ttotal: 278ms\tremaining: 278ms\n","150:\tlearn: 1.3132119\ttotal: 280ms\tremaining: 276ms\n","151:\tlearn: 1.3128005\ttotal: 282ms\tremaining: 275ms\n","152:\tlearn: 1.3123423\ttotal: 284ms\tremaining: 273ms\n","153:\tlearn: 1.3119246\ttotal: 286ms\tremaining: 271ms\n","154:\tlearn: 1.3114759\ttotal: 288ms\tremaining: 270ms\n","155:\tlearn: 1.3110081\ttotal: 290ms\tremaining: 268ms\n","156:\tlearn: 1.3105579\ttotal: 292ms\tremaining: 266ms\n","157:\tlearn: 1.3101396\ttotal: 293ms\tremaining: 264ms\n","158:\tlearn: 1.3097270\ttotal: 294ms\tremaining: 261ms\n","159:\tlearn: 1.3092820\ttotal: 296ms\tremaining: 259ms\n","160:\tlearn: 1.3088303\ttotal: 298ms\tremaining: 257ms\n","161:\tlearn: 1.3084413\ttotal: 299ms\tremaining: 255ms\n","162:\tlearn: 1.3079347\ttotal: 301ms\tremaining: 253ms\n","163:\tlearn: 1.3074636\ttotal: 303ms\tremaining: 251ms\n","164:\tlearn: 1.3069645\ttotal: 304ms\tremaining: 249ms\n","165:\tlearn: 1.3065978\ttotal: 305ms\tremaining: 246ms\n","166:\tlearn: 1.3061256\ttotal: 307ms\tremaining: 244ms\n","167:\tlearn: 1.3055817\ttotal: 309ms\tremaining: 242ms\n","168:\tlearn: 1.3051141\ttotal: 310ms\tremaining: 240ms\n","169:\tlearn: 1.3046794\ttotal: 312ms\tremaining: 238ms\n","170:\tlearn: 1.3042308\ttotal: 313ms\tremaining: 236ms\n","171:\tlearn: 1.3037901\ttotal: 314ms\tremaining: 234ms\n","172:\tlearn: 1.3033416\ttotal: 317ms\tremaining: 233ms\n","173:\tlearn: 1.3029375\ttotal: 318ms\tremaining: 230ms\n","174:\tlearn: 1.3025571\ttotal: 320ms\tremaining: 229ms\n","175:\tlearn: 1.3020424\ttotal: 323ms\tremaining: 227ms\n","176:\tlearn: 1.3016124\ttotal: 323ms\tremaining: 225ms\n","177:\tlearn: 1.3011433\ttotal: 325ms\tremaining: 222ms\n","178:\tlearn: 1.3007562\ttotal: 326ms\tremaining: 221ms\n","179:\tlearn: 1.3002470\ttotal: 328ms\tremaining: 219ms\n","180:\tlearn: 1.2999121\ttotal: 330ms\tremaining: 217ms\n","181:\tlearn: 1.2994949\ttotal: 331ms\tremaining: 215ms\n","182:\tlearn: 1.2990682\ttotal: 332ms\tremaining: 212ms\n","183:\tlearn: 1.2986462\ttotal: 333ms\tremaining: 210ms\n","184:\tlearn: 1.2981536\ttotal: 334ms\tremaining: 208ms\n","185:\tlearn: 1.2977309\ttotal: 337ms\tremaining: 206ms\n","186:\tlearn: 1.2973134\ttotal: 339ms\tremaining: 205ms\n","187:\tlearn: 1.2968381\ttotal: 340ms\tremaining: 202ms\n","188:\tlearn: 1.2963673\ttotal: 341ms\tremaining: 200ms\n","189:\tlearn: 1.2959138\ttotal: 342ms\tremaining: 198ms\n","190:\tlearn: 1.2955750\ttotal: 344ms\tremaining: 196ms\n","191:\tlearn: 1.2951691\ttotal: 346ms\tremaining: 195ms\n","192:\tlearn: 1.2947299\ttotal: 361ms\tremaining: 200ms\n","193:\tlearn: 1.2943103\ttotal: 363ms\tremaining: 198ms\n","194:\tlearn: 1.2938596\ttotal: 365ms\tremaining: 197ms\n","195:\tlearn: 1.2934720\ttotal: 367ms\tremaining: 195ms\n","196:\tlearn: 1.2931375\ttotal: 369ms\tremaining: 193ms\n","197:\tlearn: 1.2927395\ttotal: 370ms\tremaining: 191ms\n","198:\tlearn: 1.2922993\ttotal: 372ms\tremaining: 189ms\n","199:\tlearn: 1.2918974\ttotal: 374ms\tremaining: 187ms\n","200:\tlearn: 1.2914967\ttotal: 375ms\tremaining: 185ms\n","201:\tlearn: 1.2910694\ttotal: 376ms\tremaining: 183ms\n","202:\tlearn: 1.2906640\ttotal: 378ms\tremaining: 181ms\n","203:\tlearn: 1.2902440\ttotal: 380ms\tremaining: 179ms\n","204:\tlearn: 1.2898270\ttotal: 382ms\tremaining: 177ms\n","205:\tlearn: 1.2892901\ttotal: 384ms\tremaining: 175ms\n","206:\tlearn: 1.2889117\ttotal: 386ms\tremaining: 173ms\n","207:\tlearn: 1.2885228\ttotal: 388ms\tremaining: 172ms\n","208:\tlearn: 1.2881075\ttotal: 390ms\tremaining: 170ms\n","209:\tlearn: 1.2875077\ttotal: 391ms\tremaining: 168ms\n","210:\tlearn: 1.2870666\ttotal: 393ms\tremaining: 166ms\n","211:\tlearn: 1.2866933\ttotal: 395ms\tremaining: 164ms\n","212:\tlearn: 1.2862905\ttotal: 397ms\tremaining: 162ms\n","213:\tlearn: 1.2858156\ttotal: 398ms\tremaining: 160ms\n","214:\tlearn: 1.2853995\ttotal: 399ms\tremaining: 158ms\n","215:\tlearn: 1.2848635\ttotal: 400ms\tremaining: 155ms\n","216:\tlearn: 1.2844422\ttotal: 402ms\tremaining: 154ms\n","217:\tlearn: 1.2840090\ttotal: 403ms\tremaining: 152ms\n","218:\tlearn: 1.2835601\ttotal: 405ms\tremaining: 150ms\n","219:\tlearn: 1.2831686\ttotal: 406ms\tremaining: 148ms\n","220:\tlearn: 1.2826737\ttotal: 408ms\tremaining: 146ms\n","221:\tlearn: 1.2822360\ttotal: 413ms\tremaining: 145ms\n","222:\tlearn: 1.2818933\ttotal: 421ms\tremaining: 145ms\n","223:\tlearn: 1.2814869\ttotal: 426ms\tremaining: 144ms\n","224:\tlearn: 1.2810883\ttotal: 427ms\tremaining: 142ms\n","225:\tlearn: 1.2807443\ttotal: 439ms\tremaining: 144ms\n","226:\tlearn: 1.2804283\ttotal: 455ms\tremaining: 146ms\n","227:\tlearn: 1.2799930\ttotal: 456ms\tremaining: 144ms\n","228:\tlearn: 1.2796243\ttotal: 457ms\tremaining: 142ms\n","229:\tlearn: 1.2792292\ttotal: 458ms\tremaining: 139ms\n","230:\tlearn: 1.2787573\ttotal: 459ms\tremaining: 137ms\n","231:\tlearn: 1.2784225\ttotal: 468ms\tremaining: 137ms\n","232:\tlearn: 1.2779549\ttotal: 469ms\tremaining: 135ms\n","233:\tlearn: 1.2775186\ttotal: 471ms\tremaining: 133ms\n","234:\tlearn: 1.2771380\ttotal: 477ms\tremaining: 132ms\n","235:\tlearn: 1.2766574\ttotal: 477ms\tremaining: 129ms\n","236:\tlearn: 1.2763192\ttotal: 478ms\tremaining: 127ms\n","237:\tlearn: 1.2759583\ttotal: 479ms\tremaining: 125ms\n","238:\tlearn: 1.2755370\ttotal: 479ms\tremaining: 122ms\n","239:\tlearn: 1.2752014\ttotal: 480ms\tremaining: 120ms\n","240:\tlearn: 1.2747977\ttotal: 481ms\tremaining: 118ms\n","241:\tlearn: 1.2743594\ttotal: 481ms\tremaining: 115ms\n","242:\tlearn: 1.2739750\ttotal: 485ms\tremaining: 114ms\n","243:\tlearn: 1.2735837\ttotal: 485ms\tremaining: 111ms\n","244:\tlearn: 1.2732721\ttotal: 486ms\tremaining: 109ms\n","245:\tlearn: 1.2729208\ttotal: 487ms\tremaining: 107ms\n","246:\tlearn: 1.2724887\ttotal: 487ms\tremaining: 105ms\n","247:\tlearn: 1.2721440\ttotal: 488ms\tremaining: 102ms\n","248:\tlearn: 1.2717708\ttotal: 489ms\tremaining: 100ms\n","249:\tlearn: 1.2713384\ttotal: 489ms\tremaining: 97.8ms\n","250:\tlearn: 1.2709399\ttotal: 490ms\tremaining: 95.6ms\n","251:\tlearn: 1.2705627\ttotal: 490ms\tremaining: 93.4ms\n","252:\tlearn: 1.2701934\ttotal: 491ms\tremaining: 91.2ms\n","253:\tlearn: 1.2697985\ttotal: 492ms\tremaining: 89.1ms\n","254:\tlearn: 1.2694109\ttotal: 493ms\tremaining: 86.9ms\n","255:\tlearn: 1.2689393\ttotal: 494ms\tremaining: 84.8ms\n","256:\tlearn: 1.2685804\ttotal: 494ms\tremaining: 82.7ms\n","257:\tlearn: 1.2681200\ttotal: 495ms\tremaining: 80.6ms\n","258:\tlearn: 1.2677671\ttotal: 495ms\tremaining: 78.4ms\n","259:\tlearn: 1.2673787\ttotal: 496ms\tremaining: 76.3ms\n","260:\tlearn: 1.2669741\ttotal: 497ms\tremaining: 74.2ms\n","261:\tlearn: 1.2665552\ttotal: 497ms\tremaining: 72.1ms\n","262:\tlearn: 1.2661551\ttotal: 498ms\tremaining: 70ms\n","263:\tlearn: 1.2657637\ttotal: 498ms\tremaining: 68ms\n","264:\tlearn: 1.2653803\ttotal: 499ms\tremaining: 65.9ms\n","265:\tlearn: 1.2650357\ttotal: 500ms\tremaining: 63.9ms\n","266:\tlearn: 1.2646956\ttotal: 501ms\tremaining: 61.9ms\n","267:\tlearn: 1.2642442\ttotal: 501ms\tremaining: 59.8ms\n","268:\tlearn: 1.2638427\ttotal: 502ms\tremaining: 57.8ms\n","269:\tlearn: 1.2634683\ttotal: 502ms\tremaining: 55.8ms\n","270:\tlearn: 1.2630588\ttotal: 503ms\tremaining: 53.8ms\n","271:\tlearn: 1.2626808\ttotal: 503ms\tremaining: 51.8ms\n","272:\tlearn: 1.2622645\ttotal: 504ms\tremaining: 49.9ms\n","273:\tlearn: 1.2619029\ttotal: 505ms\tremaining: 47.9ms\n","274:\tlearn: 1.2615246\ttotal: 505ms\tremaining: 46ms\n","275:\tlearn: 1.2611573\ttotal: 506ms\tremaining: 44ms\n","276:\tlearn: 1.2607660\ttotal: 507ms\tremaining: 42.1ms\n","277:\tlearn: 1.2603221\ttotal: 507ms\tremaining: 40.1ms\n","278:\tlearn: 1.2599887\ttotal: 508ms\tremaining: 38.2ms\n","279:\tlearn: 1.2595721\ttotal: 509ms\tremaining: 36.3ms\n","280:\tlearn: 1.2591165\ttotal: 509ms\tremaining: 34.4ms\n","281:\tlearn: 1.2586122\ttotal: 509ms\tremaining: 32.5ms\n","282:\tlearn: 1.2582212\ttotal: 510ms\tremaining: 30.6ms\n","283:\tlearn: 1.2578294\ttotal: 511ms\tremaining: 28.8ms\n","284:\tlearn: 1.2574907\ttotal: 511ms\tremaining: 26.9ms\n","285:\tlearn: 1.2572135\ttotal: 512ms\tremaining: 25.1ms\n","286:\tlearn: 1.2568005\ttotal: 513ms\tremaining: 23.2ms\n","287:\tlearn: 1.2564885\ttotal: 513ms\tremaining: 21.4ms\n","288:\tlearn: 1.2560961\ttotal: 514ms\tremaining: 19.6ms\n","289:\tlearn: 1.2557045\ttotal: 515ms\tremaining: 17.7ms\n","290:\tlearn: 1.2553318\ttotal: 516ms\tremaining: 15.9ms\n","291:\tlearn: 1.2549380\ttotal: 532ms\tremaining: 14.6ms\n","292:\tlearn: 1.2545953\ttotal: 532ms\tremaining: 12.7ms\n","293:\tlearn: 1.2541418\ttotal: 533ms\tremaining: 10.9ms\n","294:\tlearn: 1.2537298\ttotal: 538ms\tremaining: 9.13ms\n","295:\tlearn: 1.2533985\ttotal: 539ms\tremaining: 7.28ms\n","296:\tlearn: 1.2530847\ttotal: 540ms\tremaining: 5.45ms\n","297:\tlearn: 1.2527691\ttotal: 540ms\tremaining: 3.63ms\n","298:\tlearn: 1.2523987\ttotal: 540ms\tremaining: 1.81ms\n","299:\tlearn: 1.2519933\ttotal: 541ms\tremaining: 0us\n","0:\tlearn: 1.3857713\ttotal: 964us\tremaining: 288ms\n","1:\tlearn: 1.3852068\ttotal: 2.21ms\tremaining: 330ms\n","2:\tlearn: 1.3847047\ttotal: 3.26ms\tremaining: 323ms\n","3:\tlearn: 1.3841893\ttotal: 3.49ms\tremaining: 258ms\n","4:\tlearn: 1.3837075\ttotal: 4.16ms\tremaining: 246ms\n","5:\tlearn: 1.3831044\ttotal: 4.46ms\tremaining: 218ms\n","6:\tlearn: 1.3826204\ttotal: 5.09ms\tremaining: 213ms\n","7:\tlearn: 1.3821045\ttotal: 5.54ms\tremaining: 202ms\n","8:\tlearn: 1.3815272\ttotal: 5.97ms\tremaining: 193ms\n","9:\tlearn: 1.3810380\ttotal: 6.7ms\tremaining: 194ms\n","10:\tlearn: 1.3805614\ttotal: 8.7ms\tremaining: 229ms\n","11:\tlearn: 1.3800673\ttotal: 9.63ms\tremaining: 231ms\n","12:\tlearn: 1.3795985\ttotal: 10.3ms\tremaining: 227ms\n","13:\tlearn: 1.3790345\ttotal: 11.2ms\tremaining: 229ms\n","14:\tlearn: 1.3784717\ttotal: 12.2ms\tremaining: 231ms\n","15:\tlearn: 1.3780486\ttotal: 13ms\tremaining: 230ms\n","16:\tlearn: 1.3775333\ttotal: 13.4ms\tremaining: 222ms\n","17:\tlearn: 1.3769510\ttotal: 13.7ms\tremaining: 214ms\n","18:\tlearn: 1.3764630\ttotal: 14.3ms\tremaining: 212ms\n","19:\tlearn: 1.3760094\ttotal: 14.6ms\tremaining: 205ms\n","20:\tlearn: 1.3753863\ttotal: 15.3ms\tremaining: 203ms\n","21:\tlearn: 1.3748719\ttotal: 15.7ms\tremaining: 198ms\n","22:\tlearn: 1.3743618\ttotal: 16.3ms\tremaining: 197ms\n","23:\tlearn: 1.3738535\ttotal: 17ms\tremaining: 195ms\n","24:\tlearn: 1.3733527\ttotal: 17.6ms\tremaining: 194ms\n","25:\tlearn: 1.3728620\ttotal: 18.3ms\tremaining: 192ms\n","26:\tlearn: 1.3723953\ttotal: 18.9ms\tremaining: 191ms\n","27:\tlearn: 1.3719094\ttotal: 19.3ms\tremaining: 187ms\n","28:\tlearn: 1.3714225\ttotal: 20.2ms\tremaining: 189ms\n","29:\tlearn: 1.3708617\ttotal: 20.8ms\tremaining: 187ms\n","30:\tlearn: 1.3704113\ttotal: 21.9ms\tremaining: 190ms\n","31:\tlearn: 1.3698904\ttotal: 22.2ms\tremaining: 186ms\n","32:\tlearn: 1.3694242\ttotal: 22.9ms\tremaining: 185ms\n","33:\tlearn: 1.3688766\ttotal: 23.5ms\tremaining: 184ms\n","34:\tlearn: 1.3682948\ttotal: 24.2ms\tremaining: 183ms\n","35:\tlearn: 1.3677702\ttotal: 24.9ms\tremaining: 182ms\n","36:\tlearn: 1.3672658\ttotal: 25.5ms\tremaining: 181ms\n","37:\tlearn: 1.3667901\ttotal: 26.2ms\tremaining: 180ms\n","38:\tlearn: 1.3663742\ttotal: 26.8ms\tremaining: 179ms\n","39:\tlearn: 1.3658370\ttotal: 27.7ms\tremaining: 180ms\n","40:\tlearn: 1.3653964\ttotal: 28.4ms\tremaining: 180ms\n","41:\tlearn: 1.3649337\ttotal: 29.2ms\tremaining: 179ms\n","42:\tlearn: 1.3643837\ttotal: 29.9ms\tremaining: 179ms\n","43:\tlearn: 1.3639477\ttotal: 30.5ms\tremaining: 178ms\n","44:\tlearn: 1.3634304\ttotal: 31.2ms\tremaining: 177ms\n","45:\tlearn: 1.3629415\ttotal: 31.8ms\tremaining: 176ms\n","46:\tlearn: 1.3624972\ttotal: 32.4ms\tremaining: 175ms\n","47:\tlearn: 1.3620461\ttotal: 33ms\tremaining: 173ms\n","48:\tlearn: 1.3614958\ttotal: 33.7ms\tremaining: 172ms\n","49:\tlearn: 1.3610143\ttotal: 34.3ms\tremaining: 171ms\n","50:\tlearn: 1.3605261\ttotal: 34.9ms\tremaining: 171ms\n","51:\tlearn: 1.3600815\ttotal: 35.6ms\tremaining: 170ms\n","52:\tlearn: 1.3595237\ttotal: 36.5ms\tremaining: 170ms\n","53:\tlearn: 1.3589723\ttotal: 37.5ms\tremaining: 171ms\n","54:\tlearn: 1.3584273\ttotal: 37.7ms\tremaining: 168ms\n","55:\tlearn: 1.3578903\ttotal: 38.5ms\tremaining: 168ms\n","56:\tlearn: 1.3573322\ttotal: 38.9ms\tremaining: 166ms\n","57:\tlearn: 1.3568374\ttotal: 39.1ms\tremaining: 163ms\n","58:\tlearn: 1.3563132\ttotal: 39.5ms\tremaining: 161ms\n","59:\tlearn: 1.3558677\ttotal: 40.1ms\tremaining: 161ms\n","60:\tlearn: 1.3553227\ttotal: 40.9ms\tremaining: 160ms\n","61:\tlearn: 1.3548555\ttotal: 41.5ms\tremaining: 159ms\n","62:\tlearn: 1.3543758\ttotal: 42.5ms\tremaining: 160ms\n","63:\tlearn: 1.3537972\ttotal: 43.4ms\tremaining: 160ms\n","64:\tlearn: 1.3533267\ttotal: 43.8ms\tremaining: 158ms\n","65:\tlearn: 1.3527942\ttotal: 44.3ms\tremaining: 157ms\n","66:\tlearn: 1.3523157\ttotal: 44.9ms\tremaining: 156ms\n","67:\tlearn: 1.3519265\ttotal: 45.6ms\tremaining: 155ms\n","68:\tlearn: 1.3514491\ttotal: 46.2ms\tremaining: 155ms\n","69:\tlearn: 1.3509806\ttotal: 46.8ms\tremaining: 154ms\n","70:\tlearn: 1.3505276\ttotal: 47.5ms\tremaining: 153ms\n","71:\tlearn: 1.3500611\ttotal: 48.1ms\tremaining: 152ms\n","72:\tlearn: 1.3496272\ttotal: 53.4ms\tremaining: 166ms\n","73:\tlearn: 1.3491369\ttotal: 54ms\tremaining: 165ms\n","74:\tlearn: 1.3486822\ttotal: 54.6ms\tremaining: 164ms\n","75:\tlearn: 1.3482446\ttotal: 55.3ms\tremaining: 163ms\n","76:\tlearn: 1.3478406\ttotal: 55.9ms\tremaining: 162ms\n","77:\tlearn: 1.3473797\ttotal: 56.6ms\tremaining: 161ms\n","78:\tlearn: 1.3469481\ttotal: 57.2ms\tremaining: 160ms\n","79:\tlearn: 1.3464252\ttotal: 57.8ms\tremaining: 159ms\n","80:\tlearn: 1.3459438\ttotal: 58.5ms\tremaining: 158ms\n","81:\tlearn: 1.3453988\ttotal: 59.2ms\tremaining: 157ms\n","82:\tlearn: 1.3449122\ttotal: 59.8ms\tremaining: 156ms\n","83:\tlearn: 1.3444663\ttotal: 60.7ms\tremaining: 156ms\n","84:\tlearn: 1.3439281\ttotal: 61.6ms\tremaining: 156ms\n","85:\tlearn: 1.3434814\ttotal: 62.5ms\tremaining: 155ms\n","86:\tlearn: 1.3430078\ttotal: 63.1ms\tremaining: 155ms\n","87:\tlearn: 1.3425468\ttotal: 63.8ms\tremaining: 154ms\n","88:\tlearn: 1.3420631\ttotal: 64.2ms\tremaining: 152ms\n","89:\tlearn: 1.3416013\ttotal: 64.8ms\tremaining: 151ms\n","90:\tlearn: 1.3410570\ttotal: 65.4ms\tremaining: 150ms\n","91:\tlearn: 1.3405918\ttotal: 66ms\tremaining: 149ms\n","92:\tlearn: 1.3401003\ttotal: 66.6ms\tremaining: 148ms\n","93:\tlearn: 1.3396000\ttotal: 66.9ms\tremaining: 147ms\n","94:\tlearn: 1.3391769\ttotal: 67.5ms\tremaining: 146ms\n","95:\tlearn: 1.3386467\ttotal: 68.3ms\tremaining: 145ms\n","96:\tlearn: 1.3381646\ttotal: 68.9ms\tremaining: 144ms\n","97:\tlearn: 1.3377248\ttotal: 69.8ms\tremaining: 144ms\n","98:\tlearn: 1.3372622\ttotal: 70.8ms\tremaining: 144ms\n","99:\tlearn: 1.3367269\ttotal: 71.3ms\tremaining: 143ms\n","100:\tlearn: 1.3362851\ttotal: 72ms\tremaining: 142ms\n","101:\tlearn: 1.3358380\ttotal: 72.6ms\tremaining: 141ms\n","102:\tlearn: 1.3353454\ttotal: 73ms\tremaining: 140ms\n","103:\tlearn: 1.3347739\ttotal: 73.3ms\tremaining: 138ms\n","104:\tlearn: 1.3343133\ttotal: 74ms\tremaining: 137ms\n","105:\tlearn: 1.3337505\ttotal: 74.2ms\tremaining: 136ms\n","106:\tlearn: 1.3332483\ttotal: 76.7ms\tremaining: 138ms\n","107:\tlearn: 1.3327805\ttotal: 77.3ms\tremaining: 137ms\n","108:\tlearn: 1.3323504\ttotal: 78.3ms\tremaining: 137ms\n","109:\tlearn: 1.3318995\ttotal: 78.7ms\tremaining: 136ms\n","110:\tlearn: 1.3314291\ttotal: 79.6ms\tremaining: 136ms\n","111:\tlearn: 1.3309558\ttotal: 80.4ms\tremaining: 135ms\n","112:\tlearn: 1.3305105\ttotal: 81.1ms\tremaining: 134ms\n","113:\tlearn: 1.3300489\ttotal: 81.5ms\tremaining: 133ms\n","114:\tlearn: 1.3296218\ttotal: 82.1ms\tremaining: 132ms\n","115:\tlearn: 1.3291004\ttotal: 82.5ms\tremaining: 131ms\n","116:\tlearn: 1.3285913\ttotal: 83.2ms\tremaining: 130ms\n","117:\tlearn: 1.3281487\ttotal: 83.8ms\tremaining: 129ms\n","118:\tlearn: 1.3276847\ttotal: 84.4ms\tremaining: 128ms\n","119:\tlearn: 1.3272697\ttotal: 85ms\tremaining: 128ms\n","120:\tlearn: 1.3267587\ttotal: 85.2ms\tremaining: 126ms\n","121:\tlearn: 1.3262788\ttotal: 85.9ms\tremaining: 125ms\n","122:\tlearn: 1.3257779\ttotal: 86.5ms\tremaining: 125ms\n","123:\tlearn: 1.3252840\ttotal: 87.4ms\tremaining: 124ms\n","124:\tlearn: 1.3248120\ttotal: 88.3ms\tremaining: 124ms\n","125:\tlearn: 1.3243416\ttotal: 88.7ms\tremaining: 123ms\n","126:\tlearn: 1.3238997\ttotal: 89.6ms\tremaining: 122ms\n","127:\tlearn: 1.3233832\ttotal: 89.9ms\tremaining: 121ms\n","128:\tlearn: 1.3229192\ttotal: 90.6ms\tremaining: 120ms\n","129:\tlearn: 1.3224763\ttotal: 91.2ms\tremaining: 119ms\n","130:\tlearn: 1.3220606\ttotal: 91.9ms\tremaining: 119ms\n","131:\tlearn: 1.3215735\ttotal: 92.3ms\tremaining: 117ms\n","132:\tlearn: 1.3211286\ttotal: 92.9ms\tremaining: 117ms\n","133:\tlearn: 1.3206713\ttotal: 93.5ms\tremaining: 116ms\n","134:\tlearn: 1.3201489\ttotal: 94.2ms\tremaining: 115ms\n","135:\tlearn: 1.3196952\ttotal: 94.3ms\tremaining: 114ms\n","136:\tlearn: 1.3192640\ttotal: 95ms\tremaining: 113ms\n","137:\tlearn: 1.3187504\ttotal: 95.2ms\tremaining: 112ms\n","138:\tlearn: 1.3183223\ttotal: 95.8ms\tremaining: 111ms\n","139:\tlearn: 1.3178866\ttotal: 96.5ms\tremaining: 110ms\n","140:\tlearn: 1.3175232\ttotal: 97.4ms\tremaining: 110ms\n","141:\tlearn: 1.3171927\ttotal: 103ms\tremaining: 115ms\n","142:\tlearn: 1.3167732\ttotal: 104ms\tremaining: 114ms\n","143:\tlearn: 1.3163353\ttotal: 104ms\tremaining: 113ms\n","144:\tlearn: 1.3159107\ttotal: 105ms\tremaining: 112ms\n","145:\tlearn: 1.3154624\ttotal: 105ms\tremaining: 111ms\n","146:\tlearn: 1.3150225\ttotal: 106ms\tremaining: 110ms\n","147:\tlearn: 1.3145372\ttotal: 106ms\tremaining: 109ms\n","148:\tlearn: 1.3141361\ttotal: 107ms\tremaining: 108ms\n","149:\tlearn: 1.3137390\ttotal: 107ms\tremaining: 107ms\n","150:\tlearn: 1.3133139\ttotal: 108ms\tremaining: 107ms\n","151:\tlearn: 1.3129153\ttotal: 112ms\tremaining: 109ms\n","152:\tlearn: 1.3124920\ttotal: 113ms\tremaining: 109ms\n","153:\tlearn: 1.3120668\ttotal: 114ms\tremaining: 108ms\n","154:\tlearn: 1.3116116\ttotal: 114ms\tremaining: 107ms\n","155:\tlearn: 1.3111478\ttotal: 115ms\tremaining: 106ms\n","156:\tlearn: 1.3106705\ttotal: 115ms\tremaining: 105ms\n","157:\tlearn: 1.3101712\ttotal: 116ms\tremaining: 104ms\n","158:\tlearn: 1.3097617\ttotal: 116ms\tremaining: 103ms\n","159:\tlearn: 1.3093273\ttotal: 117ms\tremaining: 102ms\n","160:\tlearn: 1.3088300\ttotal: 118ms\tremaining: 101ms\n","161:\tlearn: 1.3083145\ttotal: 118ms\tremaining: 101ms\n","162:\tlearn: 1.3078655\ttotal: 119ms\tremaining: 99.9ms\n","163:\tlearn: 1.3074482\ttotal: 120ms\tremaining: 99.1ms\n","164:\tlearn: 1.3069459\ttotal: 120ms\tremaining: 98.1ms\n","165:\tlearn: 1.3065015\ttotal: 120ms\tremaining: 97ms\n","166:\tlearn: 1.3060302\ttotal: 121ms\tremaining: 96.2ms\n","167:\tlearn: 1.3056049\ttotal: 121ms\tremaining: 95.2ms\n","168:\tlearn: 1.3051857\ttotal: 122ms\tremaining: 94.4ms\n","169:\tlearn: 1.3047520\ttotal: 122ms\tremaining: 93.6ms\n","170:\tlearn: 1.3043551\ttotal: 123ms\tremaining: 93ms\n","171:\tlearn: 1.3039660\ttotal: 124ms\tremaining: 92.4ms\n","172:\tlearn: 1.3034882\ttotal: 125ms\tremaining: 91.9ms\n","173:\tlearn: 1.3030750\ttotal: 126ms\tremaining: 91.3ms\n","174:\tlearn: 1.3026468\ttotal: 126ms\tremaining: 90.3ms\n","175:\tlearn: 1.3022628\ttotal: 127ms\tremaining: 89.5ms\n","176:\tlearn: 1.3018492\ttotal: 128ms\tremaining: 88.9ms\n","177:\tlearn: 1.3013513\ttotal: 129ms\tremaining: 88.4ms\n","178:\tlearn: 1.3008580\ttotal: 130ms\tremaining: 87.7ms\n","179:\tlearn: 1.3004193\ttotal: 131ms\tremaining: 87.1ms\n","180:\tlearn: 1.3000012\ttotal: 131ms\tremaining: 86.4ms\n","181:\tlearn: 1.2995688\ttotal: 132ms\tremaining: 85.4ms\n","182:\tlearn: 1.2991540\ttotal: 133ms\tremaining: 84.8ms\n","183:\tlearn: 1.2987535\ttotal: 133ms\tremaining: 84.1ms\n","184:\tlearn: 1.2983175\ttotal: 134ms\tremaining: 83.5ms\n","185:\tlearn: 1.2978855\ttotal: 135ms\tremaining: 82.9ms\n","186:\tlearn: 1.2974584\ttotal: 136ms\tremaining: 82.3ms\n","187:\tlearn: 1.2970599\ttotal: 137ms\tremaining: 81.5ms\n","188:\tlearn: 1.2966005\ttotal: 137ms\tremaining: 80.7ms\n","189:\tlearn: 1.2962287\ttotal: 138ms\tremaining: 80ms\n","190:\tlearn: 1.2958663\ttotal: 139ms\tremaining: 79.2ms\n","191:\tlearn: 1.2954444\ttotal: 140ms\tremaining: 78.5ms\n","192:\tlearn: 1.2950554\ttotal: 140ms\tremaining: 77.6ms\n","193:\tlearn: 1.2946342\ttotal: 141ms\tremaining: 76.8ms\n","194:\tlearn: 1.2941981\ttotal: 141ms\tremaining: 76.1ms\n","195:\tlearn: 1.2937962\ttotal: 142ms\tremaining: 75.3ms\n","196:\tlearn: 1.2933592\ttotal: 143ms\tremaining: 74.5ms\n","197:\tlearn: 1.2929924\ttotal: 143ms\tremaining: 73.7ms\n","198:\tlearn: 1.2925526\ttotal: 143ms\tremaining: 72.8ms\n","199:\tlearn: 1.2921282\ttotal: 144ms\tremaining: 72ms\n","200:\tlearn: 1.2917173\ttotal: 145ms\tremaining: 71.3ms\n","201:\tlearn: 1.2913055\ttotal: 146ms\tremaining: 70.7ms\n","202:\tlearn: 1.2908979\ttotal: 147ms\tremaining: 70ms\n","203:\tlearn: 1.2904632\ttotal: 147ms\tremaining: 69.4ms\n","204:\tlearn: 1.2899705\ttotal: 148ms\tremaining: 68.8ms\n","205:\tlearn: 1.2895449\ttotal: 149ms\tremaining: 68.1ms\n","206:\tlearn: 1.2891549\ttotal: 157ms\tremaining: 70.7ms\n","207:\tlearn: 1.2887491\ttotal: 159ms\tremaining: 70.3ms\n","208:\tlearn: 1.2882772\ttotal: 165ms\tremaining: 71.7ms\n","209:\tlearn: 1.2878583\ttotal: 165ms\tremaining: 70.8ms\n","210:\tlearn: 1.2874719\ttotal: 166ms\tremaining: 70ms\n","211:\tlearn: 1.2870430\ttotal: 166ms\tremaining: 69ms\n","212:\tlearn: 1.2865977\ttotal: 167ms\tremaining: 68.2ms\n","213:\tlearn: 1.2861128\ttotal: 168ms\tremaining: 67.3ms\n","214:\tlearn: 1.2856360\ttotal: 168ms\tremaining: 66.5ms\n","215:\tlearn: 1.2851967\ttotal: 169ms\tremaining: 65.6ms\n","216:\tlearn: 1.2848178\ttotal: 169ms\tremaining: 64.8ms\n","217:\tlearn: 1.2844577\ttotal: 170ms\tremaining: 64ms\n","218:\tlearn: 1.2840286\ttotal: 170ms\tremaining: 63.1ms\n","219:\tlearn: 1.2835998\ttotal: 171ms\tremaining: 62.1ms\n","220:\tlearn: 1.2831790\ttotal: 172ms\tremaining: 61.3ms\n","221:\tlearn: 1.2828145\ttotal: 172ms\tremaining: 60.5ms\n","222:\tlearn: 1.2823885\ttotal: 173ms\tremaining: 59.8ms\n","223:\tlearn: 1.2819754\ttotal: 174ms\tremaining: 59ms\n","224:\tlearn: 1.2815653\ttotal: 175ms\tremaining: 58.3ms\n","225:\tlearn: 1.2811417\ttotal: 176ms\tremaining: 57.5ms\n","226:\tlearn: 1.2807423\ttotal: 176ms\tremaining: 56.6ms\n","227:\tlearn: 1.2803782\ttotal: 177ms\tremaining: 55.8ms\n","228:\tlearn: 1.2799419\ttotal: 177ms\tremaining: 55ms\n","229:\tlearn: 1.2795477\ttotal: 178ms\tremaining: 54.2ms\n","230:\tlearn: 1.2791976\ttotal: 179ms\tremaining: 53.3ms\n","231:\tlearn: 1.2787777\ttotal: 179ms\tremaining: 52.5ms\n","232:\tlearn: 1.2783757\ttotal: 180ms\tremaining: 51.7ms\n","233:\tlearn: 1.2779623\ttotal: 180ms\tremaining: 50.9ms\n","234:\tlearn: 1.2776000\ttotal: 181ms\tremaining: 50.1ms\n","235:\tlearn: 1.2772449\ttotal: 182ms\tremaining: 49.3ms\n","236:\tlearn: 1.2768062\ttotal: 182ms\tremaining: 48.4ms\n","237:\tlearn: 1.2764246\ttotal: 183ms\tremaining: 47.6ms\n","238:\tlearn: 1.2760674\ttotal: 184ms\tremaining: 46.9ms\n","239:\tlearn: 1.2756694\ttotal: 185ms\tremaining: 46.2ms\n","240:\tlearn: 1.2752706\ttotal: 186ms\tremaining: 45.5ms\n","241:\tlearn: 1.2748744\ttotal: 186ms\tremaining: 44.7ms\n","242:\tlearn: 1.2744708\ttotal: 187ms\tremaining: 43.9ms\n","243:\tlearn: 1.2741029\ttotal: 188ms\tremaining: 43.1ms\n","244:\tlearn: 1.2737118\ttotal: 188ms\tremaining: 42.3ms\n","245:\tlearn: 1.2732769\ttotal: 189ms\tremaining: 41.4ms\n","246:\tlearn: 1.2729181\ttotal: 189ms\tremaining: 40.6ms\n","247:\tlearn: 1.2725074\ttotal: 190ms\tremaining: 39.8ms\n","248:\tlearn: 1.2720855\ttotal: 190ms\tremaining: 39ms\n","249:\tlearn: 1.2716793\ttotal: 191ms\tremaining: 38.2ms\n","250:\tlearn: 1.2712694\ttotal: 191ms\tremaining: 37.3ms\n","251:\tlearn: 1.2708822\ttotal: 192ms\tremaining: 36.5ms\n","252:\tlearn: 1.2704531\ttotal: 192ms\tremaining: 35.7ms\n","253:\tlearn: 1.2700387\ttotal: 193ms\tremaining: 34.9ms\n","254:\tlearn: 1.2696023\ttotal: 193ms\tremaining: 34.1ms\n","255:\tlearn: 1.2692103\ttotal: 194ms\tremaining: 33.3ms\n","256:\tlearn: 1.2688077\ttotal: 204ms\tremaining: 34.2ms\n","257:\tlearn: 1.2683717\ttotal: 205ms\tremaining: 33.4ms\n","258:\tlearn: 1.2679743\ttotal: 206ms\tremaining: 32.6ms\n","259:\tlearn: 1.2675552\ttotal: 206ms\tremaining: 31.7ms\n","260:\tlearn: 1.2671056\ttotal: 207ms\tremaining: 30.9ms\n","261:\tlearn: 1.2666685\ttotal: 207ms\tremaining: 30.1ms\n","262:\tlearn: 1.2662403\ttotal: 208ms\tremaining: 29.2ms\n","263:\tlearn: 1.2658042\ttotal: 208ms\tremaining: 28.4ms\n","264:\tlearn: 1.2654162\ttotal: 209ms\tremaining: 27.6ms\n","265:\tlearn: 1.2650863\ttotal: 211ms\tremaining: 27ms\n","266:\tlearn: 1.2646978\ttotal: 221ms\tremaining: 27.3ms\n","267:\tlearn: 1.2642447\ttotal: 225ms\tremaining: 26.9ms\n","268:\tlearn: 1.2638653\ttotal: 229ms\tremaining: 26.4ms\n","269:\tlearn: 1.2634368\ttotal: 230ms\tremaining: 25.5ms\n","270:\tlearn: 1.2630477\ttotal: 231ms\tremaining: 24.7ms\n","271:\tlearn: 1.2626354\ttotal: 231ms\tremaining: 23.8ms\n","272:\tlearn: 1.2622190\ttotal: 232ms\tremaining: 22.9ms\n","273:\tlearn: 1.2618459\ttotal: 232ms\tremaining: 22.1ms\n","274:\tlearn: 1.2614849\ttotal: 233ms\tremaining: 21.2ms\n","275:\tlearn: 1.2610424\ttotal: 233ms\tremaining: 20.3ms\n","276:\tlearn: 1.2606168\ttotal: 234ms\tremaining: 19.4ms\n","277:\tlearn: 1.2603403\ttotal: 235ms\tremaining: 18.6ms\n","278:\tlearn: 1.2598908\ttotal: 235ms\tremaining: 17.7ms\n","279:\tlearn: 1.2595046\ttotal: 235ms\tremaining: 16.8ms\n","280:\tlearn: 1.2590903\ttotal: 236ms\tremaining: 15.9ms\n","281:\tlearn: 1.2587587\ttotal: 237ms\tremaining: 15.1ms\n","282:\tlearn: 1.2583803\ttotal: 238ms\tremaining: 14.3ms\n","283:\tlearn: 1.2580245\ttotal: 239ms\tremaining: 13.4ms\n","284:\tlearn: 1.2576417\ttotal: 240ms\tremaining: 12.6ms\n","285:\tlearn: 1.2572718\ttotal: 240ms\tremaining: 11.8ms\n","286:\tlearn: 1.2568747\ttotal: 241ms\tremaining: 10.9ms\n","287:\tlearn: 1.2564795\ttotal: 242ms\tremaining: 10.1ms\n","288:\tlearn: 1.2560976\ttotal: 242ms\tremaining: 9.22ms\n","289:\tlearn: 1.2557272\ttotal: 243ms\tremaining: 8.37ms\n","290:\tlearn: 1.2553669\ttotal: 243ms\tremaining: 7.52ms\n","291:\tlearn: 1.2549863\ttotal: 244ms\tremaining: 6.69ms\n","292:\tlearn: 1.2545592\ttotal: 245ms\tremaining: 5.85ms\n","293:\tlearn: 1.2541759\ttotal: 246ms\tremaining: 5.02ms\n","294:\tlearn: 1.2537794\ttotal: 247ms\tremaining: 4.18ms\n","295:\tlearn: 1.2534290\ttotal: 247ms\tremaining: 3.34ms\n","296:\tlearn: 1.2531290\ttotal: 248ms\tremaining: 2.5ms\n","297:\tlearn: 1.2528492\ttotal: 248ms\tremaining: 1.67ms\n","298:\tlearn: 1.2524418\ttotal: 249ms\tremaining: 833us\n","299:\tlearn: 1.2520609\ttotal: 250ms\tremaining: 0us\n","0:\tlearn: 1.3858380\ttotal: 751us\tremaining: 225ms\n","1:\tlearn: 1.3852992\ttotal: 1.03ms\tremaining: 153ms\n","2:\tlearn: 1.3847152\ttotal: 2.55ms\tremaining: 253ms\n","3:\tlearn: 1.3842330\ttotal: 2.97ms\tremaining: 220ms\n","4:\tlearn: 1.3837155\ttotal: 3.6ms\tremaining: 212ms\n","5:\tlearn: 1.3832480\ttotal: 4.27ms\tremaining: 209ms\n","6:\tlearn: 1.3826611\ttotal: 4.91ms\tremaining: 206ms\n","7:\tlearn: 1.3821630\ttotal: 5.53ms\tremaining: 202ms\n","8:\tlearn: 1.3816769\ttotal: 6.17ms\tremaining: 200ms\n","9:\tlearn: 1.3811813\ttotal: 6.77ms\tremaining: 196ms\n","10:\tlearn: 1.3805687\ttotal: 7.38ms\tremaining: 194ms\n","11:\tlearn: 1.3799264\ttotal: 12.3ms\tremaining: 296ms\n","12:\tlearn: 1.3793791\ttotal: 13ms\tremaining: 287ms\n","13:\tlearn: 1.3788401\ttotal: 13.7ms\tremaining: 279ms\n","14:\tlearn: 1.3783226\ttotal: 14.1ms\tremaining: 268ms\n","15:\tlearn: 1.3778117\ttotal: 14.7ms\tremaining: 261ms\n","16:\tlearn: 1.3772034\ttotal: 15ms\tremaining: 250ms\n","17:\tlearn: 1.3766611\ttotal: 15.6ms\tremaining: 245ms\n","18:\tlearn: 1.3762472\ttotal: 21ms\tremaining: 310ms\n","19:\tlearn: 1.3757730\ttotal: 21.6ms\tremaining: 303ms\n","20:\tlearn: 1.3752386\ttotal: 22.3ms\tremaining: 297ms\n","21:\tlearn: 1.3746628\ttotal: 23ms\tremaining: 291ms\n","22:\tlearn: 1.3741705\ttotal: 23.6ms\tremaining: 285ms\n","23:\tlearn: 1.3737016\ttotal: 24.3ms\tremaining: 279ms\n","24:\tlearn: 1.3731849\ttotal: 24.5ms\tremaining: 270ms\n","25:\tlearn: 1.3726653\ttotal: 25.2ms\tremaining: 266ms\n","26:\tlearn: 1.3721903\ttotal: 25.6ms\tremaining: 259ms\n","27:\tlearn: 1.3716790\ttotal: 26.3ms\tremaining: 255ms\n","28:\tlearn: 1.3710979\ttotal: 26.7ms\tremaining: 249ms\n","29:\tlearn: 1.3705515\ttotal: 27.6ms\tremaining: 248ms\n","30:\tlearn: 1.3700358\ttotal: 27.9ms\tremaining: 242ms\n","31:\tlearn: 1.3695200\ttotal: 28.5ms\tremaining: 239ms\n","32:\tlearn: 1.3689887\ttotal: 43.6ms\tremaining: 353ms\n","33:\tlearn: 1.3684602\ttotal: 44.3ms\tremaining: 347ms\n","34:\tlearn: 1.3679687\ttotal: 45ms\tremaining: 340ms\n","35:\tlearn: 1.3675002\ttotal: 48.4ms\tremaining: 355ms\n","36:\tlearn: 1.3669767\ttotal: 51.6ms\tremaining: 367ms\n","37:\tlearn: 1.3665140\ttotal: 52.1ms\tremaining: 359ms\n","38:\tlearn: 1.3660184\ttotal: 55.7ms\tremaining: 373ms\n","39:\tlearn: 1.3655261\ttotal: 59.8ms\tremaining: 388ms\n","40:\tlearn: 1.3649503\ttotal: 60.5ms\tremaining: 382ms\n","41:\tlearn: 1.3644497\ttotal: 60.9ms\tremaining: 374ms\n","42:\tlearn: 1.3639352\ttotal: 61.1ms\tremaining: 365ms\n","43:\tlearn: 1.3634263\ttotal: 62.4ms\tremaining: 363ms\n","44:\tlearn: 1.3629285\ttotal: 68ms\tremaining: 385ms\n","45:\tlearn: 1.3623835\ttotal: 68.5ms\tremaining: 378ms\n","46:\tlearn: 1.3618863\ttotal: 69.1ms\tremaining: 372ms\n","47:\tlearn: 1.3614137\ttotal: 69.8ms\tremaining: 366ms\n","48:\tlearn: 1.3609403\ttotal: 70.9ms\tremaining: 363ms\n","49:\tlearn: 1.3604200\ttotal: 71.3ms\tremaining: 357ms\n","50:\tlearn: 1.3599660\ttotal: 84.1ms\tremaining: 411ms\n","51:\tlearn: 1.3594486\ttotal: 84.9ms\tremaining: 405ms\n","52:\tlearn: 1.3590574\ttotal: 85.5ms\tremaining: 399ms\n","53:\tlearn: 1.3585608\ttotal: 88.5ms\tremaining: 403ms\n","54:\tlearn: 1.3579200\ttotal: 88.8ms\tremaining: 396ms\n","55:\tlearn: 1.3574422\ttotal: 91.6ms\tremaining: 399ms\n","56:\tlearn: 1.3569500\ttotal: 92.3ms\tremaining: 393ms\n","57:\tlearn: 1.3563886\ttotal: 92.6ms\tremaining: 386ms\n","58:\tlearn: 1.3559098\ttotal: 93.3ms\tremaining: 381ms\n","59:\tlearn: 1.3553490\ttotal: 94.2ms\tremaining: 377ms\n","60:\tlearn: 1.3548540\ttotal: 95.1ms\tremaining: 373ms\n","61:\tlearn: 1.3543258\ttotal: 95.3ms\tremaining: 366ms\n","62:\tlearn: 1.3538609\ttotal: 100ms\tremaining: 378ms\n","63:\tlearn: 1.3533491\ttotal: 101ms\tremaining: 373ms\n","64:\tlearn: 1.3528317\ttotal: 102ms\tremaining: 369ms\n","65:\tlearn: 1.3523878\ttotal: 103ms\tremaining: 364ms\n","66:\tlearn: 1.3518568\ttotal: 103ms\tremaining: 360ms\n","67:\tlearn: 1.3514082\ttotal: 104ms\tremaining: 356ms\n","68:\tlearn: 1.3508847\ttotal: 106ms\tremaining: 355ms\n","69:\tlearn: 1.3504028\ttotal: 107ms\tremaining: 351ms\n","70:\tlearn: 1.3499434\ttotal: 108ms\tremaining: 348ms\n","71:\tlearn: 1.3495026\ttotal: 110ms\tremaining: 348ms\n","72:\tlearn: 1.3489935\ttotal: 111ms\tremaining: 346ms\n","73:\tlearn: 1.3485193\ttotal: 112ms\tremaining: 341ms\n","74:\tlearn: 1.3479951\ttotal: 112ms\tremaining: 336ms\n","75:\tlearn: 1.3474414\ttotal: 113ms\tremaining: 333ms\n","76:\tlearn: 1.3469960\ttotal: 113ms\tremaining: 329ms\n","77:\tlearn: 1.3465463\ttotal: 114ms\tremaining: 325ms\n","78:\tlearn: 1.3460895\ttotal: 115ms\tremaining: 321ms\n","79:\tlearn: 1.3455735\ttotal: 115ms\tremaining: 317ms\n","80:\tlearn: 1.3451103\ttotal: 116ms\tremaining: 312ms\n","81:\tlearn: 1.3445991\ttotal: 116ms\tremaining: 309ms\n","82:\tlearn: 1.3440381\ttotal: 120ms\tremaining: 314ms\n","83:\tlearn: 1.3436500\ttotal: 121ms\tremaining: 311ms\n","84:\tlearn: 1.3431510\ttotal: 121ms\tremaining: 307ms\n","85:\tlearn: 1.3426436\ttotal: 122ms\tremaining: 303ms\n","86:\tlearn: 1.3421574\ttotal: 122ms\tremaining: 299ms\n","87:\tlearn: 1.3416079\ttotal: 122ms\tremaining: 295ms\n","88:\tlearn: 1.3411247\ttotal: 123ms\tremaining: 291ms\n","89:\tlearn: 1.3406606\ttotal: 123ms\tremaining: 287ms\n","90:\tlearn: 1.3401805\ttotal: 124ms\tremaining: 284ms\n","91:\tlearn: 1.3397315\ttotal: 127ms\tremaining: 287ms\n","92:\tlearn: 1.3392202\ttotal: 128ms\tremaining: 284ms\n","93:\tlearn: 1.3386818\ttotal: 128ms\tremaining: 281ms\n","94:\tlearn: 1.3382075\ttotal: 134ms\tremaining: 288ms\n","95:\tlearn: 1.3377651\ttotal: 134ms\tremaining: 285ms\n","96:\tlearn: 1.3372484\ttotal: 135ms\tremaining: 282ms\n","97:\tlearn: 1.3368119\ttotal: 135ms\tremaining: 279ms\n","98:\tlearn: 1.3363248\ttotal: 136ms\tremaining: 277ms\n","99:\tlearn: 1.3358009\ttotal: 137ms\tremaining: 275ms\n","100:\tlearn: 1.3353092\ttotal: 138ms\tremaining: 273ms\n","101:\tlearn: 1.3348494\ttotal: 139ms\tremaining: 270ms\n","102:\tlearn: 1.3343900\ttotal: 140ms\tremaining: 267ms\n","103:\tlearn: 1.3339350\ttotal: 156ms\tremaining: 293ms\n","104:\tlearn: 1.3334987\ttotal: 159ms\tremaining: 295ms\n","105:\tlearn: 1.3330611\ttotal: 163ms\tremaining: 299ms\n","106:\tlearn: 1.3326188\ttotal: 164ms\tremaining: 296ms\n","107:\tlearn: 1.3321958\ttotal: 169ms\tremaining: 301ms\n","108:\tlearn: 1.3317487\ttotal: 170ms\tremaining: 298ms\n","109:\tlearn: 1.3312932\ttotal: 170ms\tremaining: 294ms\n","110:\tlearn: 1.3308190\ttotal: 175ms\tremaining: 299ms\n","111:\tlearn: 1.3303439\ttotal: 176ms\tremaining: 295ms\n","112:\tlearn: 1.3298835\ttotal: 177ms\tremaining: 292ms\n","113:\tlearn: 1.3293905\ttotal: 177ms\tremaining: 289ms\n","114:\tlearn: 1.3287958\ttotal: 178ms\tremaining: 286ms\n","115:\tlearn: 1.3283347\ttotal: 178ms\tremaining: 283ms\n","116:\tlearn: 1.3279437\ttotal: 179ms\tremaining: 280ms\n","117:\tlearn: 1.3274267\ttotal: 179ms\tremaining: 277ms\n","118:\tlearn: 1.3270257\ttotal: 180ms\tremaining: 274ms\n","119:\tlearn: 1.3265629\ttotal: 181ms\tremaining: 271ms\n","120:\tlearn: 1.3260882\ttotal: 181ms\tremaining: 268ms\n","121:\tlearn: 1.3256683\ttotal: 182ms\tremaining: 266ms\n","122:\tlearn: 1.3252566\ttotal: 183ms\tremaining: 263ms\n","123:\tlearn: 1.3247512\ttotal: 188ms\tremaining: 266ms\n","124:\tlearn: 1.3242070\ttotal: 188ms\tremaining: 264ms\n","125:\tlearn: 1.3238408\ttotal: 190ms\tremaining: 262ms\n","126:\tlearn: 1.3233992\ttotal: 191ms\tremaining: 261ms\n","127:\tlearn: 1.3229284\ttotal: 192ms\tremaining: 258ms\n","128:\tlearn: 1.3224529\ttotal: 192ms\tremaining: 255ms\n","129:\tlearn: 1.3220656\ttotal: 193ms\tremaining: 253ms\n","130:\tlearn: 1.3217006\ttotal: 194ms\tremaining: 250ms\n","131:\tlearn: 1.3212488\ttotal: 195ms\tremaining: 248ms\n","132:\tlearn: 1.3208345\ttotal: 195ms\tremaining: 245ms\n","133:\tlearn: 1.3203632\ttotal: 196ms\tremaining: 243ms\n","134:\tlearn: 1.3199347\ttotal: 197ms\tremaining: 240ms\n","135:\tlearn: 1.3195136\ttotal: 197ms\tremaining: 238ms\n","136:\tlearn: 1.3190368\ttotal: 198ms\tremaining: 236ms\n","137:\tlearn: 1.3185928\ttotal: 199ms\tremaining: 234ms\n","138:\tlearn: 1.3181557\ttotal: 199ms\tremaining: 231ms\n","139:\tlearn: 1.3176220\ttotal: 200ms\tremaining: 228ms\n","140:\tlearn: 1.3172034\ttotal: 200ms\tremaining: 226ms\n","141:\tlearn: 1.3167289\ttotal: 201ms\tremaining: 224ms\n","142:\tlearn: 1.3162991\ttotal: 202ms\tremaining: 222ms\n","143:\tlearn: 1.3158890\ttotal: 203ms\tremaining: 219ms\n","144:\tlearn: 1.3153684\ttotal: 203ms\tremaining: 217ms\n","145:\tlearn: 1.3149152\ttotal: 204ms\tremaining: 215ms\n","146:\tlearn: 1.3144238\ttotal: 205ms\tremaining: 213ms\n","147:\tlearn: 1.3139800\ttotal: 205ms\tremaining: 211ms\n","148:\tlearn: 1.3135109\ttotal: 206ms\tremaining: 209ms\n","149:\tlearn: 1.3129952\ttotal: 206ms\tremaining: 206ms\n","150:\tlearn: 1.3125698\ttotal: 207ms\tremaining: 204ms\n","151:\tlearn: 1.3121357\ttotal: 207ms\tremaining: 202ms\n","152:\tlearn: 1.3116747\ttotal: 208ms\tremaining: 200ms\n","153:\tlearn: 1.3112723\ttotal: 209ms\tremaining: 198ms\n","154:\tlearn: 1.3109028\ttotal: 209ms\tremaining: 196ms\n","155:\tlearn: 1.3104334\ttotal: 210ms\tremaining: 194ms\n","156:\tlearn: 1.3099637\ttotal: 211ms\tremaining: 192ms\n","157:\tlearn: 1.3095116\ttotal: 211ms\tremaining: 190ms\n","158:\tlearn: 1.3090441\ttotal: 212ms\tremaining: 188ms\n","159:\tlearn: 1.3086437\ttotal: 213ms\tremaining: 186ms\n","160:\tlearn: 1.3081104\ttotal: 213ms\tremaining: 184ms\n","161:\tlearn: 1.3076118\ttotal: 214ms\tremaining: 182ms\n","162:\tlearn: 1.3071468\ttotal: 215ms\tremaining: 180ms\n","163:\tlearn: 1.3066553\ttotal: 215ms\tremaining: 179ms\n","164:\tlearn: 1.3062959\ttotal: 216ms\tremaining: 177ms\n","165:\tlearn: 1.3058323\ttotal: 216ms\tremaining: 175ms\n","166:\tlearn: 1.3054022\ttotal: 217ms\tremaining: 172ms\n","167:\tlearn: 1.3049204\ttotal: 217ms\tremaining: 171ms\n","168:\tlearn: 1.3045085\ttotal: 218ms\tremaining: 169ms\n","169:\tlearn: 1.3040971\ttotal: 219ms\tremaining: 167ms\n","170:\tlearn: 1.3036510\ttotal: 219ms\tremaining: 165ms\n","171:\tlearn: 1.3032394\ttotal: 220ms\tremaining: 163ms\n","172:\tlearn: 1.3028546\ttotal: 230ms\tremaining: 169ms\n","173:\tlearn: 1.3023594\ttotal: 232ms\tremaining: 168ms\n","174:\tlearn: 1.3019264\ttotal: 233ms\tremaining: 166ms\n","175:\tlearn: 1.3013964\ttotal: 233ms\tremaining: 164ms\n","176:\tlearn: 1.3009863\ttotal: 234ms\tremaining: 162ms\n","177:\tlearn: 1.3004596\ttotal: 234ms\tremaining: 161ms\n","178:\tlearn: 1.2999718\ttotal: 235ms\tremaining: 159ms\n","179:\tlearn: 1.2995172\ttotal: 247ms\tremaining: 165ms\n","180:\tlearn: 1.2991463\ttotal: 253ms\tremaining: 166ms\n","181:\tlearn: 1.2987158\ttotal: 254ms\tremaining: 165ms\n","182:\tlearn: 1.2983397\ttotal: 256ms\tremaining: 164ms\n","183:\tlearn: 1.2978970\ttotal: 256ms\tremaining: 162ms\n","184:\tlearn: 1.2974549\ttotal: 257ms\tremaining: 160ms\n","185:\tlearn: 1.2970236\ttotal: 257ms\tremaining: 158ms\n","186:\tlearn: 1.2966362\ttotal: 258ms\tremaining: 156ms\n","187:\tlearn: 1.2962816\ttotal: 259ms\tremaining: 154ms\n","188:\tlearn: 1.2958871\ttotal: 259ms\tremaining: 152ms\n","189:\tlearn: 1.2954728\ttotal: 260ms\tremaining: 151ms\n","190:\tlearn: 1.2950236\ttotal: 261ms\tremaining: 149ms\n","191:\tlearn: 1.2946236\ttotal: 262ms\tremaining: 147ms\n","192:\tlearn: 1.2942338\ttotal: 262ms\tremaining: 145ms\n","193:\tlearn: 1.2937731\ttotal: 263ms\tremaining: 144ms\n","194:\tlearn: 1.2932866\ttotal: 263ms\tremaining: 142ms\n","195:\tlearn: 1.2928341\ttotal: 264ms\tremaining: 140ms\n","196:\tlearn: 1.2924459\ttotal: 265ms\tremaining: 139ms\n","197:\tlearn: 1.2920305\ttotal: 266ms\tremaining: 137ms\n","198:\tlearn: 1.2916015\ttotal: 267ms\tremaining: 136ms\n","199:\tlearn: 1.2911677\ttotal: 267ms\tremaining: 134ms\n","200:\tlearn: 1.2907512\ttotal: 268ms\tremaining: 132ms\n","201:\tlearn: 1.2903616\ttotal: 269ms\tremaining: 131ms\n","202:\tlearn: 1.2899902\ttotal: 270ms\tremaining: 129ms\n","203:\tlearn: 1.2895650\ttotal: 271ms\tremaining: 127ms\n","204:\tlearn: 1.2891489\ttotal: 271ms\tremaining: 126ms\n","205:\tlearn: 1.2887792\ttotal: 272ms\tremaining: 124ms\n","206:\tlearn: 1.2882913\ttotal: 273ms\tremaining: 123ms\n","207:\tlearn: 1.2877894\ttotal: 273ms\tremaining: 121ms\n","208:\tlearn: 1.2872991\ttotal: 274ms\tremaining: 119ms\n","209:\tlearn: 1.2868501\ttotal: 275ms\tremaining: 118ms\n","210:\tlearn: 1.2864771\ttotal: 276ms\tremaining: 116ms\n","211:\tlearn: 1.2860549\ttotal: 276ms\tremaining: 115ms\n","212:\tlearn: 1.2856720\ttotal: 277ms\tremaining: 113ms\n","213:\tlearn: 1.2852682\ttotal: 277ms\tremaining: 111ms\n","214:\tlearn: 1.2848649\ttotal: 281ms\tremaining: 111ms\n","215:\tlearn: 1.2844166\ttotal: 282ms\tremaining: 110ms\n","216:\tlearn: 1.2840256\ttotal: 283ms\tremaining: 108ms\n","217:\tlearn: 1.2836406\ttotal: 283ms\tremaining: 106ms\n","218:\tlearn: 1.2832298\ttotal: 284ms\tremaining: 105ms\n","219:\tlearn: 1.2827675\ttotal: 284ms\tremaining: 103ms\n","220:\tlearn: 1.2823603\ttotal: 285ms\tremaining: 102ms\n","221:\tlearn: 1.2819233\ttotal: 285ms\tremaining: 100ms\n","222:\tlearn: 1.2814945\ttotal: 285ms\tremaining: 98.5ms\n","223:\tlearn: 1.2810321\ttotal: 286ms\tremaining: 97ms\n","224:\tlearn: 1.2806052\ttotal: 287ms\tremaining: 95.5ms\n","225:\tlearn: 1.2802303\ttotal: 287ms\tremaining: 94ms\n","226:\tlearn: 1.2798328\ttotal: 287ms\tremaining: 92.5ms\n","227:\tlearn: 1.2793807\ttotal: 288ms\tremaining: 91ms\n","228:\tlearn: 1.2789714\ttotal: 289ms\tremaining: 89.5ms\n","229:\tlearn: 1.2786060\ttotal: 289ms\tremaining: 88ms\n","230:\tlearn: 1.2781364\ttotal: 289ms\tremaining: 86.4ms\n","231:\tlearn: 1.2776847\ttotal: 290ms\tremaining: 85ms\n","232:\tlearn: 1.2772607\ttotal: 291ms\tremaining: 83.7ms\n","233:\tlearn: 1.2768931\ttotal: 292ms\tremaining: 82.2ms\n","234:\tlearn: 1.2764497\ttotal: 292ms\tremaining: 80.7ms\n","235:\tlearn: 1.2760430\ttotal: 293ms\tremaining: 79.3ms\n","236:\tlearn: 1.2756452\ttotal: 293ms\tremaining: 77.8ms\n","237:\tlearn: 1.2751546\ttotal: 293ms\tremaining: 76.3ms\n","238:\tlearn: 1.2747432\ttotal: 294ms\tremaining: 74.9ms\n","239:\tlearn: 1.2743456\ttotal: 294ms\tremaining: 73.5ms\n","240:\tlearn: 1.2740097\ttotal: 295ms\tremaining: 72.2ms\n","241:\tlearn: 1.2736529\ttotal: 296ms\tremaining: 70.8ms\n","242:\tlearn: 1.2732183\ttotal: 301ms\tremaining: 70.5ms\n","243:\tlearn: 1.2727733\ttotal: 302ms\tremaining: 69.2ms\n","244:\tlearn: 1.2723716\ttotal: 302ms\tremaining: 67.8ms\n","245:\tlearn: 1.2719495\ttotal: 303ms\tremaining: 66.5ms\n","246:\tlearn: 1.2715544\ttotal: 304ms\tremaining: 65.2ms\n","247:\tlearn: 1.2712322\ttotal: 305ms\tremaining: 63.9ms\n","248:\tlearn: 1.2708231\ttotal: 305ms\tremaining: 62.5ms\n","249:\tlearn: 1.2704424\ttotal: 306ms\tremaining: 61.3ms\n","250:\tlearn: 1.2700183\ttotal: 307ms\tremaining: 60ms\n","251:\tlearn: 1.2695616\ttotal: 308ms\tremaining: 58.6ms\n","252:\tlearn: 1.2692142\ttotal: 308ms\tremaining: 57.2ms\n","253:\tlearn: 1.2688135\ttotal: 309ms\tremaining: 55.9ms\n","254:\tlearn: 1.2684684\ttotal: 309ms\tremaining: 54.6ms\n","255:\tlearn: 1.2680301\ttotal: 310ms\tremaining: 53.2ms\n","256:\tlearn: 1.2676331\ttotal: 310ms\tremaining: 51.9ms\n","257:\tlearn: 1.2671983\ttotal: 311ms\tremaining: 50.7ms\n","258:\tlearn: 1.2668435\ttotal: 312ms\tremaining: 49.4ms\n","259:\tlearn: 1.2664702\ttotal: 313ms\tremaining: 48.2ms\n","260:\tlearn: 1.2660496\ttotal: 314ms\tremaining: 46.9ms\n","261:\tlearn: 1.2657085\ttotal: 315ms\tremaining: 45.6ms\n","262:\tlearn: 1.2652960\ttotal: 315ms\tremaining: 44.3ms\n","263:\tlearn: 1.2649190\ttotal: 316ms\tremaining: 43.1ms\n","264:\tlearn: 1.2645402\ttotal: 317ms\tremaining: 41.9ms\n","265:\tlearn: 1.2641516\ttotal: 318ms\tremaining: 40.6ms\n","266:\tlearn: 1.2637677\ttotal: 318ms\tremaining: 39.3ms\n","267:\tlearn: 1.2634172\ttotal: 319ms\tremaining: 38.1ms\n","268:\tlearn: 1.2630431\ttotal: 320ms\tremaining: 36.9ms\n","269:\tlearn: 1.2626297\ttotal: 320ms\tremaining: 35.6ms\n","270:\tlearn: 1.2622564\ttotal: 321ms\tremaining: 34.3ms\n","271:\tlearn: 1.2618893\ttotal: 322ms\tremaining: 33.1ms\n","272:\tlearn: 1.2615251\ttotal: 322ms\tremaining: 31.9ms\n","273:\tlearn: 1.2610916\ttotal: 323ms\tremaining: 30.6ms\n","274:\tlearn: 1.2606837\ttotal: 323ms\tremaining: 29.4ms\n","275:\tlearn: 1.2602867\ttotal: 324ms\tremaining: 28.1ms\n","276:\tlearn: 1.2599011\ttotal: 324ms\tremaining: 26.9ms\n","277:\tlearn: 1.2595419\ttotal: 325ms\tremaining: 25.7ms\n","278:\tlearn: 1.2591980\ttotal: 325ms\tremaining: 24.5ms\n","279:\tlearn: 1.2587321\ttotal: 326ms\tremaining: 23.3ms\n","280:\tlearn: 1.2583459\ttotal: 327ms\tremaining: 22.1ms\n","281:\tlearn: 1.2579841\ttotal: 328ms\tremaining: 20.9ms\n","282:\tlearn: 1.2576216\ttotal: 329ms\tremaining: 19.7ms\n","283:\tlearn: 1.2572341\ttotal: 329ms\tremaining: 18.5ms\n","284:\tlearn: 1.2569234\ttotal: 331ms\tremaining: 17.4ms\n","285:\tlearn: 1.2566102\ttotal: 332ms\tremaining: 16.3ms\n","286:\tlearn: 1.2561819\ttotal: 333ms\tremaining: 15.1ms\n","287:\tlearn: 1.2558376\ttotal: 333ms\tremaining: 13.9ms\n","288:\tlearn: 1.2554397\ttotal: 333ms\tremaining: 12.7ms\n","289:\tlearn: 1.2550126\ttotal: 334ms\tremaining: 11.5ms\n","290:\tlearn: 1.2546773\ttotal: 335ms\tremaining: 10.4ms\n","291:\tlearn: 1.2542898\ttotal: 335ms\tremaining: 9.19ms\n","292:\tlearn: 1.2538659\ttotal: 336ms\tremaining: 8.04ms\n","293:\tlearn: 1.2535194\ttotal: 337ms\tremaining: 6.88ms\n","294:\tlearn: 1.2531320\ttotal: 338ms\tremaining: 5.72ms\n","295:\tlearn: 1.2527055\ttotal: 338ms\tremaining: 4.57ms\n","296:\tlearn: 1.2522741\ttotal: 339ms\tremaining: 3.42ms\n","297:\tlearn: 1.2519201\ttotal: 339ms\tremaining: 2.28ms\n","298:\tlearn: 1.2515045\ttotal: 340ms\tremaining: 1.14ms\n","299:\tlearn: 1.2511194\ttotal: 341ms\tremaining: 0us\n","0:\tlearn: 1.3858038\ttotal: 4.1ms\tremaining: 1.23s\n","1:\tlearn: 1.3853053\ttotal: 5.29ms\tremaining: 789ms\n","2:\tlearn: 1.3847050\ttotal: 5.53ms\tremaining: 548ms\n","3:\tlearn: 1.3841221\ttotal: 5.84ms\tremaining: 433ms\n","4:\tlearn: 1.3836245\ttotal: 11.5ms\tremaining: 679ms\n","5:\tlearn: 1.3829939\ttotal: 11.8ms\tremaining: 580ms\n","6:\tlearn: 1.3824225\ttotal: 12.5ms\tremaining: 523ms\n","7:\tlearn: 1.3818902\ttotal: 12.8ms\tremaining: 467ms\n","8:\tlearn: 1.3813181\ttotal: 13.2ms\tremaining: 427ms\n","9:\tlearn: 1.3807410\ttotal: 13.8ms\tremaining: 401ms\n","10:\tlearn: 1.3803021\ttotal: 14.4ms\tremaining: 379ms\n","11:\tlearn: 1.3797822\ttotal: 15.4ms\tremaining: 371ms\n","12:\tlearn: 1.3792796\ttotal: 16.5ms\tremaining: 364ms\n","13:\tlearn: 1.3786939\ttotal: 17.4ms\tremaining: 356ms\n","14:\tlearn: 1.3782034\ttotal: 19.6ms\tremaining: 373ms\n","15:\tlearn: 1.3777548\ttotal: 20.3ms\tremaining: 361ms\n","16:\tlearn: 1.3772147\ttotal: 21ms\tremaining: 349ms\n","17:\tlearn: 1.3766906\ttotal: 21.6ms\tremaining: 338ms\n","18:\tlearn: 1.3761870\ttotal: 26.7ms\tremaining: 395ms\n","19:\tlearn: 1.3757272\ttotal: 27.4ms\tremaining: 383ms\n","20:\tlearn: 1.3752283\ttotal: 28.1ms\tremaining: 373ms\n","21:\tlearn: 1.3746494\ttotal: 28.3ms\tremaining: 358ms\n","22:\tlearn: 1.3741458\ttotal: 29ms\tremaining: 349ms\n","23:\tlearn: 1.3736734\ttotal: 29.7ms\tremaining: 341ms\n","24:\tlearn: 1.3731829\ttotal: 35.2ms\tremaining: 388ms\n","25:\tlearn: 1.3726989\ttotal: 35.9ms\tremaining: 379ms\n","26:\tlearn: 1.3722297\ttotal: 36.6ms\tremaining: 370ms\n","27:\tlearn: 1.3716736\ttotal: 37.3ms\tremaining: 362ms\n","28:\tlearn: 1.3711442\ttotal: 37.9ms\tremaining: 354ms\n","29:\tlearn: 1.3705711\ttotal: 38.3ms\tremaining: 344ms\n","30:\tlearn: 1.3701384\ttotal: 38.9ms\tremaining: 338ms\n","31:\tlearn: 1.3696837\ttotal: 42.3ms\tremaining: 354ms\n","32:\tlearn: 1.3691733\ttotal: 43ms\tremaining: 348ms\n","33:\tlearn: 1.3686305\ttotal: 44ms\tremaining: 344ms\n","34:\tlearn: 1.3681330\ttotal: 44.9ms\tremaining: 340ms\n","35:\tlearn: 1.3675783\ttotal: 47ms\tremaining: 345ms\n","36:\tlearn: 1.3670616\ttotal: 49.1ms\tremaining: 349ms\n","37:\tlearn: 1.3665702\ttotal: 52.6ms\tremaining: 363ms\n","38:\tlearn: 1.3660721\ttotal: 53.1ms\tremaining: 355ms\n","39:\tlearn: 1.3655818\ttotal: 56.8ms\tremaining: 369ms\n","40:\tlearn: 1.3650226\ttotal: 57.5ms\tremaining: 363ms\n","41:\tlearn: 1.3644434\ttotal: 57.9ms\tremaining: 356ms\n","42:\tlearn: 1.3639018\ttotal: 58.5ms\tremaining: 350ms\n","43:\tlearn: 1.3633885\ttotal: 59.2ms\tremaining: 344ms\n","44:\tlearn: 1.3628567\ttotal: 59.9ms\tremaining: 339ms\n","45:\tlearn: 1.3624310\ttotal: 60.6ms\tremaining: 334ms\n","46:\tlearn: 1.3619581\ttotal: 61.2ms\tremaining: 330ms\n","47:\tlearn: 1.3614304\ttotal: 61.9ms\tremaining: 325ms\n","48:\tlearn: 1.3609150\ttotal: 62.8ms\tremaining: 322ms\n","49:\tlearn: 1.3603606\ttotal: 68.5ms\tremaining: 342ms\n","50:\tlearn: 1.3598655\ttotal: 69.1ms\tremaining: 337ms\n","51:\tlearn: 1.3592824\ttotal: 69.7ms\tremaining: 333ms\n","52:\tlearn: 1.3588054\ttotal: 70.4ms\tremaining: 328ms\n","53:\tlearn: 1.3582822\ttotal: 70.6ms\tremaining: 322ms\n","54:\tlearn: 1.3577914\ttotal: 71.2ms\tremaining: 317ms\n","55:\tlearn: 1.3574096\ttotal: 71.9ms\tremaining: 313ms\n","56:\tlearn: 1.3568378\ttotal: 72.3ms\tremaining: 308ms\n","57:\tlearn: 1.3562853\ttotal: 73ms\tremaining: 305ms\n","58:\tlearn: 1.3558362\ttotal: 73.7ms\tremaining: 301ms\n","59:\tlearn: 1.3553694\ttotal: 74.5ms\tremaining: 298ms\n","60:\tlearn: 1.3547989\ttotal: 75.2ms\tremaining: 295ms\n","61:\tlearn: 1.3543156\ttotal: 80.4ms\tremaining: 309ms\n","62:\tlearn: 1.3538494\ttotal: 81.1ms\tremaining: 305ms\n","63:\tlearn: 1.3533675\ttotal: 86.6ms\tremaining: 319ms\n","64:\tlearn: 1.3528789\ttotal: 87.2ms\tremaining: 315ms\n","65:\tlearn: 1.3523209\ttotal: 87.9ms\tremaining: 312ms\n","66:\tlearn: 1.3518493\ttotal: 88.5ms\tremaining: 308ms\n","67:\tlearn: 1.3514252\ttotal: 89.1ms\tremaining: 304ms\n","68:\tlearn: 1.3509403\ttotal: 89.7ms\tremaining: 300ms\n","69:\tlearn: 1.3504497\ttotal: 95.2ms\tremaining: 313ms\n","70:\tlearn: 1.3500456\ttotal: 95.9ms\tremaining: 309ms\n","71:\tlearn: 1.3495202\ttotal: 96.1ms\tremaining: 304ms\n","72:\tlearn: 1.3490487\ttotal: 96.8ms\tremaining: 301ms\n","73:\tlearn: 1.3485440\ttotal: 97.5ms\tremaining: 298ms\n","74:\tlearn: 1.3480319\ttotal: 98.1ms\tremaining: 294ms\n","75:\tlearn: 1.3475258\ttotal: 102ms\tremaining: 301ms\n","76:\tlearn: 1.3470659\ttotal: 103ms\tremaining: 298ms\n","77:\tlearn: 1.3465649\ttotal: 104ms\tremaining: 296ms\n","78:\tlearn: 1.3460706\ttotal: 105ms\tremaining: 292ms\n","79:\tlearn: 1.3455963\ttotal: 105ms\tremaining: 289ms\n","80:\tlearn: 1.3452091\ttotal: 106ms\tremaining: 286ms\n","81:\tlearn: 1.3447338\ttotal: 106ms\tremaining: 283ms\n","82:\tlearn: 1.3441923\ttotal: 107ms\tremaining: 279ms\n","83:\tlearn: 1.3437054\ttotal: 108ms\tremaining: 276ms\n","84:\tlearn: 1.3432640\ttotal: 108ms\tremaining: 273ms\n","85:\tlearn: 1.3427521\ttotal: 109ms\tremaining: 271ms\n","86:\tlearn: 1.3422737\ttotal: 109ms\tremaining: 268ms\n","87:\tlearn: 1.3418506\ttotal: 110ms\tremaining: 265ms\n","88:\tlearn: 1.3413156\ttotal: 111ms\tremaining: 263ms\n","89:\tlearn: 1.3408229\ttotal: 112ms\tremaining: 261ms\n","90:\tlearn: 1.3403856\ttotal: 113ms\tremaining: 259ms\n","91:\tlearn: 1.3398579\ttotal: 113ms\tremaining: 256ms\n","92:\tlearn: 1.3394308\ttotal: 114ms\tremaining: 253ms\n","93:\tlearn: 1.3388860\ttotal: 114ms\tremaining: 251ms\n","94:\tlearn: 1.3383025\ttotal: 115ms\tremaining: 248ms\n","95:\tlearn: 1.3378237\ttotal: 115ms\tremaining: 245ms\n","96:\tlearn: 1.3373184\ttotal: 116ms\tremaining: 242ms\n","97:\tlearn: 1.3367652\ttotal: 116ms\tremaining: 240ms\n","98:\tlearn: 1.3362244\ttotal: 117ms\tremaining: 238ms\n","99:\tlearn: 1.3357293\ttotal: 117ms\tremaining: 235ms\n","100:\tlearn: 1.3352645\ttotal: 118ms\tremaining: 232ms\n","101:\tlearn: 1.3348521\ttotal: 118ms\tremaining: 229ms\n","102:\tlearn: 1.3343402\ttotal: 119ms\tremaining: 227ms\n","103:\tlearn: 1.3339058\ttotal: 119ms\tremaining: 225ms\n","104:\tlearn: 1.3333923\ttotal: 119ms\tremaining: 222ms\n","105:\tlearn: 1.3328774\ttotal: 120ms\tremaining: 220ms\n","106:\tlearn: 1.3323998\ttotal: 120ms\tremaining: 217ms\n","107:\tlearn: 1.3319595\ttotal: 121ms\tremaining: 215ms\n","108:\tlearn: 1.3315523\ttotal: 121ms\tremaining: 213ms\n","109:\tlearn: 1.3310707\ttotal: 122ms\tremaining: 211ms\n","110:\tlearn: 1.3305979\ttotal: 123ms\tremaining: 209ms\n","111:\tlearn: 1.3301131\ttotal: 124ms\tremaining: 208ms\n","112:\tlearn: 1.3296472\ttotal: 124ms\tremaining: 206ms\n","113:\tlearn: 1.3291959\ttotal: 125ms\tremaining: 204ms\n","114:\tlearn: 1.3287421\ttotal: 126ms\tremaining: 203ms\n","115:\tlearn: 1.3283110\ttotal: 127ms\tremaining: 201ms\n","116:\tlearn: 1.3278050\ttotal: 127ms\tremaining: 199ms\n","117:\tlearn: 1.3273546\ttotal: 128ms\tremaining: 197ms\n","118:\tlearn: 1.3269099\ttotal: 128ms\tremaining: 195ms\n","119:\tlearn: 1.3265162\ttotal: 129ms\tremaining: 193ms\n","120:\tlearn: 1.3259893\ttotal: 129ms\tremaining: 191ms\n","121:\tlearn: 1.3254566\ttotal: 130ms\tremaining: 189ms\n","122:\tlearn: 1.3249176\ttotal: 130ms\tremaining: 187ms\n","123:\tlearn: 1.3244533\ttotal: 131ms\tremaining: 186ms\n","124:\tlearn: 1.3238849\ttotal: 131ms\tremaining: 184ms\n","125:\tlearn: 1.3234404\ttotal: 132ms\tremaining: 182ms\n","126:\tlearn: 1.3230075\ttotal: 132ms\tremaining: 180ms\n","127:\tlearn: 1.3224932\ttotal: 133ms\tremaining: 178ms\n","128:\tlearn: 1.3220953\ttotal: 134ms\tremaining: 177ms\n","129:\tlearn: 1.3216616\ttotal: 135ms\tremaining: 176ms\n","130:\tlearn: 1.3211973\ttotal: 135ms\tremaining: 174ms\n","131:\tlearn: 1.3207214\ttotal: 136ms\tremaining: 173ms\n","132:\tlearn: 1.3202710\ttotal: 137ms\tremaining: 171ms\n","133:\tlearn: 1.3198140\ttotal: 137ms\tremaining: 170ms\n","134:\tlearn: 1.3193568\ttotal: 137ms\tremaining: 168ms\n","135:\tlearn: 1.3189214\ttotal: 138ms\tremaining: 167ms\n","136:\tlearn: 1.3184736\ttotal: 139ms\tremaining: 166ms\n","137:\tlearn: 1.3179764\ttotal: 140ms\tremaining: 165ms\n","138:\tlearn: 1.3175637\ttotal: 141ms\tremaining: 163ms\n","139:\tlearn: 1.3171193\ttotal: 142ms\tremaining: 162ms\n","140:\tlearn: 1.3167517\ttotal: 142ms\tremaining: 161ms\n","141:\tlearn: 1.3162766\ttotal: 143ms\tremaining: 160ms\n","142:\tlearn: 1.3158735\ttotal: 144ms\tremaining: 158ms\n","143:\tlearn: 1.3154425\ttotal: 145ms\tremaining: 157ms\n","144:\tlearn: 1.3149486\ttotal: 145ms\tremaining: 155ms\n","145:\tlearn: 1.3144625\ttotal: 146ms\tremaining: 154ms\n","146:\tlearn: 1.3139373\ttotal: 147ms\tremaining: 153ms\n","147:\tlearn: 1.3134322\ttotal: 148ms\tremaining: 152ms\n","148:\tlearn: 1.3130057\ttotal: 149ms\tremaining: 151ms\n","149:\tlearn: 1.3125950\ttotal: 149ms\tremaining: 149ms\n","150:\tlearn: 1.3120950\ttotal: 150ms\tremaining: 148ms\n","151:\tlearn: 1.3117340\ttotal: 150ms\tremaining: 146ms\n","152:\tlearn: 1.3112211\ttotal: 151ms\tremaining: 145ms\n","153:\tlearn: 1.3107131\ttotal: 151ms\tremaining: 143ms\n","154:\tlearn: 1.3102703\ttotal: 152ms\tremaining: 142ms\n","155:\tlearn: 1.3099074\ttotal: 153ms\tremaining: 141ms\n","156:\tlearn: 1.3094124\ttotal: 153ms\tremaining: 140ms\n","157:\tlearn: 1.3089614\ttotal: 157ms\tremaining: 141ms\n","158:\tlearn: 1.3084420\ttotal: 157ms\tremaining: 139ms\n","159:\tlearn: 1.3080162\ttotal: 158ms\tremaining: 138ms\n","160:\tlearn: 1.3075242\ttotal: 159ms\tremaining: 137ms\n","161:\tlearn: 1.3071112\ttotal: 159ms\tremaining: 136ms\n","162:\tlearn: 1.3066473\ttotal: 160ms\tremaining: 134ms\n","163:\tlearn: 1.3062074\ttotal: 160ms\tremaining: 133ms\n","164:\tlearn: 1.3057216\ttotal: 161ms\tremaining: 131ms\n","165:\tlearn: 1.3052322\ttotal: 161ms\tremaining: 130ms\n","166:\tlearn: 1.3047427\ttotal: 162ms\tremaining: 129ms\n","167:\tlearn: 1.3042950\ttotal: 162ms\tremaining: 128ms\n","168:\tlearn: 1.3038869\ttotal: 163ms\tremaining: 126ms\n","169:\tlearn: 1.3034858\ttotal: 163ms\tremaining: 125ms\n","170:\tlearn: 1.3029994\ttotal: 164ms\tremaining: 124ms\n","171:\tlearn: 1.3025603\ttotal: 164ms\tremaining: 122ms\n","172:\tlearn: 1.3021250\ttotal: 165ms\tremaining: 121ms\n","173:\tlearn: 1.3016629\ttotal: 167ms\tremaining: 121ms\n","174:\tlearn: 1.3011738\ttotal: 167ms\tremaining: 119ms\n","175:\tlearn: 1.3007047\ttotal: 168ms\tremaining: 118ms\n","176:\tlearn: 1.3002343\ttotal: 169ms\tremaining: 117ms\n","177:\tlearn: 1.2998001\ttotal: 169ms\tremaining: 116ms\n","178:\tlearn: 1.2993710\ttotal: 170ms\tremaining: 115ms\n","179:\tlearn: 1.2989956\ttotal: 171ms\tremaining: 114ms\n","180:\tlearn: 1.2985481\ttotal: 171ms\tremaining: 113ms\n","181:\tlearn: 1.2980988\ttotal: 172ms\tremaining: 111ms\n","182:\tlearn: 1.2976568\ttotal: 173ms\tremaining: 110ms\n","183:\tlearn: 1.2972389\ttotal: 173ms\tremaining: 109ms\n","184:\tlearn: 1.2968473\ttotal: 174ms\tremaining: 108ms\n","185:\tlearn: 1.2964795\ttotal: 175ms\tremaining: 107ms\n","186:\tlearn: 1.2960169\ttotal: 176ms\tremaining: 106ms\n","187:\tlearn: 1.2955427\ttotal: 176ms\tremaining: 105ms\n","188:\tlearn: 1.2951993\ttotal: 177ms\tremaining: 104ms\n","189:\tlearn: 1.2947806\ttotal: 178ms\tremaining: 103ms\n","190:\tlearn: 1.2943932\ttotal: 179ms\tremaining: 102ms\n","191:\tlearn: 1.2939496\ttotal: 179ms\tremaining: 101ms\n","192:\tlearn: 1.2935760\ttotal: 180ms\tremaining: 99.9ms\n","193:\tlearn: 1.2931510\ttotal: 180ms\tremaining: 98.6ms\n","194:\tlearn: 1.2927709\ttotal: 181ms\tremaining: 97.5ms\n","195:\tlearn: 1.2923325\ttotal: 182ms\tremaining: 96.6ms\n","196:\tlearn: 1.2918885\ttotal: 182ms\tremaining: 95.3ms\n","197:\tlearn: 1.2915058\ttotal: 183ms\tremaining: 94.3ms\n","198:\tlearn: 1.2910745\ttotal: 184ms\tremaining: 93.2ms\n","199:\tlearn: 1.2906740\ttotal: 184ms\tremaining: 92.1ms\n","200:\tlearn: 1.2902373\ttotal: 185ms\tremaining: 90.9ms\n","201:\tlearn: 1.2897736\ttotal: 185ms\tremaining: 89.9ms\n","202:\tlearn: 1.2893462\ttotal: 186ms\tremaining: 88.8ms\n","203:\tlearn: 1.2888814\ttotal: 186ms\tremaining: 87.8ms\n","204:\tlearn: 1.2885045\ttotal: 187ms\tremaining: 86.7ms\n","205:\tlearn: 1.2880533\ttotal: 188ms\tremaining: 85.8ms\n","206:\tlearn: 1.2875991\ttotal: 189ms\tremaining: 84.7ms\n","207:\tlearn: 1.2872066\ttotal: 190ms\tremaining: 83.8ms\n","208:\tlearn: 1.2867850\ttotal: 190ms\tremaining: 82.8ms\n","209:\tlearn: 1.2863472\ttotal: 191ms\tremaining: 81.7ms\n","210:\tlearn: 1.2859978\ttotal: 191ms\tremaining: 80.5ms\n","211:\tlearn: 1.2856181\ttotal: 192ms\tremaining: 79.5ms\n","212:\tlearn: 1.2851930\ttotal: 192ms\tremaining: 78.5ms\n","213:\tlearn: 1.2847748\ttotal: 193ms\tremaining: 77.5ms\n","214:\tlearn: 1.2844083\ttotal: 193ms\tremaining: 76.5ms\n","215:\tlearn: 1.2839864\ttotal: 194ms\tremaining: 75.5ms\n","216:\tlearn: 1.2835906\ttotal: 194ms\tremaining: 74.4ms\n","217:\tlearn: 1.2831620\ttotal: 195ms\tremaining: 73.4ms\n","218:\tlearn: 1.2827834\ttotal: 196ms\tremaining: 72.4ms\n","219:\tlearn: 1.2824687\ttotal: 196ms\tremaining: 71.4ms\n","220:\tlearn: 1.2820776\ttotal: 197ms\tremaining: 70.5ms\n","221:\tlearn: 1.2816805\ttotal: 198ms\tremaining: 69.6ms\n","222:\tlearn: 1.2812629\ttotal: 199ms\tremaining: 68.7ms\n","223:\tlearn: 1.2809203\ttotal: 200ms\tremaining: 67.7ms\n","224:\tlearn: 1.2804899\ttotal: 200ms\tremaining: 66.7ms\n","225:\tlearn: 1.2801012\ttotal: 201ms\tremaining: 65.7ms\n","226:\tlearn: 1.2796969\ttotal: 201ms\tremaining: 64.7ms\n","227:\tlearn: 1.2793193\ttotal: 202ms\tremaining: 63.7ms\n","228:\tlearn: 1.2788764\ttotal: 202ms\tremaining: 62.8ms\n","229:\tlearn: 1.2784358\ttotal: 203ms\tremaining: 61.9ms\n","230:\tlearn: 1.2779910\ttotal: 204ms\tremaining: 61ms\n","231:\tlearn: 1.2775331\ttotal: 205ms\tremaining: 60.2ms\n","232:\tlearn: 1.2771521\ttotal: 206ms\tremaining: 59.3ms\n","233:\tlearn: 1.2767245\ttotal: 207ms\tremaining: 58.3ms\n","234:\tlearn: 1.2763395\ttotal: 207ms\tremaining: 57.4ms\n","235:\tlearn: 1.2758860\ttotal: 208ms\tremaining: 56.3ms\n","236:\tlearn: 1.2754419\ttotal: 208ms\tremaining: 55.4ms\n","237:\tlearn: 1.2750542\ttotal: 209ms\tremaining: 54.4ms\n","238:\tlearn: 1.2746139\ttotal: 210ms\tremaining: 53.5ms\n","239:\tlearn: 1.2742171\ttotal: 210ms\tremaining: 52.5ms\n","240:\tlearn: 1.2738216\ttotal: 211ms\tremaining: 51.6ms\n","241:\tlearn: 1.2734523\ttotal: 211ms\tremaining: 50.7ms\n","242:\tlearn: 1.2730711\ttotal: 212ms\tremaining: 49.7ms\n","243:\tlearn: 1.2726675\ttotal: 213ms\tremaining: 48.8ms\n","244:\tlearn: 1.2723120\ttotal: 213ms\tremaining: 47.9ms\n","245:\tlearn: 1.2719203\ttotal: 214ms\tremaining: 47ms\n","246:\tlearn: 1.2715217\ttotal: 215ms\tremaining: 46.1ms\n","247:\tlearn: 1.2711079\ttotal: 216ms\tremaining: 45.3ms\n","248:\tlearn: 1.2706995\ttotal: 216ms\tremaining: 44.3ms\n","249:\tlearn: 1.2703227\ttotal: 217ms\tremaining: 43.4ms\n","250:\tlearn: 1.2699214\ttotal: 218ms\tremaining: 42.5ms\n","251:\tlearn: 1.2695073\ttotal: 218ms\tremaining: 41.6ms\n","252:\tlearn: 1.2691730\ttotal: 219ms\tremaining: 40.7ms\n","253:\tlearn: 1.2688244\ttotal: 220ms\tremaining: 39.8ms\n","254:\tlearn: 1.2683344\ttotal: 220ms\tremaining: 38.9ms\n","255:\tlearn: 1.2679600\ttotal: 221ms\tremaining: 37.9ms\n","256:\tlearn: 1.2675262\ttotal: 221ms\tremaining: 37ms\n","257:\tlearn: 1.2671719\ttotal: 222ms\tremaining: 36.1ms\n","258:\tlearn: 1.2667534\ttotal: 222ms\tremaining: 35.2ms\n","259:\tlearn: 1.2663821\ttotal: 223ms\tremaining: 34.4ms\n","260:\tlearn: 1.2659488\ttotal: 224ms\tremaining: 33.5ms\n","261:\tlearn: 1.2655261\ttotal: 227ms\tremaining: 33ms\n","262:\tlearn: 1.2651028\ttotal: 228ms\tremaining: 32.1ms\n","263:\tlearn: 1.2646824\ttotal: 228ms\tremaining: 31.2ms\n","264:\tlearn: 1.2643278\ttotal: 229ms\tremaining: 30.3ms\n","265:\tlearn: 1.2639200\ttotal: 230ms\tremaining: 29.4ms\n","266:\tlearn: 1.2635969\ttotal: 230ms\tremaining: 28.5ms\n","267:\tlearn: 1.2632188\ttotal: 231ms\tremaining: 27.6ms\n","268:\tlearn: 1.2627814\ttotal: 232ms\tremaining: 26.7ms\n","269:\tlearn: 1.2623521\ttotal: 232ms\tremaining: 25.8ms\n","270:\tlearn: 1.2619600\ttotal: 233ms\tremaining: 24.9ms\n","271:\tlearn: 1.2615641\ttotal: 234ms\tremaining: 24.1ms\n","272:\tlearn: 1.2611659\ttotal: 234ms\tremaining: 23.1ms\n","273:\tlearn: 1.2607720\ttotal: 235ms\tremaining: 22.3ms\n","274:\tlearn: 1.2604175\ttotal: 236ms\tremaining: 21.4ms\n","275:\tlearn: 1.2600123\ttotal: 237ms\tremaining: 20.6ms\n","276:\tlearn: 1.2596319\ttotal: 237ms\tremaining: 19.7ms\n","277:\tlearn: 1.2591505\ttotal: 238ms\tremaining: 18.8ms\n","278:\tlearn: 1.2587545\ttotal: 238ms\tremaining: 17.9ms\n","279:\tlearn: 1.2584118\ttotal: 239ms\tremaining: 17.1ms\n","280:\tlearn: 1.2580306\ttotal: 239ms\tremaining: 16.2ms\n","281:\tlearn: 1.2576416\ttotal: 240ms\tremaining: 15.3ms\n","282:\tlearn: 1.2571998\ttotal: 241ms\tremaining: 14.4ms\n","283:\tlearn: 1.2568442\ttotal: 241ms\tremaining: 13.6ms\n","284:\tlearn: 1.2564347\ttotal: 242ms\tremaining: 12.7ms\n","285:\tlearn: 1.2560936\ttotal: 243ms\tremaining: 11.9ms\n","286:\tlearn: 1.2557595\ttotal: 243ms\tremaining: 11ms\n","287:\tlearn: 1.2553057\ttotal: 244ms\tremaining: 10.2ms\n","288:\tlearn: 1.2549195\ttotal: 244ms\tremaining: 9.3ms\n","289:\tlearn: 1.2545298\ttotal: 245ms\tremaining: 8.45ms\n","290:\tlearn: 1.2541207\ttotal: 246ms\tremaining: 7.6ms\n","291:\tlearn: 1.2537744\ttotal: 246ms\tremaining: 6.75ms\n","292:\tlearn: 1.2534330\ttotal: 247ms\tremaining: 5.91ms\n","293:\tlearn: 1.2530612\ttotal: 248ms\tremaining: 5.07ms\n","294:\tlearn: 1.2526685\ttotal: 249ms\tremaining: 4.22ms\n","295:\tlearn: 1.2522868\ttotal: 250ms\tremaining: 3.38ms\n","296:\tlearn: 1.2519026\ttotal: 250ms\tremaining: 2.53ms\n","297:\tlearn: 1.2515607\ttotal: 251ms\tremaining: 1.68ms\n","298:\tlearn: 1.2511485\ttotal: 252ms\tremaining: 841us\n","299:\tlearn: 1.2507356\ttotal: 253ms\tremaining: 0us\n","0:\tlearn: 1.3858312\ttotal: 2.82ms\tremaining: 842ms\n","1:\tlearn: 1.3852616\ttotal: 8.69ms\tremaining: 1.29s\n","2:\tlearn: 1.3846293\ttotal: 10.5ms\tremaining: 1.04s\n","3:\tlearn: 1.3841678\ttotal: 17.5ms\tremaining: 1.29s\n","4:\tlearn: 1.3836148\ttotal: 18.4ms\tremaining: 1.09s\n","5:\tlearn: 1.3831350\ttotal: 19.1ms\tremaining: 936ms\n","6:\tlearn: 1.3825779\ttotal: 20.3ms\tremaining: 848ms\n","7:\tlearn: 1.3819713\ttotal: 21.1ms\tremaining: 769ms\n","8:\tlearn: 1.3813898\ttotal: 22.5ms\tremaining: 726ms\n","9:\tlearn: 1.3808407\ttotal: 24.1ms\tremaining: 700ms\n","10:\tlearn: 1.3803672\ttotal: 31.5ms\tremaining: 826ms\n","11:\tlearn: 1.3797953\ttotal: 32.8ms\tremaining: 786ms\n","12:\tlearn: 1.3791906\ttotal: 34ms\tremaining: 751ms\n","13:\tlearn: 1.3786536\ttotal: 35.3ms\tremaining: 722ms\n","14:\tlearn: 1.3781137\ttotal: 37.5ms\tremaining: 713ms\n","15:\tlearn: 1.3775680\ttotal: 44.2ms\tremaining: 784ms\n","16:\tlearn: 1.3770289\ttotal: 45.5ms\tremaining: 757ms\n","17:\tlearn: 1.3764630\ttotal: 46.1ms\tremaining: 723ms\n","18:\tlearn: 1.3758783\ttotal: 47.4ms\tremaining: 701ms\n","19:\tlearn: 1.3753782\ttotal: 49ms\tremaining: 686ms\n","20:\tlearn: 1.3748214\ttotal: 51.1ms\tremaining: 679ms\n","21:\tlearn: 1.3743148\ttotal: 57.8ms\tremaining: 730ms\n","22:\tlearn: 1.3737663\ttotal: 59.1ms\tremaining: 712ms\n","23:\tlearn: 1.3733229\ttotal: 60.3ms\tremaining: 694ms\n","24:\tlearn: 1.3727833\ttotal: 62.4ms\tremaining: 687ms\n","25:\tlearn: 1.3723286\ttotal: 66ms\tremaining: 696ms\n","26:\tlearn: 1.3717831\ttotal: 68.5ms\tremaining: 693ms\n","27:\tlearn: 1.3712413\ttotal: 72.9ms\tremaining: 708ms\n","28:\tlearn: 1.3706847\ttotal: 77.5ms\tremaining: 724ms\n","29:\tlearn: 1.3702149\ttotal: 82.9ms\tremaining: 746ms\n","30:\tlearn: 1.3697450\ttotal: 86.1ms\tremaining: 747ms\n","31:\tlearn: 1.3692165\ttotal: 94.3ms\tremaining: 790ms\n","32:\tlearn: 1.3686286\ttotal: 95.2ms\tremaining: 770ms\n","33:\tlearn: 1.3680845\ttotal: 96.4ms\tremaining: 755ms\n","34:\tlearn: 1.3675737\ttotal: 97.7ms\tremaining: 740ms\n","35:\tlearn: 1.3670246\ttotal: 99.7ms\tremaining: 731ms\n","36:\tlearn: 1.3665433\ttotal: 102ms\tremaining: 724ms\n","37:\tlearn: 1.3660791\ttotal: 109ms\tremaining: 749ms\n","38:\tlearn: 1.3655518\ttotal: 109ms\tremaining: 731ms\n","39:\tlearn: 1.3649925\ttotal: 111ms\tremaining: 719ms\n","40:\tlearn: 1.3644808\ttotal: 113ms\tremaining: 711ms\n","41:\tlearn: 1.3639140\ttotal: 115ms\tremaining: 705ms\n","42:\tlearn: 1.3633824\ttotal: 119ms\tremaining: 709ms\n","43:\tlearn: 1.3628381\ttotal: 124ms\tremaining: 724ms\n","44:\tlearn: 1.3623401\ttotal: 128ms\tremaining: 727ms\n","45:\tlearn: 1.3618904\ttotal: 132ms\tremaining: 731ms\n","46:\tlearn: 1.3613980\ttotal: 134ms\tremaining: 722ms\n","47:\tlearn: 1.3608849\ttotal: 140ms\tremaining: 734ms\n","48:\tlearn: 1.3603390\ttotal: 153ms\tremaining: 784ms\n","49:\tlearn: 1.3598492\ttotal: 154ms\tremaining: 771ms\n","50:\tlearn: 1.3593848\ttotal: 154ms\tremaining: 754ms\n","51:\tlearn: 1.3589576\ttotal: 155ms\tremaining: 740ms\n","52:\tlearn: 1.3583824\ttotal: 156ms\tremaining: 727ms\n","53:\tlearn: 1.3578505\ttotal: 157ms\tremaining: 715ms\n","54:\tlearn: 1.3573618\ttotal: 158ms\tremaining: 704ms\n","55:\tlearn: 1.3568481\ttotal: 159ms\tremaining: 693ms\n","56:\tlearn: 1.3563498\ttotal: 160ms\tremaining: 682ms\n","57:\tlearn: 1.3558898\ttotal: 161ms\tremaining: 671ms\n","58:\tlearn: 1.3554206\ttotal: 162ms\tremaining: 660ms\n","59:\tlearn: 1.3548832\ttotal: 162ms\tremaining: 649ms\n","60:\tlearn: 1.3543509\ttotal: 163ms\tremaining: 639ms\n","61:\tlearn: 1.3537715\ttotal: 164ms\tremaining: 628ms\n","62:\tlearn: 1.3532543\ttotal: 164ms\tremaining: 617ms\n","63:\tlearn: 1.3528042\ttotal: 165ms\tremaining: 607ms\n","64:\tlearn: 1.3523983\ttotal: 165ms\tremaining: 597ms\n","65:\tlearn: 1.3519478\ttotal: 166ms\tremaining: 588ms\n","66:\tlearn: 1.3515426\ttotal: 167ms\tremaining: 580ms\n","67:\tlearn: 1.3509822\ttotal: 168ms\tremaining: 572ms\n","68:\tlearn: 1.3504829\ttotal: 175ms\tremaining: 586ms\n","69:\tlearn: 1.3500518\ttotal: 175ms\tremaining: 576ms\n","70:\tlearn: 1.3495938\ttotal: 176ms\tremaining: 568ms\n","71:\tlearn: 1.3491210\ttotal: 177ms\tremaining: 560ms\n","72:\tlearn: 1.3486431\ttotal: 177ms\tremaining: 551ms\n","73:\tlearn: 1.3480839\ttotal: 178ms\tremaining: 543ms\n","74:\tlearn: 1.3476553\ttotal: 179ms\tremaining: 536ms\n","75:\tlearn: 1.3471973\ttotal: 182ms\tremaining: 537ms\n","76:\tlearn: 1.3467490\ttotal: 183ms\tremaining: 530ms\n","77:\tlearn: 1.3462795\ttotal: 183ms\tremaining: 522ms\n","78:\tlearn: 1.3457269\ttotal: 185ms\tremaining: 517ms\n","79:\tlearn: 1.3452261\ttotal: 186ms\tremaining: 511ms\n","80:\tlearn: 1.3447405\ttotal: 187ms\tremaining: 505ms\n","81:\tlearn: 1.3442150\ttotal: 187ms\tremaining: 498ms\n","82:\tlearn: 1.3437881\ttotal: 190ms\tremaining: 496ms\n","83:\tlearn: 1.3432687\ttotal: 191ms\tremaining: 490ms\n","84:\tlearn: 1.3428465\ttotal: 191ms\tremaining: 484ms\n","85:\tlearn: 1.3423919\ttotal: 192ms\tremaining: 477ms\n","86:\tlearn: 1.3419320\ttotal: 193ms\tremaining: 471ms\n","87:\tlearn: 1.3413984\ttotal: 193ms\tremaining: 465ms\n","88:\tlearn: 1.3409514\ttotal: 193ms\tremaining: 459ms\n","89:\tlearn: 1.3403612\ttotal: 194ms\tremaining: 453ms\n","90:\tlearn: 1.3399138\ttotal: 195ms\tremaining: 448ms\n","91:\tlearn: 1.3395033\ttotal: 196ms\tremaining: 442ms\n","92:\tlearn: 1.3390261\ttotal: 196ms\tremaining: 436ms\n","93:\tlearn: 1.3385932\ttotal: 197ms\tremaining: 431ms\n","94:\tlearn: 1.3380948\ttotal: 197ms\tremaining: 425ms\n","95:\tlearn: 1.3375815\ttotal: 198ms\tremaining: 421ms\n","96:\tlearn: 1.3371345\ttotal: 199ms\tremaining: 416ms\n","97:\tlearn: 1.3365956\ttotal: 200ms\tremaining: 412ms\n","98:\tlearn: 1.3360885\ttotal: 201ms\tremaining: 408ms\n","99:\tlearn: 1.3356670\ttotal: 202ms\tremaining: 403ms\n","100:\tlearn: 1.3351018\ttotal: 202ms\tremaining: 398ms\n","101:\tlearn: 1.3346679\ttotal: 203ms\tremaining: 394ms\n","102:\tlearn: 1.3342332\ttotal: 204ms\tremaining: 390ms\n","103:\tlearn: 1.3337037\ttotal: 204ms\tremaining: 385ms\n","104:\tlearn: 1.3332130\ttotal: 205ms\tremaining: 380ms\n","105:\tlearn: 1.3327307\ttotal: 205ms\tremaining: 375ms\n","106:\tlearn: 1.3322922\ttotal: 206ms\tremaining: 371ms\n","107:\tlearn: 1.3317610\ttotal: 207ms\tremaining: 367ms\n","108:\tlearn: 1.3313165\ttotal: 207ms\tremaining: 363ms\n","109:\tlearn: 1.3308358\ttotal: 214ms\tremaining: 369ms\n","110:\tlearn: 1.3304136\ttotal: 215ms\tremaining: 365ms\n","111:\tlearn: 1.3299048\ttotal: 215ms\tremaining: 361ms\n","112:\tlearn: 1.3294099\ttotal: 215ms\tremaining: 357ms\n","113:\tlearn: 1.3290477\ttotal: 216ms\tremaining: 353ms\n","114:\tlearn: 1.3285290\ttotal: 217ms\tremaining: 349ms\n","115:\tlearn: 1.3281179\ttotal: 218ms\tremaining: 345ms\n","116:\tlearn: 1.3276462\ttotal: 221ms\tremaining: 346ms\n","117:\tlearn: 1.3272266\ttotal: 222ms\tremaining: 342ms\n","118:\tlearn: 1.3267492\ttotal: 222ms\tremaining: 338ms\n","119:\tlearn: 1.3263122\ttotal: 223ms\tremaining: 335ms\n","120:\tlearn: 1.3259081\ttotal: 224ms\tremaining: 331ms\n","121:\tlearn: 1.3254659\ttotal: 224ms\tremaining: 327ms\n","122:\tlearn: 1.3249253\ttotal: 225ms\tremaining: 324ms\n","123:\tlearn: 1.3244801\ttotal: 226ms\tremaining: 320ms\n","124:\tlearn: 1.3239350\ttotal: 226ms\tremaining: 316ms\n","125:\tlearn: 1.3234553\ttotal: 227ms\tremaining: 313ms\n","126:\tlearn: 1.3230367\ttotal: 229ms\tremaining: 312ms\n","127:\tlearn: 1.3225776\ttotal: 232ms\tremaining: 312ms\n","128:\tlearn: 1.3220876\ttotal: 234ms\tremaining: 310ms\n","129:\tlearn: 1.3216237\ttotal: 235ms\tremaining: 308ms\n","130:\tlearn: 1.3211670\ttotal: 236ms\tremaining: 305ms\n","131:\tlearn: 1.3207430\ttotal: 238ms\tremaining: 303ms\n","132:\tlearn: 1.3203947\ttotal: 239ms\tremaining: 300ms\n","133:\tlearn: 1.3198453\ttotal: 241ms\tremaining: 299ms\n","134:\tlearn: 1.3193991\ttotal: 242ms\tremaining: 296ms\n","135:\tlearn: 1.3189112\ttotal: 244ms\tremaining: 294ms\n","136:\tlearn: 1.3184579\ttotal: 245ms\tremaining: 292ms\n","137:\tlearn: 1.3180142\ttotal: 247ms\tremaining: 290ms\n","138:\tlearn: 1.3175955\ttotal: 249ms\tremaining: 289ms\n","139:\tlearn: 1.3171435\ttotal: 251ms\tremaining: 286ms\n","140:\tlearn: 1.3166723\ttotal: 251ms\tremaining: 284ms\n","141:\tlearn: 1.3161907\ttotal: 257ms\tremaining: 285ms\n","142:\tlearn: 1.3157712\ttotal: 273ms\tremaining: 299ms\n","143:\tlearn: 1.3153327\ttotal: 274ms\tremaining: 297ms\n","144:\tlearn: 1.3149215\ttotal: 275ms\tremaining: 294ms\n","145:\tlearn: 1.3144328\ttotal: 277ms\tremaining: 292ms\n","146:\tlearn: 1.3139997\ttotal: 279ms\tremaining: 290ms\n","147:\tlearn: 1.3135439\ttotal: 280ms\tremaining: 288ms\n","148:\tlearn: 1.3131055\ttotal: 283ms\tremaining: 287ms\n","149:\tlearn: 1.3126937\ttotal: 284ms\tremaining: 284ms\n","150:\tlearn: 1.3122832\ttotal: 286ms\tremaining: 282ms\n","151:\tlearn: 1.3118619\ttotal: 287ms\tremaining: 280ms\n","152:\tlearn: 1.3114295\ttotal: 288ms\tremaining: 276ms\n","153:\tlearn: 1.3109979\ttotal: 289ms\tremaining: 274ms\n","154:\tlearn: 1.3104749\ttotal: 290ms\tremaining: 272ms\n","155:\tlearn: 1.3099919\ttotal: 292ms\tremaining: 269ms\n","156:\tlearn: 1.3095570\ttotal: 293ms\tremaining: 267ms\n","157:\tlearn: 1.3091014\ttotal: 296ms\tremaining: 266ms\n","158:\tlearn: 1.3086359\ttotal: 301ms\tremaining: 267ms\n","159:\tlearn: 1.3081183\ttotal: 302ms\tremaining: 264ms\n","160:\tlearn: 1.3076173\ttotal: 304ms\tremaining: 263ms\n","161:\tlearn: 1.3071189\ttotal: 306ms\tremaining: 261ms\n","162:\tlearn: 1.3066318\ttotal: 308ms\tremaining: 259ms\n","163:\tlearn: 1.3062283\ttotal: 316ms\tremaining: 262ms\n","164:\tlearn: 1.3058314\ttotal: 318ms\tremaining: 260ms\n","165:\tlearn: 1.3053801\ttotal: 320ms\tremaining: 258ms\n","166:\tlearn: 1.3049611\ttotal: 322ms\tremaining: 256ms\n","167:\tlearn: 1.3045612\ttotal: 323ms\tremaining: 254ms\n","168:\tlearn: 1.3041246\ttotal: 325ms\tremaining: 252ms\n","169:\tlearn: 1.3037097\ttotal: 326ms\tremaining: 249ms\n","170:\tlearn: 1.3033006\ttotal: 327ms\tremaining: 247ms\n","171:\tlearn: 1.3028162\ttotal: 329ms\tremaining: 245ms\n","172:\tlearn: 1.3024017\ttotal: 330ms\tremaining: 242ms\n","173:\tlearn: 1.3018939\ttotal: 332ms\tremaining: 240ms\n","174:\tlearn: 1.3015157\ttotal: 333ms\tremaining: 238ms\n","175:\tlearn: 1.3010852\ttotal: 338ms\tremaining: 238ms\n","176:\tlearn: 1.3006364\ttotal: 339ms\tremaining: 236ms\n","177:\tlearn: 1.3002176\ttotal: 341ms\tremaining: 234ms\n","178:\tlearn: 1.2998290\ttotal: 343ms\tremaining: 232ms\n","179:\tlearn: 1.2994369\ttotal: 345ms\tremaining: 230ms\n","180:\tlearn: 1.2990389\ttotal: 347ms\tremaining: 228ms\n","181:\tlearn: 1.2986598\ttotal: 349ms\tremaining: 226ms\n","182:\tlearn: 1.2982256\ttotal: 356ms\tremaining: 227ms\n","183:\tlearn: 1.2977600\ttotal: 357ms\tremaining: 225ms\n","184:\tlearn: 1.2973001\ttotal: 359ms\tremaining: 223ms\n","185:\tlearn: 1.2968554\ttotal: 361ms\tremaining: 221ms\n","186:\tlearn: 1.2964599\ttotal: 363ms\tremaining: 219ms\n","187:\tlearn: 1.2960129\ttotal: 365ms\tremaining: 218ms\n","188:\tlearn: 1.2955733\ttotal: 367ms\tremaining: 216ms\n","189:\tlearn: 1.2952120\ttotal: 370ms\tremaining: 214ms\n","190:\tlearn: 1.2948325\ttotal: 372ms\tremaining: 212ms\n","191:\tlearn: 1.2943797\ttotal: 374ms\tremaining: 210ms\n","192:\tlearn: 1.2939427\ttotal: 382ms\tremaining: 212ms\n","193:\tlearn: 1.2935104\ttotal: 384ms\tremaining: 210ms\n","194:\tlearn: 1.2931045\ttotal: 386ms\tremaining: 208ms\n","195:\tlearn: 1.2926370\ttotal: 388ms\tremaining: 206ms\n","196:\tlearn: 1.2922189\ttotal: 390ms\tremaining: 204ms\n","197:\tlearn: 1.2917766\ttotal: 392ms\tremaining: 202ms\n","198:\tlearn: 1.2913437\ttotal: 393ms\tremaining: 199ms\n","199:\tlearn: 1.2909630\ttotal: 395ms\tremaining: 197ms\n","200:\tlearn: 1.2905387\ttotal: 397ms\tremaining: 195ms\n","201:\tlearn: 1.2901232\ttotal: 399ms\tremaining: 193ms\n","202:\tlearn: 1.2897711\ttotal: 401ms\tremaining: 192ms\n","203:\tlearn: 1.2893029\ttotal: 402ms\tremaining: 189ms\n","204:\tlearn: 1.2888641\ttotal: 404ms\tremaining: 187ms\n","205:\tlearn: 1.2884297\ttotal: 406ms\tremaining: 185ms\n","206:\tlearn: 1.2879891\ttotal: 408ms\tremaining: 183ms\n","207:\tlearn: 1.2874803\ttotal: 410ms\tremaining: 181ms\n","208:\tlearn: 1.2870545\ttotal: 412ms\tremaining: 179ms\n","209:\tlearn: 1.2866353\ttotal: 414ms\tremaining: 177ms\n","210:\tlearn: 1.2861753\ttotal: 416ms\tremaining: 175ms\n","211:\tlearn: 1.2857750\ttotal: 418ms\tremaining: 173ms\n","212:\tlearn: 1.2853261\ttotal: 420ms\tremaining: 171ms\n","213:\tlearn: 1.2848893\ttotal: 422ms\tremaining: 169ms\n","214:\tlearn: 1.2845182\ttotal: 423ms\tremaining: 167ms\n","215:\tlearn: 1.2840784\ttotal: 425ms\tremaining: 165ms\n","216:\tlearn: 1.2836708\ttotal: 427ms\tremaining: 163ms\n","217:\tlearn: 1.2832631\ttotal: 429ms\tremaining: 161ms\n","218:\tlearn: 1.2828483\ttotal: 431ms\tremaining: 159ms\n","219:\tlearn: 1.2825118\ttotal: 433ms\tremaining: 157ms\n","220:\tlearn: 1.2820816\ttotal: 435ms\tremaining: 155ms\n","221:\tlearn: 1.2817345\ttotal: 436ms\tremaining: 153ms\n","222:\tlearn: 1.2813042\ttotal: 438ms\tremaining: 151ms\n","223:\tlearn: 1.2809272\ttotal: 439ms\tremaining: 149ms\n","224:\tlearn: 1.2805462\ttotal: 441ms\tremaining: 147ms\n","225:\tlearn: 1.2801019\ttotal: 442ms\tremaining: 145ms\n","226:\tlearn: 1.2796732\ttotal: 443ms\tremaining: 142ms\n","227:\tlearn: 1.2792703\ttotal: 445ms\tremaining: 141ms\n","228:\tlearn: 1.2788447\ttotal: 447ms\tremaining: 139ms\n","229:\tlearn: 1.2784261\ttotal: 449ms\tremaining: 137ms\n","230:\tlearn: 1.2780113\ttotal: 450ms\tremaining: 135ms\n","231:\tlearn: 1.2776212\ttotal: 452ms\tremaining: 133ms\n","232:\tlearn: 1.2772103\ttotal: 454ms\tremaining: 131ms\n","233:\tlearn: 1.2768254\ttotal: 456ms\tremaining: 129ms\n","234:\tlearn: 1.2764203\ttotal: 458ms\tremaining: 127ms\n","235:\tlearn: 1.2760562\ttotal: 459ms\tremaining: 124ms\n","236:\tlearn: 1.2756543\ttotal: 460ms\tremaining: 122ms\n","237:\tlearn: 1.2752587\ttotal: 462ms\tremaining: 120ms\n","238:\tlearn: 1.2748370\ttotal: 464ms\tremaining: 118ms\n","239:\tlearn: 1.2744073\ttotal: 466ms\tremaining: 116ms\n","240:\tlearn: 1.2739747\ttotal: 467ms\tremaining: 114ms\n","241:\tlearn: 1.2735078\ttotal: 469ms\tremaining: 112ms\n","242:\tlearn: 1.2731443\ttotal: 471ms\tremaining: 111ms\n","243:\tlearn: 1.2727374\ttotal: 473ms\tremaining: 109ms\n","244:\tlearn: 1.2724102\ttotal: 490ms\tremaining: 110ms\n","245:\tlearn: 1.2719715\ttotal: 492ms\tremaining: 108ms\n","246:\tlearn: 1.2715689\ttotal: 494ms\tremaining: 106ms\n","247:\tlearn: 1.2711771\ttotal: 498ms\tremaining: 104ms\n","248:\tlearn: 1.2707656\ttotal: 499ms\tremaining: 102ms\n","249:\tlearn: 1.2704338\ttotal: 501ms\tremaining: 100ms\n","250:\tlearn: 1.2699592\ttotal: 502ms\tremaining: 98ms\n","251:\tlearn: 1.2695188\ttotal: 503ms\tremaining: 95.8ms\n","252:\tlearn: 1.2691626\ttotal: 504ms\tremaining: 93.6ms\n","253:\tlearn: 1.2687522\ttotal: 505ms\tremaining: 91.5ms\n","254:\tlearn: 1.2683337\ttotal: 506ms\tremaining: 89.4ms\n","255:\tlearn: 1.2679570\ttotal: 508ms\tremaining: 87.2ms\n","256:\tlearn: 1.2675430\ttotal: 510ms\tremaining: 85.3ms\n","257:\tlearn: 1.2671731\ttotal: 512ms\tremaining: 83.3ms\n","258:\tlearn: 1.2667501\ttotal: 514ms\tremaining: 81.4ms\n","259:\tlearn: 1.2663301\ttotal: 516ms\tremaining: 79.4ms\n","260:\tlearn: 1.2658761\ttotal: 518ms\tremaining: 77.3ms\n","261:\tlearn: 1.2655018\ttotal: 520ms\tremaining: 75.3ms\n","262:\tlearn: 1.2650907\ttotal: 521ms\tremaining: 73.3ms\n","263:\tlearn: 1.2646813\ttotal: 521ms\tremaining: 71.1ms\n","264:\tlearn: 1.2643640\ttotal: 523ms\tremaining: 69ms\n","265:\tlearn: 1.2639254\ttotal: 525ms\tremaining: 67.1ms\n","266:\tlearn: 1.2635831\ttotal: 527ms\tremaining: 65.1ms\n","267:\tlearn: 1.2631093\ttotal: 528ms\tremaining: 63ms\n","268:\tlearn: 1.2627466\ttotal: 529ms\tremaining: 60.9ms\n","269:\tlearn: 1.2624152\ttotal: 530ms\tremaining: 58.9ms\n","270:\tlearn: 1.2619895\ttotal: 532ms\tremaining: 56.9ms\n","271:\tlearn: 1.2616112\ttotal: 534ms\tremaining: 54.9ms\n","272:\tlearn: 1.2612089\ttotal: 535ms\tremaining: 52.9ms\n","273:\tlearn: 1.2607854\ttotal: 536ms\tremaining: 50.9ms\n","274:\tlearn: 1.2603740\ttotal: 538ms\tremaining: 48.9ms\n","275:\tlearn: 1.2599397\ttotal: 540ms\tremaining: 47ms\n","276:\tlearn: 1.2595640\ttotal: 542ms\tremaining: 45ms\n","277:\tlearn: 1.2592177\ttotal: 544ms\tremaining: 43.1ms\n","278:\tlearn: 1.2588873\ttotal: 546ms\tremaining: 41.1ms\n","279:\tlearn: 1.2584855\ttotal: 548ms\tremaining: 39.1ms\n","280:\tlearn: 1.2581692\ttotal: 550ms\tremaining: 37.2ms\n","281:\tlearn: 1.2577469\ttotal: 551ms\tremaining: 35.2ms\n","282:\tlearn: 1.2573505\ttotal: 553ms\tremaining: 33.2ms\n","283:\tlearn: 1.2569587\ttotal: 555ms\tremaining: 31.3ms\n","284:\tlearn: 1.2565593\ttotal: 557ms\tremaining: 29.3ms\n","285:\tlearn: 1.2561679\ttotal: 560ms\tremaining: 27.4ms\n","286:\tlearn: 1.2557381\ttotal: 562ms\tremaining: 25.4ms\n","287:\tlearn: 1.2553509\ttotal: 564ms\tremaining: 23.5ms\n","288:\tlearn: 1.2549888\ttotal: 565ms\tremaining: 21.5ms\n","289:\tlearn: 1.2545857\ttotal: 567ms\tremaining: 19.5ms\n","290:\tlearn: 1.2541855\ttotal: 569ms\tremaining: 17.6ms\n","291:\tlearn: 1.2537718\ttotal: 571ms\tremaining: 15.6ms\n","292:\tlearn: 1.2533566\ttotal: 573ms\tremaining: 13.7ms\n","293:\tlearn: 1.2530097\ttotal: 574ms\tremaining: 11.7ms\n","294:\tlearn: 1.2525994\ttotal: 576ms\tremaining: 9.76ms\n","295:\tlearn: 1.2522013\ttotal: 578ms\tremaining: 7.81ms\n","296:\tlearn: 1.2518348\ttotal: 579ms\tremaining: 5.85ms\n","297:\tlearn: 1.2514217\ttotal: 580ms\tremaining: 3.89ms\n","298:\tlearn: 1.2511245\ttotal: 582ms\tremaining: 1.95ms\n","299:\tlearn: 1.2506842\ttotal: 584ms\tremaining: 0us\n","0:\tlearn: 1.3390423\ttotal: 1.16ms\tremaining: 346ms\n","1:\tlearn: 1.2879849\ttotal: 1.68ms\tremaining: 250ms\n","2:\tlearn: 1.2500865\ttotal: 3.2ms\tremaining: 316ms\n","3:\tlearn: 1.2151858\ttotal: 5.38ms\tremaining: 398ms\n","4:\tlearn: 1.1878806\ttotal: 7.86ms\tremaining: 464ms\n","5:\tlearn: 1.1548161\ttotal: 10.2ms\tremaining: 502ms\n","6:\tlearn: 1.1314082\ttotal: 11.9ms\tremaining: 498ms\n","7:\tlearn: 1.1039193\ttotal: 13.5ms\tremaining: 494ms\n","8:\tlearn: 1.0814901\ttotal: 15.7ms\tremaining: 507ms\n","9:\tlearn: 1.0599009\ttotal: 17.6ms\tremaining: 510ms\n","10:\tlearn: 1.0419239\ttotal: 26.9ms\tremaining: 707ms\n","11:\tlearn: 1.0276324\ttotal: 28.6ms\tremaining: 685ms\n","12:\tlearn: 1.0141629\ttotal: 29.9ms\tremaining: 659ms\n","13:\tlearn: 0.9974350\ttotal: 32.1ms\tremaining: 655ms\n","14:\tlearn: 0.9818767\ttotal: 34ms\tremaining: 646ms\n","15:\tlearn: 0.9710734\ttotal: 36.1ms\tremaining: 641ms\n","16:\tlearn: 0.9569269\ttotal: 38.2ms\tremaining: 636ms\n","17:\tlearn: 0.9459141\ttotal: 40.6ms\tremaining: 636ms\n","18:\tlearn: 0.9393286\ttotal: 42.1ms\tremaining: 623ms\n","19:\tlearn: 0.9308204\ttotal: 43.3ms\tremaining: 606ms\n","20:\tlearn: 0.9189448\ttotal: 45.5ms\tremaining: 604ms\n","21:\tlearn: 0.9089858\ttotal: 47.7ms\tremaining: 602ms\n","22:\tlearn: 0.9013571\ttotal: 50ms\tremaining: 602ms\n","23:\tlearn: 0.8959347\ttotal: 51.6ms\tremaining: 593ms\n","24:\tlearn: 0.8890687\ttotal: 53.3ms\tremaining: 586ms\n","25:\tlearn: 0.8807738\ttotal: 57.1ms\tremaining: 602ms\n","26:\tlearn: 0.8770348\ttotal: 59ms\tremaining: 597ms\n","27:\tlearn: 0.8710657\ttotal: 60.8ms\tremaining: 590ms\n","28:\tlearn: 0.8644759\ttotal: 62.6ms\tremaining: 585ms\n","29:\tlearn: 0.8605750\ttotal: 64.3ms\tremaining: 578ms\n","30:\tlearn: 0.8577928\ttotal: 66.4ms\tremaining: 576ms\n","31:\tlearn: 0.8517820\ttotal: 68.3ms\tremaining: 572ms\n","32:\tlearn: 0.8462260\ttotal: 70.5ms\tremaining: 571ms\n","33:\tlearn: 0.8417409\ttotal: 72.5ms\tremaining: 567ms\n","34:\tlearn: 0.8379107\ttotal: 75.3ms\tremaining: 570ms\n","35:\tlearn: 0.8315062\ttotal: 77.6ms\tremaining: 569ms\n","36:\tlearn: 0.8272659\ttotal: 79.7ms\tremaining: 567ms\n","37:\tlearn: 0.8254707\ttotal: 81.1ms\tremaining: 559ms\n","38:\tlearn: 0.8215155\ttotal: 82.2ms\tremaining: 550ms\n","39:\tlearn: 0.8188523\ttotal: 84.3ms\tremaining: 548ms\n","40:\tlearn: 0.8159251\ttotal: 85.8ms\tremaining: 542ms\n","41:\tlearn: 0.8099128\ttotal: 87.6ms\tremaining: 538ms\n","42:\tlearn: 0.8078701\ttotal: 89.8ms\tremaining: 537ms\n","43:\tlearn: 0.8031307\ttotal: 91.9ms\tremaining: 535ms\n","44:\tlearn: 0.7990217\ttotal: 94.1ms\tremaining: 533ms\n","45:\tlearn: 0.7968540\ttotal: 96.1ms\tremaining: 531ms\n","46:\tlearn: 0.7927779\ttotal: 98.1ms\tremaining: 528ms\n","47:\tlearn: 0.7879318\ttotal: 100ms\tremaining: 526ms\n","48:\tlearn: 0.7833236\ttotal: 102ms\tremaining: 524ms\n","49:\tlearn: 0.7822454\ttotal: 104ms\tremaining: 522ms\n","50:\tlearn: 0.7782152\ttotal: 107ms\tremaining: 520ms\n","51:\tlearn: 0.7757580\ttotal: 109ms\tremaining: 518ms\n","52:\tlearn: 0.7717452\ttotal: 111ms\tremaining: 516ms\n","53:\tlearn: 0.7672681\ttotal: 113ms\tremaining: 514ms\n","54:\tlearn: 0.7628655\ttotal: 115ms\tremaining: 511ms\n","55:\tlearn: 0.7580148\ttotal: 122ms\tremaining: 533ms\n","56:\tlearn: 0.7554111\ttotal: 125ms\tremaining: 534ms\n","57:\tlearn: 0.7503896\ttotal: 126ms\tremaining: 528ms\n","58:\tlearn: 0.7464236\ttotal: 127ms\tremaining: 521ms\n","59:\tlearn: 0.7445478\ttotal: 128ms\tremaining: 514ms\n","60:\tlearn: 0.7406129\ttotal: 130ms\tremaining: 508ms\n","61:\tlearn: 0.7373190\ttotal: 130ms\tremaining: 500ms\n","62:\tlearn: 0.7331163\ttotal: 131ms\tremaining: 493ms\n","63:\tlearn: 0.7288802\ttotal: 132ms\tremaining: 486ms\n","64:\tlearn: 0.7247332\ttotal: 132ms\tremaining: 479ms\n","65:\tlearn: 0.7200063\ttotal: 133ms\tremaining: 472ms\n","66:\tlearn: 0.7151103\ttotal: 134ms\tremaining: 466ms\n","67:\tlearn: 0.7107106\ttotal: 135ms\tremaining: 459ms\n","68:\tlearn: 0.7046898\ttotal: 135ms\tremaining: 453ms\n","69:\tlearn: 0.7005617\ttotal: 136ms\tremaining: 447ms\n","70:\tlearn: 0.6957086\ttotal: 137ms\tremaining: 441ms\n","71:\tlearn: 0.6935062\ttotal: 139ms\tremaining: 440ms\n","72:\tlearn: 0.6913560\ttotal: 140ms\tremaining: 434ms\n","73:\tlearn: 0.6872872\ttotal: 140ms\tremaining: 429ms\n","74:\tlearn: 0.6833801\ttotal: 141ms\tremaining: 424ms\n","75:\tlearn: 0.6792998\ttotal: 142ms\tremaining: 418ms\n","76:\tlearn: 0.6775199\ttotal: 143ms\tremaining: 413ms\n","77:\tlearn: 0.6754633\ttotal: 143ms\tremaining: 408ms\n","78:\tlearn: 0.6725604\ttotal: 144ms\tremaining: 403ms\n","79:\tlearn: 0.6698384\ttotal: 145ms\tremaining: 398ms\n","80:\tlearn: 0.6671900\ttotal: 145ms\tremaining: 393ms\n","81:\tlearn: 0.6636599\ttotal: 146ms\tremaining: 389ms\n","82:\tlearn: 0.6605327\ttotal: 148ms\tremaining: 386ms\n","83:\tlearn: 0.6565268\ttotal: 148ms\tremaining: 382ms\n","84:\tlearn: 0.6533964\ttotal: 149ms\tremaining: 378ms\n","85:\tlearn: 0.6507222\ttotal: 151ms\tremaining: 375ms\n","86:\tlearn: 0.6476922\ttotal: 152ms\tremaining: 371ms\n","87:\tlearn: 0.6460603\ttotal: 152ms\tremaining: 367ms\n","88:\tlearn: 0.6431511\ttotal: 153ms\tremaining: 363ms\n","89:\tlearn: 0.6403464\ttotal: 154ms\tremaining: 360ms\n","90:\tlearn: 0.6357944\ttotal: 155ms\tremaining: 356ms\n","91:\tlearn: 0.6334108\ttotal: 156ms\tremaining: 352ms\n","92:\tlearn: 0.6302753\ttotal: 157ms\tremaining: 349ms\n","93:\tlearn: 0.6285600\ttotal: 157ms\tremaining: 345ms\n","94:\tlearn: 0.6252230\ttotal: 158ms\tremaining: 342ms\n","95:\tlearn: 0.6230604\ttotal: 159ms\tremaining: 338ms\n","96:\tlearn: 0.6219041\ttotal: 160ms\tremaining: 335ms\n","97:\tlearn: 0.6177305\ttotal: 162ms\tremaining: 333ms\n","98:\tlearn: 0.6147743\ttotal: 163ms\tremaining: 330ms\n","99:\tlearn: 0.6117435\ttotal: 163ms\tremaining: 327ms\n","100:\tlearn: 0.6087253\ttotal: 165ms\tremaining: 324ms\n","101:\tlearn: 0.6061105\ttotal: 167ms\tremaining: 324ms\n","102:\tlearn: 0.6031317\ttotal: 170ms\tremaining: 325ms\n","103:\tlearn: 0.6002349\ttotal: 171ms\tremaining: 322ms\n","104:\tlearn: 0.5980363\ttotal: 173ms\tremaining: 322ms\n","105:\tlearn: 0.5948538\ttotal: 175ms\tremaining: 320ms\n","106:\tlearn: 0.5920417\ttotal: 177ms\tremaining: 319ms\n","107:\tlearn: 0.5893666\ttotal: 179ms\tremaining: 318ms\n","108:\tlearn: 0.5861341\ttotal: 181ms\tremaining: 317ms\n","109:\tlearn: 0.5833415\ttotal: 183ms\tremaining: 316ms\n","110:\tlearn: 0.5810770\ttotal: 185ms\tremaining: 315ms\n","111:\tlearn: 0.5785763\ttotal: 187ms\tremaining: 314ms\n","112:\tlearn: 0.5770289\ttotal: 189ms\tremaining: 313ms\n","113:\tlearn: 0.5757276\ttotal: 191ms\tremaining: 312ms\n","114:\tlearn: 0.5735000\ttotal: 193ms\tremaining: 311ms\n","115:\tlearn: 0.5720507\ttotal: 196ms\tremaining: 310ms\n","116:\tlearn: 0.5700476\ttotal: 197ms\tremaining: 309ms\n","117:\tlearn: 0.5673894\ttotal: 200ms\tremaining: 308ms\n","118:\tlearn: 0.5647501\ttotal: 202ms\tremaining: 307ms\n","119:\tlearn: 0.5618323\ttotal: 204ms\tremaining: 305ms\n","120:\tlearn: 0.5606097\ttotal: 206ms\tremaining: 304ms\n","121:\tlearn: 0.5586749\ttotal: 208ms\tremaining: 303ms\n","122:\tlearn: 0.5565822\ttotal: 210ms\tremaining: 302ms\n","123:\tlearn: 0.5550232\ttotal: 212ms\tremaining: 301ms\n","124:\tlearn: 0.5527064\ttotal: 221ms\tremaining: 309ms\n","125:\tlearn: 0.5511652\ttotal: 223ms\tremaining: 308ms\n","126:\tlearn: 0.5494240\ttotal: 225ms\tremaining: 307ms\n","127:\tlearn: 0.5474458\ttotal: 227ms\tremaining: 306ms\n","128:\tlearn: 0.5451424\ttotal: 229ms\tremaining: 304ms\n","129:\tlearn: 0.5433252\ttotal: 231ms\tremaining: 303ms\n","130:\tlearn: 0.5406661\ttotal: 234ms\tremaining: 301ms\n","131:\tlearn: 0.5381442\ttotal: 236ms\tremaining: 300ms\n","132:\tlearn: 0.5369092\ttotal: 238ms\tremaining: 299ms\n","133:\tlearn: 0.5355455\ttotal: 239ms\tremaining: 296ms\n","134:\tlearn: 0.5346340\ttotal: 241ms\tremaining: 295ms\n","135:\tlearn: 0.5324999\ttotal: 243ms\tremaining: 293ms\n","136:\tlearn: 0.5299300\ttotal: 245ms\tremaining: 292ms\n","137:\tlearn: 0.5288947\ttotal: 247ms\tremaining: 290ms\n","138:\tlearn: 0.5276610\ttotal: 249ms\tremaining: 289ms\n","139:\tlearn: 0.5264593\ttotal: 251ms\tremaining: 287ms\n","140:\tlearn: 0.5237752\ttotal: 253ms\tremaining: 286ms\n","141:\tlearn: 0.5218934\ttotal: 255ms\tremaining: 284ms\n","142:\tlearn: 0.5196690\ttotal: 257ms\tremaining: 282ms\n","143:\tlearn: 0.5176020\ttotal: 259ms\tremaining: 281ms\n","144:\tlearn: 0.5152580\ttotal: 261ms\tremaining: 279ms\n","145:\tlearn: 0.5129698\ttotal: 263ms\tremaining: 278ms\n","146:\tlearn: 0.5118849\ttotal: 266ms\tremaining: 277ms\n","147:\tlearn: 0.5096954\ttotal: 267ms\tremaining: 275ms\n","148:\tlearn: 0.5085171\ttotal: 273ms\tremaining: 276ms\n","149:\tlearn: 0.5071040\ttotal: 274ms\tremaining: 274ms\n","150:\tlearn: 0.5061115\ttotal: 276ms\tremaining: 273ms\n","151:\tlearn: 0.5051323\ttotal: 278ms\tremaining: 271ms\n","152:\tlearn: 0.5031137\ttotal: 280ms\tremaining: 269ms\n","153:\tlearn: 0.5001830\ttotal: 282ms\tremaining: 268ms\n","154:\tlearn: 0.4987800\ttotal: 285ms\tremaining: 266ms\n","155:\tlearn: 0.4977928\ttotal: 290ms\tremaining: 268ms\n","156:\tlearn: 0.4969671\ttotal: 292ms\tremaining: 266ms\n","157:\tlearn: 0.4954966\ttotal: 294ms\tremaining: 265ms\n","158:\tlearn: 0.4932188\ttotal: 298ms\tremaining: 265ms\n","159:\tlearn: 0.4920496\ttotal: 299ms\tremaining: 262ms\n","160:\tlearn: 0.4899949\ttotal: 302ms\tremaining: 260ms\n","161:\tlearn: 0.4890058\ttotal: 304ms\tremaining: 259ms\n","162:\tlearn: 0.4873343\ttotal: 306ms\tremaining: 257ms\n","163:\tlearn: 0.4854466\ttotal: 309ms\tremaining: 256ms\n","164:\tlearn: 0.4837814\ttotal: 312ms\tremaining: 255ms\n","165:\tlearn: 0.4822154\ttotal: 313ms\tremaining: 252ms\n","166:\tlearn: 0.4810654\ttotal: 315ms\tremaining: 251ms\n","167:\tlearn: 0.4793723\ttotal: 317ms\tremaining: 249ms\n","168:\tlearn: 0.4775621\ttotal: 319ms\tremaining: 247ms\n","169:\tlearn: 0.4760026\ttotal: 321ms\tremaining: 246ms\n","170:\tlearn: 0.4746846\ttotal: 323ms\tremaining: 244ms\n","171:\tlearn: 0.4733196\ttotal: 325ms\tremaining: 242ms\n","172:\tlearn: 0.4721129\ttotal: 328ms\tremaining: 241ms\n","173:\tlearn: 0.4701411\ttotal: 330ms\tremaining: 239ms\n","174:\tlearn: 0.4689616\ttotal: 332ms\tremaining: 237ms\n","175:\tlearn: 0.4675189\ttotal: 337ms\tremaining: 238ms\n","176:\tlearn: 0.4654343\ttotal: 338ms\tremaining: 235ms\n","177:\tlearn: 0.4644178\ttotal: 343ms\tremaining: 235ms\n","178:\tlearn: 0.4637057\ttotal: 344ms\tremaining: 233ms\n","179:\tlearn: 0.4622709\ttotal: 345ms\tremaining: 230ms\n","180:\tlearn: 0.4608884\ttotal: 363ms\tremaining: 239ms\n","181:\tlearn: 0.4590602\ttotal: 365ms\tremaining: 236ms\n","182:\tlearn: 0.4577995\ttotal: 366ms\tremaining: 234ms\n","183:\tlearn: 0.4565462\ttotal: 367ms\tremaining: 231ms\n","184:\tlearn: 0.4544937\ttotal: 368ms\tremaining: 229ms\n","185:\tlearn: 0.4535977\ttotal: 374ms\tremaining: 229ms\n","186:\tlearn: 0.4525530\ttotal: 383ms\tremaining: 232ms\n","187:\tlearn: 0.4510664\ttotal: 384ms\tremaining: 229ms\n","188:\tlearn: 0.4494792\ttotal: 385ms\tremaining: 226ms\n","189:\tlearn: 0.4470857\ttotal: 386ms\tremaining: 223ms\n","190:\tlearn: 0.4456365\ttotal: 387ms\tremaining: 221ms\n","191:\tlearn: 0.4450499\ttotal: 387ms\tremaining: 218ms\n","192:\tlearn: 0.4444909\ttotal: 388ms\tremaining: 215ms\n","193:\tlearn: 0.4435396\ttotal: 393ms\tremaining: 215ms\n","194:\tlearn: 0.4419850\ttotal: 401ms\tremaining: 216ms\n","195:\tlearn: 0.4412672\ttotal: 417ms\tremaining: 221ms\n","196:\tlearn: 0.4396169\ttotal: 423ms\tremaining: 221ms\n","197:\tlearn: 0.4386324\ttotal: 426ms\tremaining: 219ms\n","198:\tlearn: 0.4378795\ttotal: 429ms\tremaining: 218ms\n","199:\tlearn: 0.4363060\ttotal: 436ms\tremaining: 218ms\n","200:\tlearn: 0.4353030\ttotal: 438ms\tremaining: 216ms\n","201:\tlearn: 0.4343218\ttotal: 445ms\tremaining: 216ms\n","202:\tlearn: 0.4333834\ttotal: 455ms\tremaining: 217ms\n","203:\tlearn: 0.4325540\ttotal: 457ms\tremaining: 215ms\n","204:\tlearn: 0.4316286\ttotal: 461ms\tremaining: 213ms\n","205:\tlearn: 0.4301330\ttotal: 472ms\tremaining: 216ms\n","206:\tlearn: 0.4290401\ttotal: 476ms\tremaining: 214ms\n","207:\tlearn: 0.4278884\ttotal: 481ms\tremaining: 213ms\n","208:\tlearn: 0.4267225\ttotal: 489ms\tremaining: 213ms\n","209:\tlearn: 0.4257358\ttotal: 491ms\tremaining: 210ms\n","210:\tlearn: 0.4243048\ttotal: 495ms\tremaining: 209ms\n","211:\tlearn: 0.4234582\ttotal: 499ms\tremaining: 207ms\n","212:\tlearn: 0.4215686\ttotal: 505ms\tremaining: 206ms\n","213:\tlearn: 0.4200186\ttotal: 509ms\tremaining: 204ms\n","214:\tlearn: 0.4194471\ttotal: 511ms\tremaining: 202ms\n","215:\tlearn: 0.4179386\ttotal: 516ms\tremaining: 201ms\n","216:\tlearn: 0.4163350\ttotal: 518ms\tremaining: 198ms\n","217:\tlearn: 0.4156877\ttotal: 524ms\tremaining: 197ms\n","218:\tlearn: 0.4140831\ttotal: 527ms\tremaining: 195ms\n","219:\tlearn: 0.4127920\ttotal: 533ms\tremaining: 194ms\n","220:\tlearn: 0.4113784\ttotal: 535ms\tremaining: 191ms\n","221:\tlearn: 0.4105860\ttotal: 537ms\tremaining: 189ms\n","222:\tlearn: 0.4086751\ttotal: 538ms\tremaining: 186ms\n","223:\tlearn: 0.4077631\ttotal: 539ms\tremaining: 183ms\n","224:\tlearn: 0.4067919\ttotal: 543ms\tremaining: 181ms\n","225:\tlearn: 0.4052320\ttotal: 544ms\tremaining: 178ms\n","226:\tlearn: 0.4041738\ttotal: 545ms\tremaining: 175ms\n","227:\tlearn: 0.4032169\ttotal: 545ms\tremaining: 172ms\n","228:\tlearn: 0.4022172\ttotal: 546ms\tremaining: 169ms\n","229:\tlearn: 0.4005392\ttotal: 547ms\tremaining: 166ms\n","230:\tlearn: 0.3994804\ttotal: 548ms\tremaining: 164ms\n","231:\tlearn: 0.3979615\ttotal: 549ms\tremaining: 161ms\n","232:\tlearn: 0.3959130\ttotal: 549ms\tremaining: 158ms\n","233:\tlearn: 0.3946368\ttotal: 555ms\tremaining: 156ms\n","234:\tlearn: 0.3936532\ttotal: 555ms\tremaining: 154ms\n","235:\tlearn: 0.3929322\ttotal: 556ms\tremaining: 151ms\n","236:\tlearn: 0.3926326\ttotal: 557ms\tremaining: 148ms\n","237:\tlearn: 0.3913991\ttotal: 558ms\tremaining: 145ms\n","238:\tlearn: 0.3905414\ttotal: 558ms\tremaining: 142ms\n","239:\tlearn: 0.3881571\ttotal: 559ms\tremaining: 140ms\n","240:\tlearn: 0.3868570\ttotal: 560ms\tremaining: 137ms\n","241:\tlearn: 0.3859157\ttotal: 560ms\tremaining: 134ms\n","242:\tlearn: 0.3839937\ttotal: 561ms\tremaining: 132ms\n","243:\tlearn: 0.3833879\ttotal: 562ms\tremaining: 129ms\n","244:\tlearn: 0.3823944\ttotal: 563ms\tremaining: 126ms\n","245:\tlearn: 0.3817282\ttotal: 563ms\tremaining: 124ms\n","246:\tlearn: 0.3809659\ttotal: 564ms\tremaining: 121ms\n","247:\tlearn: 0.3798642\ttotal: 565ms\tremaining: 118ms\n","248:\tlearn: 0.3785956\ttotal: 566ms\tremaining: 116ms\n","249:\tlearn: 0.3770189\ttotal: 567ms\tremaining: 113ms\n","250:\tlearn: 0.3758924\ttotal: 568ms\tremaining: 111ms\n","251:\tlearn: 0.3743701\ttotal: 568ms\tremaining: 108ms\n","252:\tlearn: 0.3734752\ttotal: 569ms\tremaining: 106ms\n","253:\tlearn: 0.3724150\ttotal: 570ms\tremaining: 103ms\n","254:\tlearn: 0.3715676\ttotal: 571ms\tremaining: 101ms\n","255:\tlearn: 0.3700028\ttotal: 571ms\tremaining: 98.2ms\n","256:\tlearn: 0.3690403\ttotal: 572ms\tremaining: 95.7ms\n","257:\tlearn: 0.3681839\ttotal: 573ms\tremaining: 93.2ms\n","258:\tlearn: 0.3673647\ttotal: 574ms\tremaining: 90.8ms\n","259:\tlearn: 0.3664280\ttotal: 574ms\tremaining: 88.4ms\n","260:\tlearn: 0.3652118\ttotal: 575ms\tremaining: 85.9ms\n","261:\tlearn: 0.3647182\ttotal: 576ms\tremaining: 83.5ms\n","262:\tlearn: 0.3637273\ttotal: 576ms\tremaining: 81.1ms\n","263:\tlearn: 0.3623945\ttotal: 577ms\tremaining: 78.7ms\n","264:\tlearn: 0.3614291\ttotal: 578ms\tremaining: 76.3ms\n","265:\tlearn: 0.3606201\ttotal: 579ms\tremaining: 74ms\n","266:\tlearn: 0.3599831\ttotal: 580ms\tremaining: 71.6ms\n","267:\tlearn: 0.3592366\ttotal: 581ms\tremaining: 69.3ms\n","268:\tlearn: 0.3583195\ttotal: 581ms\tremaining: 67ms\n","269:\tlearn: 0.3577329\ttotal: 582ms\tremaining: 64.7ms\n","270:\tlearn: 0.3561454\ttotal: 583ms\tremaining: 62.4ms\n","271:\tlearn: 0.3556133\ttotal: 583ms\tremaining: 60.1ms\n","272:\tlearn: 0.3548481\ttotal: 584ms\tremaining: 57.8ms\n","273:\tlearn: 0.3539707\ttotal: 585ms\tremaining: 55.5ms\n","274:\tlearn: 0.3535927\ttotal: 586ms\tremaining: 53.3ms\n","275:\tlearn: 0.3530163\ttotal: 587ms\tremaining: 51.1ms\n","276:\tlearn: 0.3522093\ttotal: 588ms\tremaining: 48.8ms\n","277:\tlearn: 0.3517482\ttotal: 589ms\tremaining: 46.6ms\n","278:\tlearn: 0.3504018\ttotal: 590ms\tremaining: 44.4ms\n","279:\tlearn: 0.3494062\ttotal: 590ms\tremaining: 42.2ms\n","280:\tlearn: 0.3485006\ttotal: 591ms\tremaining: 40ms\n","281:\tlearn: 0.3475432\ttotal: 592ms\tremaining: 37.8ms\n","282:\tlearn: 0.3469456\ttotal: 592ms\tremaining: 35.6ms\n","283:\tlearn: 0.3456276\ttotal: 593ms\tremaining: 33.4ms\n","284:\tlearn: 0.3448613\ttotal: 594ms\tremaining: 31.3ms\n","285:\tlearn: 0.3441759\ttotal: 594ms\tremaining: 29.1ms\n","286:\tlearn: 0.3434010\ttotal: 596ms\tremaining: 27ms\n","287:\tlearn: 0.3424399\ttotal: 597ms\tremaining: 24.9ms\n","288:\tlearn: 0.3413098\ttotal: 598ms\tremaining: 22.7ms\n","289:\tlearn: 0.3408013\ttotal: 598ms\tremaining: 20.6ms\n","290:\tlearn: 0.3401237\ttotal: 599ms\tremaining: 18.5ms\n","291:\tlearn: 0.3395640\ttotal: 600ms\tremaining: 16.4ms\n","292:\tlearn: 0.3388128\ttotal: 600ms\tremaining: 14.3ms\n","293:\tlearn: 0.3375637\ttotal: 601ms\tremaining: 12.3ms\n","294:\tlearn: 0.3364487\ttotal: 602ms\tremaining: 10.2ms\n","295:\tlearn: 0.3358440\ttotal: 603ms\tremaining: 8.14ms\n","296:\tlearn: 0.3353150\ttotal: 603ms\tremaining: 6.09ms\n","297:\tlearn: 0.3346151\ttotal: 604ms\tremaining: 4.05ms\n","298:\tlearn: 0.3341411\ttotal: 605ms\tremaining: 2.02ms\n","299:\tlearn: 0.3334911\ttotal: 606ms\tremaining: 0us\n","Best hyperparameters: {'iterations': 300, 'learning_rate': 0.1}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.33      0.33      0.33         6\n","           B       0.56      0.57      0.56        44\n","           C       0.60      0.67      0.63        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.57       104\n","   macro avg       0.37      0.39      0.38       104\n","weighted avg       0.53      0.57      0.55       104\n","\n","\n","Confusion Matrix:\n","[[ 2  3  1  0]\n"," [ 4 25 15  0]\n"," [ 0 16 32  0]\n"," [ 0  1  5  0]]\n","\n","Recall: 0.3920454545454546\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["# XGBoost"],"metadata":{"id":"w_c8GyNb9NxN"}},{"cell_type":"code","source":["pip install xgboost"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9BO45sxA9RHY","executionInfo":{"status":"ok","timestamp":1723686172616,"user_tz":-420,"elapsed":17816,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"0c462ad8-b862-43db-e554-9650512ae877"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: xgboost in /usr/local/lib/python3.10/dist-packages (2.1.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from xgboost) (1.26.4)\n","Collecting nvidia-nccl-cu12 (from xgboost)\n","  Downloading nvidia_nccl_cu12-2.22.3-py3-none-manylinux2014_x86_64.whl.metadata (1.8 kB)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from xgboost) (1.13.1)\n","Downloading nvidia_nccl_cu12-2.22.3-py3-none-manylinux2014_x86_64.whl (190.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m190.9/190.9 MB\u001b[0m \u001b[31m5.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: nvidia-nccl-cu12\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","torch 2.3.1+cu121 requires nvidia-cublas-cu12==12.1.3.1; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-cuda-cupti-cu12==12.1.105; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-cuda-nvrtc-cu12==12.1.105; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-cuda-runtime-cu12==12.1.105; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-cudnn-cu12==8.9.2.26; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-cufft-cu12==11.0.2.54; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-curand-cu12==10.3.2.106; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-cusolver-cu12==11.4.5.107; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-cusparse-cu12==12.1.0.106; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-nvtx-cu12==12.1.105; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n","torch 2.3.1+cu121 requires nvidia-nccl-cu12==2.20.5; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-nccl-cu12 2.22.3 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed nvidia-nccl-cu12-2.22.3\n"]}]},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Encode string labels to integers\n","label_encoder = LabelEncoder()\n","y_train_encoded = label_encoder.fit_transform(y_train)\n","y_test_encoded = label_encoder.transform(y_test)\n","\n","# Initialize XGBoost classifier\n","xgb_clf = xgb.XGBClassifier(random_state=2022, use_label_encoder=False, eval_metric='mlogloss')\n","\n","# Fit the model on the training data\n","xgb_clf.fit(x_train, y_train_encoded)\n","\n","# Predict on the test set\n","y_pred_encoded = xgb_clf.predict(x_test)\n","\n","# Convert predictions back to original string labels\n","y_pred = label_encoder.inverse_transform(y_pred_encoded)\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bl08zVTy9VLz","executionInfo":{"status":"ok","timestamp":1723686172616,"user_tz":-420,"elapsed":16,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"cf94e003-85b3-41be-f08d-e1ec38d51613"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.51      0.55      0.53        44\n","           C       0.61      0.62      0.62        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.52       104\n","   macro avg       0.28      0.29      0.29       104\n","weighted avg       0.50      0.52      0.51       104\n","\n","Confusion Matrix:\n","[[ 0  6  0  0]\n"," [ 6 24 13  1]\n"," [ 1 17 30  0]\n"," [ 0  0  6  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/xgboost/core.py:158: UserWarning: [01:42:50] WARNING: /workspace/src/learner.cc:740: \n","Parameters: { \"use_label_encoder\" } are not used.\n","\n","  warnings.warn(smsg, UserWarning)\n"]}]},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix, recall_score\n","from sklearn.preprocessing import LabelEncoder\n","\n","# Encode the target variable to numerical labels\n","label_encoder = LabelEncoder()\n","y_train_encoded = label_encoder.fit_transform(y_train)\n","y_test_encoded = label_encoder.transform(y_test)\n","\n","# Initialize XGBoost classifier\n","xgb_clf = xgb.XGBClassifier(random_state=2022)\n","\n","# Specify the hyperparameters to be tuned\n","param_grid = {\n","    'learning_rate': [0.1, 0.01, 0.001],\n","    'max_depth': [3, 5, 7],\n","    'n_estimators': [100, 200, 300]\n","}\n","\n","# Initialize GridSearchCV with the model, hyperparameter grid, and cross-validation\n","grid_search = GridSearchCV(xgb_clf, param_grid, cv=5, scoring='recall_macro')\n","\n","# Train the model using grid search\n","grid_search.fit(x_train, y_train_encoded)\n","\n","# Print the best hyperparameters found\n","print(\"Best hyperparameters:\", grid_search.best_params_)\n","\n","# Use the model with the best hyperparameters to make predictions on the testing data\n","y_pred = grid_search.best_estimator_.predict(x_test)\n","\n","# Calculate recall using 'macro' average\n","recall = recall_score(y_test_encoded, y_pred, average='macro')\n","\n","# Display the classification report, confusion matrix, and recall\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test_encoded, y_pred, target_names=label_encoder.classes_))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test_encoded, y_pred))\n","\n","print(\"\\nRecall:\", recall)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sU54w3sQioKt","executionInfo":{"status":"ok","timestamp":1723686224799,"user_tz":-420,"elapsed":52191,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"8dfe3c99-74b7-45c2-d07c-3efcfc77d7b7"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Best hyperparameters: {'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 100}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.51      0.57      0.54        44\n","           C       0.61      0.65      0.63        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.54       104\n","   macro avg       0.28      0.30      0.29       104\n","weighted avg       0.50      0.54      0.52       104\n","\n","\n","Confusion Matrix:\n","[[ 0  5  1  0]\n"," [ 4 25 15  0]\n"," [ 0 17 31  0]\n"," [ 0  2  4  0]]\n","\n","Recall: 0.3035037878787879\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["#ADABOOST"],"metadata":{"id":"43ceX9MvepnV"}},{"cell_type":"code","source":["from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Initialize AdaBoost classifier\n","ada_clf = AdaBoostClassifier(random_state=2022)\n","\n","# Fit the model on the training data\n","ada_clf.fit(x_train, y_train)\n","\n","# Predict on the test set\n","y_pred = ada_clf.predict(x_test)\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9pAXI4a9eEKX","executionInfo":{"status":"ok","timestamp":1723686224800,"user_tz":-420,"elapsed":26,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"2474ad98-ad92-44cd-d236-077cc3124235"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.49      0.59      0.54        44\n","           C       0.54      0.54      0.54        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.50       104\n","   macro avg       0.26      0.28      0.27       104\n","weighted avg       0.46      0.50      0.48       104\n","\n","Confusion Matrix:\n","[[ 0  5  1  0]\n"," [ 0 26 17  1]\n"," [ 1 20 26  1]\n"," [ 0  2  4  0]]\n"]}]},{"cell_type":"code","source":["from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.metrics import classification_report, confusion_matrix, make_scorer, recall_score\n","from sklearn.model_selection import GridSearchCV\n","import numpy as np\n","\n","# Definisikan parameter grid untuk AdaBoost\n","param_grid = {\n","    'n_estimators': [50, 100, 200],\n","    'learning_rate': [0.01, 0.1, 1.0, 10]\n","}\n","\n","# Custom scorer untuk recall\n","scorer = make_scorer(recall_score, average='macro')\n","\n","# GridSearchCV untuk hyperparameter tuning\n","grid_search = GridSearchCV(AdaBoostClassifier(random_state=2022), param_grid, scoring=scorer, cv=5)\n","\n","# Fit model dengan data training\n","grid_search.fit(x_train, y_train)\n","\n","# Dapatkan model terbaik\n","best_ada_clf = grid_search.best_estimator_\n","\n","# Prediksi dengan model terbaik\n","y_pred = best_ada_clf.predict(x_test)\n","\n","# Test Model\n","test_input_data = np.array([[20, 4, 3.86, 3.66]])\n","test = best_ada_clf.predict(test_input_data)\n","print(\"hasil: \", test)\n","\n","# Evaluasi model\n","print(f\"Best parameters found: {grid_search.best_params_}\")\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"id":"bx62WIOW8U0a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1723686246442,"user_tz":-420,"elapsed":21662,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}},"outputId":"1942a9c3-5e5e-482d-c378-e76e7fc68d20"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["hasil:  ['C']\n","Best parameters found: {'learning_rate': 0.01, 'n_estimators': 100}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           A       0.00      0.00      0.00         6\n","           B       0.54      0.64      0.58        44\n","           C       0.58      0.62      0.60        48\n","           F       0.00      0.00      0.00         6\n","\n","    accuracy                           0.56       104\n","   macro avg       0.28      0.32      0.30       104\n","weighted avg       0.49      0.56      0.52       104\n","\n","\n","Confusion Matrix:\n","[[ 0  5  1  0]\n"," [ 0 28 16  0]\n"," [ 0 18 30  0]\n"," [ 0  1  5  0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"EI1EQXkEoZwi","executionInfo":{"status":"ok","timestamp":1723686246442,"user_tz":-420,"elapsed":13,"user":{"displayName":"polaris ai","userId":"13768565794035999878"}}},"execution_count":38,"outputs":[]}]}