{"cells":[{"cell_type":"markdown","metadata":{"id":"ZfrQQl8q8j_l"},"source":["### **YEAR 1 - PHYSIOLOGY MARK**"]},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":11146,"status":"ok","timestamp":1737716229679,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"xsDqxGYI82EU"},"outputs":[],"source":["import pandas as pd\n","from sklearn.metrics import classification_report, confusion_matrix"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22369,"status":"ok","timestamp":1737716252043,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"YqLVSEMh8V_8","outputId":"809f2133-cd3e-4fb7-f869-99d2b256650d"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","metadata":{"id":"646I3UMVxQAI"},"source":["### **1. Read Data**"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":38739,"status":"ok","timestamp":1737716290779,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"Npc-ZSEet26p"},"outputs":[],"source":["batch1213_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1213-data-GRADED.xlsx', skiprows=5)\n","batch1213_preuni_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1213-data-GRADED.xlsx',skiprows=4, sheet_name='preuni')\n","batch1213_pro1_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1213-data-GRADED.xlsx', skiprows=2, sheet_name='pro1')\n","\n","\n","batch1314_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1314-data-GRADED.xlsx', skiprows=5)\n","batch1314_preuni_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1314-data-GRADED.xlsx',skiprows=4, sheet_name='preuni')\n","batch1314_pro1_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1314-data-GRADED.xlsx', skiprows=5, sheet_name='pro1')\n","\n","\n","batch1415_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1415-data-GRADED.xlsx', skiprows=5)\n","batch1415_preuni_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1415-data-GRADED.xlsx',skiprows=4, sheet_name='preuni')\n","batch1415_pro1_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1415-data-GRADED.xlsx', skiprows=2, sheet_name='pro1')\n","\n","\n","batch1516_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1516-data-graded.xlsx', skiprows=5)\n","batch1516_preuni_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1516-data-graded.xlsx',skiprows=4, sheet_name='preuni')\n","batch1516_pro1_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1516-data-graded.xlsx', skiprows=2, sheet_name='pro1')\n","\n","\n","batch1617_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1617-data-GRADED.xlsx', skiprows=5)\n","batch1617_preuni_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1617-data-GRADED.xlsx',skiprows=5, sheet_name='preuni')\n","batch1617_pro1_df= pd.read_excel ('/content/drive/MyDrive/AI_Education-main/data/batch1617-data-GRADED.xlsx', skiprows=5, sheet_name='pro1')"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":1529,"status":"ok","timestamp":1737716292303,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"Khay3x2euaBU"},"outputs":[],"source":["\n","# Batch 1213\n","merged_batch1213 = pd.merge(batch1213_df, batch1213_preuni_df, on=\"STUDENT'S IDENTITY NO. \")\n","merged_batch1213 = pd.merge(merged_batch1213, batch1213_pro1_df, on=\"STUDENT'S IDENTITY NO. \")\n","\n","# Batch 1314\n","merged_batch1314 = pd.merge(batch1314_df, batch1314_preuni_df, on=\"STUDENT'S IDENTITY NO. \")\n","merged_batch1314 = pd.merge(merged_batch1314, batch1314_pro1_df, on=\"STUDENT'S IDENTITY NO. \")\n","\n","# Batch 1415\n","merged_batch1415 = pd.merge(batch1415_df, batch1415_preuni_df, on=\"STUDENT'S IDENTITY NO. \")\n","merged_batch1415 = pd.merge(merged_batch1415, batch1415_pro1_df, on=\"STUDENT'S IDENTITY NO. \")\n","\n","# Batch 1516\n","merged_batch1516 = pd.merge(batch1516_df, batch1516_preuni_df, on=\"STUDENT'S IDENTITY NO. \")\n","merged_batch1516 = pd.merge(merged_batch1516, batch1516_pro1_df, on=\"STUDENT'S IDENTITY NO. \")\n","\n","\n","# Batch 1617\n","merged_batch1617 = pd.merge(batch1617_df, batch1617_preuni_df, on=\"STUDENT'S IDENTITY NO. \")\n","merged_batch1617 = pd.merge(merged_batch1617, batch1617_pro1_df, on=\"STUDENT'S IDENTITY NO. \")"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":44,"status":"ok","timestamp":1737716292306,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"5N_EYnRauv3-"},"outputs":[],"source":["# Menggabungkan batch 1213, 1314, 1415, 1516, dan 1617\n","df = pd.concat([merged_batch1213, merged_batch1314, merged_batch1415, merged_batch1516, merged_batch1617], ignore_index=True)"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":44,"status":"ok","timestamp":1737716292306,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"TT9SizMetrVe","outputId":"2e24c2b7-ce3b-4a56-ae45-3fe707800c10"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u003cclass 'pandas.core.frame.DataFrame'\u003e\n","RangeIndex: 285 entries, 0 to 284\n","Data columns (total 46 columns):\n"," #   Column                   Non-Null Count  Dtype  \n","---  ------                   --------------  -----  \n"," 0   NO._x                    285 non-null    int64  \n"," 1   STUDENT'S IDENTITY NO.   285 non-null    object \n"," 2   LAST DIGIT MATRIC NO.    285 non-null    int64  \n"," 3   GENDER                   285 non-null    object \n"," 4   AGE DURING ADMISSION     278 non-null    float64\n"," 5   BIRTH DATE               220 non-null    object \n"," 6   MIDDLE IC NO.            59 non-null     float64\n"," 7   DISTRICT                 277 non-null    object \n"," 8   POSCODE                  268 non-null    object \n"," 9   STATE                    279 non-null    object \n"," 10  COUNTRY                  281 non-null    object \n"," 11  NO._y                    285 non-null    int64  \n"," 12  PRE-UNIVERSITY           264 non-null    object \n"," 13   SEM 1                   258 non-null    float64\n"," 14  SEM 2                    258 non-null    float64\n"," 15  SEM 3                    258 non-null    float64\n"," 16  SEM 4                    191 non-null    float64\n"," 17  SEM 5                    127 non-null    float64\n"," 18  TOTAL_SEM                258 non-null    float64\n"," 19  AVERAGE_CGPA             258 non-null    float64\n"," 20  FINAL_CGPA               258 non-null    float64\n"," 21  NO.                      285 non-null    float64\n"," 22  ANATOMY MARK             285 non-null    float64\n"," 23  GRADING                  285 non-null    object \n"," 24  ANATOMY STATUS           285 non-null    object \n"," 25  PHYSIOLOGY MARK          285 non-null    float64\n"," 26  GRADING.1                285 non-null    object \n"," 27  PHYSIOLOGY STATUS        285 non-null    object \n"," 28  BIOCHEMISTRY MARK        285 non-null    float64\n"," 29  GRADING.2                285 non-null    object \n"," 30  BIOCHEMISTRY STATUS      285 non-null    object \n"," 31  ORAL BIOLOGY MARK        285 non-null    float64\n"," 32  GRADING.3                285 non-null    object \n"," 33  ORAL BIOLOGY STATUS      285 non-null    object \n"," 34   BIRTH DATE              59 non-null     float64\n"," 35  MIDDLE I/C NO.           220 non-null    object \n"," 36  SEM 6                    5 non-null      float64\n"," 37  ORAL BIOLOGY RESIT       2 non-null      object \n"," 38  RESIT STATUS             7 non-null      object \n"," 39   SEM 4                   44 non-null     float64\n"," 40  ANATOMY RESIT            6 non-null      float64\n"," 41  PHYSIOLOGY RESIT         1 non-null      float64\n"," 42  RESIT STATUS.1           1 non-null      object \n"," 43  BIOCHEMISTRY RESIT       5 non-null      float64\n"," 44  RESIT STATUS.2           5 non-null      object \n"," 45  RESIT STATUS.3           1 non-null      object \n","dtypes: float64(21), int64(3), object(22)\n","memory usage: 102.6+ KB\n"]}],"source":["df.info()"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":40,"status":"ok","timestamp":1737716292307,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"2RFxW9bzttiE","outputId":"dc5ed241-fad6-4148-e337-abff64f88403"},"outputs":[{"data":{"text/plain":["Index(['NO._x', 'STUDENT'S IDENTITY NO. ', 'LAST DIGIT MATRIC NO.', 'GENDER',\n","       'AGE DURING ADMISSION', 'BIRTH DATE', 'MIDDLE IC NO.', 'DISTRICT',\n","       'POSCODE', 'STATE', 'COUNTRY', 'NO._y', 'PRE-UNIVERSITY', ' SEM 1',\n","       'SEM 2', 'SEM 3', 'SEM 4', 'SEM 5', 'TOTAL_SEM', 'AVERAGE_CGPA',\n","       'FINAL_CGPA', 'NO.', 'ANATOMY MARK', 'GRADING', 'ANATOMY STATUS',\n","       'PHYSIOLOGY MARK', 'GRADING.1', 'PHYSIOLOGY STATUS',\n","       'BIOCHEMISTRY MARK', 'GRADING.2', 'BIOCHEMISTRY STATUS',\n","       'ORAL BIOLOGY MARK', 'GRADING.3', 'ORAL BIOLOGY STATUS', ' BIRTH DATE',\n","       'MIDDLE I/C NO.', 'SEM 6', 'ORAL BIOLOGY RESIT', 'RESIT STATUS',\n","       ' SEM 4', 'ANATOMY RESIT', 'PHYSIOLOGY RESIT', 'RESIT STATUS.1',\n","       'BIOCHEMISTRY RESIT', 'RESIT STATUS.2', 'RESIT STATUS.3'],\n","      dtype='object')"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["df.columns"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":36,"status":"ok","timestamp":1737716292308,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"7eOsiqW5rFc_"},"outputs":[],"source":["df_copy = df.copy()"]},{"cell_type":"markdown","metadata":{"id":"3S1rO6My95zv"},"source":["### **2. Data Preparation**"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":35,"status":"ok","timestamp":1737716292308,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"CMRsUIxWufMA"},"outputs":[],"source":["# Kolom yang ingin dihapus\n","columns_to_drop = ['NO._x', \"STUDENT'S IDENTITY NO. \", 'LAST DIGIT MATRIC NO.', 'GENDER', 'BIRTH DATE', 'MIDDLE IC NO.', 'DISTRICT', 'GRADING', \"GRADING.1\",\n","                   'POSCODE', 'COUNTRY', 'NO._y', 'PRE-UNIVERSITY', ' SEM 1', 'SEM 2', 'SEM 3', 'SEM 4', 'SEM 5', 'NO.', 'ANATOMY MARK', 'ANATOMY STATUS',\n","                   'BIOCHEMISTRY MARK', 'GRADING.2', 'BIOCHEMISTRY STATUS', 'ORAL BIOLOGY MARK', 'GRADING.3', 'PHYSIOLOGY STATUS', 'STATE',\n","                   'ORAL BIOLOGY STATUS', ' BIRTH DATE', 'MIDDLE I/C NO.', 'SEM 6', 'ORAL BIOLOGY RESIT', 'RESIT STATUS', ' SEM 4', 'ANATOMY RESIT', 'PHYSIOLOGY RESIT',\n","                   'RESIT STATUS.1', 'BIOCHEMISTRY RESIT', 'RESIT STATUS.2', 'RESIT STATUS.3']\n","df_copy.drop(columns=columns_to_drop, inplace=True)"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":34,"status":"ok","timestamp":1737716292308,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"cpHBzUEjOL8D"},"outputs":[],"source":["df_copy['PHYSIOLOGY STATUS'] = df_copy['PHYSIOLOGY MARK'].apply(lambda x: 'PASS' if 50 \u003c= x \u003c= 100 else 'FAIL')"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":34,"status":"ok","timestamp":1737716292308,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"583w_GOtnRjK"},"outputs":[],"source":["# Kolom yang ingin dihapus\n","columns_to_drop = ['PHYSIOLOGY MARK']\n","df_copy.drop(columns=columns_to_drop, inplace=True)"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":34,"status":"ok","timestamp":1737716292309,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"slqWWHxGs0i5","outputId":"2de86686-4380-4a31-a2fc-b77c7ca9c0d9"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eAGE DURING ADMISSION\u003c/th\u003e\n","      \u003ctd\u003e7\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eTOTAL_SEM\u003c/th\u003e\n","      \u003ctd\u003e27\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eAVERAGE_CGPA\u003c/th\u003e\n","      \u003ctd\u003e27\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eFINAL_CGPA\u003c/th\u003e\n","      \u003ctd\u003e27\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePHYSIOLOGY STATUS\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["AGE DURING ADMISSION     7\n","TOTAL_SEM               27\n","AVERAGE_CGPA            27\n","FINAL_CGPA              27\n","PHYSIOLOGY STATUS        0\n","dtype: int64"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["df_copy.isnull().sum()"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":30,"status":"ok","timestamp":1737716292309,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"O7-2SY3Vt6_r"},"outputs":[],"source":["# Hapus baris yang memiliki nilai null (NaN) pada kolom FINAL_CGPA\n","df_copy = df_copy[df_copy['FINAL_CGPA'].notna()]"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":29,"status":"ok","timestamp":1737716292309,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"FEh_OQHTv6m4","outputId":"17156e7f-03ff-4ed6-82c4-26684e126f9b"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eAGE DURING ADMISSION\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eTOTAL_SEM\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eAVERAGE_CGPA\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eFINAL_CGPA\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePHYSIOLOGY STATUS\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["AGE DURING ADMISSION    0\n","TOTAL_SEM               0\n","AVERAGE_CGPA            0\n","FINAL_CGPA              0\n","PHYSIOLOGY STATUS       0\n","dtype: int64"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["df_copy.isnull().sum()"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":26,"status":"ok","timestamp":1737716292309,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"rtFKtde7zOH3","outputId":"f31c1c7c-c68b-496d-e2d1-46ff87a600aa"},"outputs":[{"data":{"text/plain":["Index(['AGE DURING ADMISSION', 'TOTAL_SEM', 'AVERAGE_CGPA', 'FINAL_CGPA',\n","       'PHYSIOLOGY STATUS'],\n","      dtype='object')"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["df_copy.columns"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22,"status":"ok","timestamp":1737716292309,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"R2fqZ3aPxd86","outputId":"dffb11f9-5d66-4e97-8e88-8b58a1a84837"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u003cclass 'pandas.core.frame.DataFrame'\u003e\n","Index: 258 entries, 1 to 283\n","Data columns (total 5 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   AGE DURING ADMISSION  258 non-null    float64\n"," 1   TOTAL_SEM             258 non-null    float64\n"," 2   AVERAGE_CGPA          258 non-null    float64\n"," 3   FINAL_CGPA            258 non-null    float64\n"," 4   PHYSIOLOGY STATUS     258 non-null    object \n","dtypes: float64(4), object(1)\n","memory usage: 12.1+ KB\n"]}],"source":["df_copy.info()"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":19,"status":"ok","timestamp":1737716292309,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"3NSaBFGCxjMV"},"outputs":[],"source":["x = df_copy.drop(['PHYSIOLOGY STATUS'], axis =1)\n","y = df_copy['PHYSIOLOGY STATUS']"]},{"cell_type":"markdown","metadata":{"id":"TrB0k7KpTezQ"},"source":["**Divide the data into train and test data**"]},{"cell_type":"code","execution_count":18,"metadata":{"executionInfo":{"elapsed":336,"status":"ok","timestamp":1737716292626,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"Z6UKku52uG5Q"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.4, random_state=2022)"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1737716292626,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"bXI03vUPysJh","outputId":"672ab43f-5f7c-4858-c18f-46a3907dc73f"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ecount\u003c/th\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePHYSIOLOGY STATUS\u003c/th\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePASS\u003c/th\u003e\n","      \u003ctd\u003e148\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eFAIL\u003c/th\u003e\n","      \u003ctd\u003e6\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["PHYSIOLOGY STATUS\n","PASS    148\n","FAIL      6\n","Name: count, dtype: int64"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["y_train.value_counts()"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1737716292627,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"tL7hS1aCn-AN","outputId":"b75b3c60-4bef-42ca-d023-af775b25442c"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ecount\u003c/th\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePHYSIOLOGY STATUS\u003c/th\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePASS\u003c/th\u003e\n","      \u003ctd\u003e97\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eFAIL\u003c/th\u003e\n","      \u003ctd\u003e7\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["PHYSIOLOGY STATUS\n","PASS    97\n","FAIL     7\n","Name: count, dtype: int64"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["y_test.value_counts()"]},{"cell_type":"markdown","metadata":{"id":"17VSOdO7TShC"},"source":["## **3. Modeling**"]},{"cell_type":"markdown","metadata":{"id":"fFg7VGwvTPVI"},"source":["### 3.1 Logistic Regression"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":363,"status":"ok","timestamp":1737716292979,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"Xn86NeArSyIw","outputId":"03cd1a9e-bdaf-49c0-8a94-f5dd7be41e9a"},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.linear_model import LogisticRegression\n","\n","# Latih model\n","log_reg = LogisticRegression()\n","log_reg.fit(x_train, y_train)\n","\n","# Prediksi\n","y_pred = log_reg.predict(x_test)\n","\n","# Evaluasi model\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1309,"status":"ok","timestamp":1737716294284,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"nwa71HHNS66D","outputId":"01c80bf2-8d56-4c86-af60-701b51f4f109"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/svm/_base.py:1243: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["Best hyperparameters: {'C': 0.001, 'penalty': 'l1', 'solver': 'liblinear'}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_sag.py:348: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix, make_scorer, recall_score\n","import numpy as np\n","\n","# Definisi model Logistic Regression\n","log_reg_tuned = LogisticRegression(random_state=2022)\n","\n","# Tentukan daftar hyperparameter yang ingin diuji\n","param_grid = {\n","    'C': [0.001, 0.01, 0.1, 1, 10, 20],\n","    'penalty': ['l1', 'l2'],\n","    'solver': ['liblinear', 'saga']\n","}\n","\n","# Inisialisasi GridSearchCV dengan model, hyperparameter grid, dan jumlah lipatan cross-validation\n","grid_search_lr = GridSearchCV(log_reg_tuned, param_grid, cv=5)\n","\n","# Latih model dengan melakukan pencarian grid\n","grid_search_lr.fit(x_train, y_train)\n","\n","# Cetak hyperparameter terbaik yang ditemukan\n","print(\"Best hyperparameters:\", grid_search_lr.best_params_)\n","\n","# Gunakan model dengan hyperparameter terbaik untuk membuat prediksi pada data testing\n","y_pred_log_tuned = grid_search_lr.best_estimator_.predict(x_test)\n","\n","# Cetak laporan klasifikasi dan matriks kebingungan\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred_log_tuned))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred_log_tuned))"]},{"cell_type":"markdown","metadata":{"id":"VBTI6bHgTFq1"},"source":["### 3.2 Decision Tree"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":326,"status":"ok","timestamp":1737716294606,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"h8yhVnfaVCcJ","outputId":"71ba08f2-2f9a-4e7a-d9eb-477114b6eef2"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","[[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn import tree\n","clf = tree.DecisionTreeClassifier(max_depth= 1, random_state= 2022)\n","clf = clf.fit(x_train, y_train)\n","\n","y_pred = clf.predict(x_test)\n","y_pred\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":683,"status":"ok","timestamp":1737716295282,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"B04kUnlnn4-D","outputId":"2f05f509-263d-4b92-ce01-f2dcc49a4263"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py:317: UserWarning: The total space of parameters 15 is smaller than n_iter=50. Running 15 iterations. For exhaustive searches, use GridSearchCV.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["Best Hyperparameters: {'max_depth': 2, 'criterion': 'entropy'}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      0.96      0.94        97\n","\n","    accuracy                           0.89       104\n","   macro avg       0.47      0.48      0.47       104\n","weighted avg       0.87      0.89      0.88       104\n","\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 4 93]]\n"]}],"source":["from sklearn import tree\n","from sklearn.model_selection import RandomizedSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Inisialisasi Decision Tree Classifier\n","clf = tree.DecisionTreeClassifier(random_state=2022)\n","\n","# Tentukan grid hyperparameter yang akan di-tuning\n","param_dist = {\n","    'criterion': ['gini', 'entropy', 'log_loss'],  # Kriteria untuk pengukuran kualitas split\n","    'max_depth': [1, 2, 3, 4, 5],       # Batas kedalaman pohon\n","}\n","\n","# Inisialisasi RandomizedSearchCV\n","random_search = RandomizedSearchCV(\n","    clf,\n","    param_distributions=param_dist,\n","    n_iter=50,         # Jumlah iterasi pencarian acak\n","    cv=5,              # Cross-validation 5 fold\n","    scoring='recall_macro', # Metrik evaluasi\n","    random_state=2022\n",")\n","\n","# Latih model dengan data training menggunakan RandomizedSearchCV\n","random_search.fit(x_train, y_train)\n","\n","# Prediksi hasil menggunakan model terbaik dari hasil tuning\n","y_pred = random_search.best_estimator_.predict(x_test)\n","\n","# Cetak hasil terbaik hyperparameter yang ditemukan\n","print(\"Best Hyperparameters:\", random_search.best_params_)\n","\n","# Evaluasi performa model\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"markdown","metadata":{"id":"ZjQM8uZ4TBG6"},"source":["### 3.3 Random Forest"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":328,"status":"ok","timestamp":1737716295605,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"T6NAvTSbAy6H","outputId":"220ba08c-2b29-4470-d2bf-640d8f7185be"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","[[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.ensemble import RandomForestClassifier\n","clf = RandomForestClassifier(max_depth=1, random_state= 2022)\n","clf = clf.fit(x_train, y_train)\n","\n","y_pred = clf.predict(x_test)\n","y_pred\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11132,"status":"ok","timestamp":1737716306730,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"pJ1oeWH7XeBB","outputId":"dc8da949-cbe9-4466-e713-c0531ee8c7b9"},"outputs":[{"name":"stdout","output_type":"stream","text":["Fitting 5 folds for each of 10 candidates, totalling 50 fits\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py:1107: UserWarning: One or more of the test scores are non-finite: [nan nan nan nan nan nan nan nan nan nan]\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["Best hyperparameters: {'criterion': 'gini', 'max_depth': 1}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix, recall_score\n","\n","# Inisialisasi Random Forest\n","rf = RandomForestClassifier(random_state=2022)\n","\n","# Tentukan grid parameter yang akan diuji\n","param_grid = {\n","    'max_depth': [1, 2, 3, 4, 5],\n","    'criterion': ['gini', 'entropy'],\n","}\n","\n","# Inisialisasi GridSearchCV\n","grid_search = GridSearchCV(\n","    estimator=rf,\n","    param_grid=param_grid,\n","    cv=5,  # 5-fold cross-validation\n","    scoring='recall',\n","    n_jobs=-1,  # gunakan semua core CPU yang tersedia\n","    verbose=2  # tingkat keluaran yang lebih detail\n",")\n","\n","# Lakukan pencarian grid\n","grid_search.fit(x_train, y_train)\n","\n","# Cetak hyperparameter terbaik\n","print(\"Best hyperparameters:\", grid_search.best_params_)\n","\n","# Gunakan model terbaik untuk prediksi\n","y_pred = grid_search.best_estimator_.predict(x_test)\n","\n","# Cetak laporan klasifikasi, matriks konfusi, dan recall\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"markdown","metadata":{"id":"RAwYE3oVS4Nc"},"source":["### 3.4 Support Vector Machine (SVM)"]},{"cell_type":"code","execution_count":27,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1737716306731,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"6OrzkVKBweR5","outputId":"52967146-72a6-4ece-82b8-78e7f85fb008"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","[[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.svm import SVC\n","\n","clf = SVC()\n","clf.fit(x_train, y_train)\n","\n","y_pred = clf.predict(x_test)\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"code","execution_count":28,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1737716306731,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"4T_0IETDswek"},"outputs":[],"source":["import joblib\n","# Save the model to a file\n","joblib.dump(clf,'physiology_model.joblib')\n","\n","# Load the model from the file\n","loaded_model = joblib.load('physiology_model.joblib')"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5476,"status":"ok","timestamp":1737716312200,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"UpTHBGDd7LyZ","outputId":"779fd561-a95a-4802-c339-74ae8b0ca639"},"outputs":[{"name":"stdout","output_type":"stream","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 0 97]]\n","Best parameters found:  {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py:1107: UserWarning: One or more of the test scores are non-finite: [nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan\n"," nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan\n"," nan nan nan nan nan nan nan nan nan nan nan nan]\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.svm import SVC\n","from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.model_selection import GridSearchCV\n","\n","\n","# Define the parameter grid for hyperparameter tuning\n","param_grid = {\n","    'svc__C': [0.1, 1, 10, 29, 30, 31, 32, 33],\n","    'svc__kernel': ['linear', 'rbf', 'poly'],\n","    'svc__gamma': ['scale', 'auto']\n","}\n","\n","# Create a pipeline with StandardScaler and SVC\n","pipeline = make_pipeline(StandardScaler(), SVC(probability=True))\n","\n","# Initialize GridSearchCV with recall scoring\n","grid_search = GridSearchCV(estimator=pipeline, param_grid=param_grid, cv=5, scoring='recall', n_jobs=-1)\n","\n","# Fit the model on the training data\n","grid_search.fit(x_train, y_train)\n","\n","# Get the best estimator\n","best_svm = grid_search.best_estimator_\n","\n","# Predict on the test set\n","y_pred = best_svm.predict(x_test)\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n","\n","# Print the best parameters\n","print(\"Best parameters found: \", grid_search.best_params_)"]},{"cell_type":"markdown","metadata":{"id":"3-4l9h0S0tDm"},"source":["### 3.5 Naive Bayes"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":2929,"status":"ok","timestamp":1737716315126,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"M2TaqHhvJzVN","outputId":"767b3f4a-9c6f-4442-ffeb-97c5e70f964f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Classification Report:\n","               precision    recall  f1-score   support\n","\n","        FAIL       0.09      1.00      0.16         7\n","        PASS       1.00      0.23      0.37        97\n","\n","    accuracy                           0.28       104\n","   macro avg       0.54      0.61      0.26       104\n","weighted avg       0.94      0.28      0.36       104\n","\n","Confusion Matrix:\n"," [[ 7  0]\n"," [75 22]]\n"]},{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAowAAAIxCAYAAADHZ+l9AAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAZOZJREFUeJzt3Xd4VNXa9/HfDiGdJCQCoXcIRTpC6FKlI4iCIAEsjwoooKLoUbDGdg52LGgQEFBUUHqTIkWqIChSFKQmhBICCAlJ1vsHb0bGFDJDhgyZ7+dc+3rM2mvvfe+ZzJObe629xjLGGAEAAADZ8MrvAAAAAODeSBgBAACQIxJGAAAA5IiEEQAAADkiYQQAAECOSBgBAACQIxJGAAAA5IiEEQAAADkiYQQAAECOSBhxQzh//rz+97//6dZbb1WJEiXk4+OjokWLKioqSs8995wOHjyYb7Ft2bJFHTt2VGhoqCzLkmVZOnDggMuvu3LlSlmWpcGDB7v8Wo6qUKGC7bWYMWNGtv02btxo62dZ1nWMMHvjx4+XZVmaPHlyfodixx3jsixLFSpUuObzTJ48WZZlafz48dd8LgCuQcIIt7du3TpVqVJFjz32mDZu3KjatWvrjjvuULNmzfTHH3/oxRdfVLVq1bRs2bLrHtvZs2fVo0cPLVu2TA0aNNCgQYMUHR2toKCg6x6Lu/riiy+y3Tdt2rQ8vRaJBwC4hnd+BwDkZNu2bWrXrp0uXryoJ598Us8++6wCAwNt+9PT0zVnzhyNGTNGhw8fvu7xbdq0SUePHtU999yjKVOmXNdr33LLLdq1a5dCQkKu63UdUb9+fS1evFgnTpzQTTfdZLcvNTVVX375pWrWrKk//vhDycnJ+RSlveHDh6tfv34qWbJkfofi9nbt2qXChQvndxgArgMqjHBbxhjdc889unjxosaPH69XX33VLlmUJC8vL/Xu3VtbtmxRo0aNrnuMGUlqpUqVrvu1AwICFBkZ6daJzYABA2yJ4b8tWbJEx48f18CBA/MhsuzddNNNioyMdOtE3F1ERkaqcuXK+R0GgOuAhBFua9GiRdq5c6fKlCmjZ555Jse+ISEhql27tl3b33//rRdffFG1a9eWv7+/QkJC1KpVK82cOTPLc2TMu5OkSZMmqU6dOvL391dERIT+7//+T4mJiba+Bw4ckGVZio6OliQ9//zztnl4GXMKrzbn7MrrXWndunXq1auXypcvL19fX0VEROiWW27RU089pXPnztn65TSHMTU1Ve+++64aNmyooKAgBQUF6ZZbbtHEiROVlpaWqX+bNm1scy/nzJmjpk2bKjAwUGFhYerfv7/T1dsePXqoSJEiWQ49T5s2TZZlacCAAdkeP3/+fA0dOlQ1atRQcHCwAgMDVbduXb3yyiuZKpJt2rTRkCFDJNm/H1e+B1e+ZnFxcbrvvvtUpkwZeXt766233pKU9fu2YMECWZalypUr6+zZs3bXNcaoU6dOsixLMTExuXpdrny9p02bpoYNGyogIEDFixdXdHS0jhw5kuPxO3bsUI8ePVS0aFEFBgaqdevWWrdunV2fN998U5Zl6emnn872PB07dpRlWVqxYoWt7a+//tJDDz2katWqKSAgQGFhYapVq5b+7//+T7t377Y7Pqc5jAsWLFCHDh1UtGhR+fn5qXr16nrqqafsPke54ejnWJJ++eUXde/eXaGhoSpSpIhatWqlpUuXZvmZ6datmyzL0pIlS7K9fsZ5/v3eAx7FAG5q2LBhRpIZNWqUw8cmJSWZhg0bGkmmWLFi5o477jCdO3c2vr6+RpJ55JFHMh1Tvnx5I8k88cQTxsfHx3Ts2NHcfvvtpnjx4kaSadmypUlPTzfGGJOQkGCio6NN8+bNjSRTt25dEx0dbaKjo80nn3xijDFm3LhxRpKJjY3NMsaM613p+++/N15eXsayLNOkSRPTr18/c9ttt5nKlSsbSWb//v22vitWrDCSTHR0tN05UlNTTZcuXYwkExwcbHr16mV69uxpihQpYiSZ22+/3aSlpdkd07p1a9u9FypUyLRp08bccccdpmzZskaSqVq1qvn7779z/fpn3NuhQ4dMdHS0kWT27dtn23/27FkTEBBgWrZsaYwxtvfl30qUKGGCg4NNs2bNzJ133mk6depkihYtaiSZtm3bmtTUVFvfmJiYLN+P6Oho8+OPP9q9Zl26dDFlypQxERER5o477jDdunUzH330kTEm+/ct4/dx8ODBdu0TJkwwkkyrVq0yva7ZyXi9hw0bZizLMq1atTL9+vUzFSpUMJJMmTJlzKFDh+yOyYhr2LBhJiAgwNx8883mrrvuMnXr1jWSjJ+fn9mxY4etf0JCgvH19TURERHm0qVLmWL4888/jWVZpmrVqra2gwcPmrCwMNt73qdPH9OrVy9Tv359Y1lWptdEkilfvnymc7/yyitGkvH29jbt2rUzd911lylTpoyRZKpVq2bi4uLs+sfGxhpJZty4cXbtznyO161bZwICAowkU6dOHdOvXz/TuHFj4+XlZUaMGJHpM/P9998bSeaOO+7IdC5jjJk8ebKRZO67774s9wOegoQRbivjj//UqVMdPnb48OFGkrn11ltNUlKSrX3Xrl22BHDu3Ll2x2QkOREREeb333+3tSckJJgqVaoYSWb58uV2x2T3h84Y5xLGVq1aGUnm66+/ztR/48aNdveSXcL45ptvGkmmVq1adn+Yjx49aqpXr24kmXfffdfumIwEJiAgwKxbt87Wfv78edOsWTMjyXz66adZ3kdO93bo0CGzdOlSI8k8//zztv1TpkwxkmxJWnYJ45w5czIlqklJSaZbt25Gkvn888/t9uX0fhjzz2uWkThfuHAhU5/s3re///7b1KhRw0gys2bNMsYY88svvxhfX18TEhJiDhw4cNXXJUPG6+3t7W3mz59va09JSTEDBgwwkkzPnj2zjEuSefvtt+32jRw50kgy99xzj1373XffbSSZ2bNnZ4rhmWeeMZLMa6+9Zmt77rnnjCQzfPjwTP3/+usvu6TfmKwTxo0bNxovLy8TFBRkfvrpJ1v7xYsXTd++fY0k06dPH7tjsnvfHP0cp6WlmWrVqhlJ5uWXX7Y716RJk2yv35WfmdTUVFO2bFlTuHBhEx8fn+m+M/7/0IYNGzLtAzwJCSPcVmRkpJFkFi1a5NBx586dM/7+/sbLy8vs2rUr0/533nnHSDLt27e3a89IcjIqhFfKSML+/QctrxPGjIQkMTEx55s02SeM5cqVM5LM4sWLMx2TUU2pUqWKXXtGAvPMM89kOubrr7/O8jo5uTJhTEtLMyVLljTVqlWz7e/YsaPx9fU1p06dMsZknzBmZ+/evUaS6d27t117bhNGX19fc/jw4Sz75PS+bd261fj4+JiwsDCzb98+c/PNNxtJZtq0abmO3Zh/Xu+77747074TJ06YgIAAY1mWOXjwYKa4mjdvnuUxWSVvq1evtlVUr5SammpKly6dKUl66KGHjCQzZ86cXN1HVtccNGiQkWTGjh2bqX98fLzts3nlvWX1vjnzOc74x0nVqlWzrPZmJH///l1+4YUXjCTz+uuv27Xv2rXLVqkEPB1zGFHgbNmyRRcuXFCDBg0UGRmZaf8999wjSVq7dq3S09Mz7e/YsWOmtmrVqkmSjh07lsfR2mvYsKGkyzFu2rQpy/hycvDgQR08eFDFihXL8j66deum0NBQ7du3T3FxcZn2u+Levby81L9/f+3Zs0ebNm1SXFycli9fri5duqho0aJXPX7v3r16++23NWLECA0dOlSDBw/Wiy++aNvnjAYNGqh06dIOH1e/fn299NJLOnXqlBo0aKAdO3aof//+Oc7DzEm/fv0ytYWHh6tjx44yxmjNmjWZ9mf1HoWHhyssLCzTe9SyZUvVqlVLixYt0qFDh2ztCxYs0JEjR9SzZ08VL17c1p7x+/f0009r3rx5unjxosP39OOPP0pSlq9J8eLF1bFjR6Wnp2vt2rU5nseZz3HGOfv06SMvr8x/3u66664sr3XffffJ29tbkyZNsmv/5JNPJEkPPPBAjrECnoCEEW4rPDxckpSQkODQcUePHpWkbCfjh4aGKiQkRBcuXNDp06cz7S9TpkymtiJFikiSy5d+eeWVV1S3bl3NnTtXt9xyi2666Sb16NFDkyZNytUf74x7L1++fJb7Lcuy7cvqwQpX3XvGk9BffPGFZsyYobS0tKs+HW2M0WOPPabq1atr5MiReu+99xQbG6vPP//ctoSRsw8hlCtXzqnjJOmxxx5Tw4YNlZSUpJIlS+qDDz5w+lzZvU8Zv7sZ7+eVsnqPpMvvU0pKSqb2//u//1N6ero+++wzW1tGInT//ffb9R08eLDuvPNO/fbbb+revbuKFi2qVq1a6ZVXXsnyHxhZudrnL6P9ag/2OPM5zkiYy5Ytm+Ux2b3vJUuWVI8ePbRnzx6tWrVKkpSSkqIpU6bI39/f6X8QAAUJCSPcVr169SRJW7duzfNz5/StIllVJlwhq+ph2bJltXnzZi1evFgjRoxQ2bJlNXfuXN1///2qU6eOTp48ec3XzY97r1+/vmrUqKGZM2dqypQpCg0NVdeuXXM85ssvv9T//vc/lSlTRl9//bWOHDmilJQUGWNsyasxxql4/Pz8nDpOkn777Tft3LlTknTy5Mnr8q0+V3L0PRo0aJACAgL02WefKT09XUePHtWCBQtUoUIFdejQwa5voUKF9OWXX2rr1q0aN26cGjdurA0bNuiZZ55RtWrVMj2J7Yy8/EafvDzXgw8+KOmfZHrOnDk6ceKE+vbtq9DQ0Dy7DnCjImGE28pIKGbNmqXU1NRcH1eqVClJl5cHycqZM2eUmJgof3//XA2JOsvHx0eS7JbCyZCWlpZtxcbb21sdO3bUO++8o+3bt+vAgQNq27at9u7dq9deey3Ha17t3q/c58yQ7LUYOHCg4uPjtW3bNvXt21e+vr459p89e7YkaeLEierTp49KlSplWyT6zz//dHm8WUlOTtaAAQOUnJysgQMHKiUlRQMGDHBq6FbK/n3KaM94P69FSEiI+vXrp4MHD2rx4sWKjY1VWlqa7rvvvmwTrvr162v8+PFavXq1EhISNGrUKJ09e1YjR4686vWu9juYkWBf7ffPmc9xxpqkVw6/Xym7dklq3769qlSpom+++UanT59mOBr4FxJGuK3bbrtNtWrV0uHDh/Xyyy/n2DcpKUm//vqrpMvzsPz9/bVly5Ys57hlrAnYvHlzl1YTM/547dmzJ9O+FStW6NKlS7k6T/ny5fXkk09Kkq2ylZ1y5cqpXLlySkhI0PLlyzPtnz9/vk6fPq0qVaooIiIiV9fPK3fffbduuukmhYeHa9CgQVftnzHMmNUQ7FdffZXlMRlJuiP/wHDE2LFj9csvv6hfv36aOnWqBg0apN9++01PPPGEU+fL6j5OnTqlJUuWyLIsNW/e/FpDlvRP9eyjjz7Sp59+qkKFCtnWrLya4OBgxcTEyLKsq/7+SZfnTUrK8jvEExIStHjx4lzdmzOf44xzzp49O8vqc3a/N9LlauUDDzygixcv6oUXXtDy5ctVo0aNPHsPgBsdCSPclmVZmjZtmvz8/DR+/HiNHTtW58+ft+tjjNH333+vRo0aadOmTZKkwMBADR06VOnp6Ro2bJjdMXv27NFLL70kSXrkkUdcGn+rVq0kXf7DduWw5f79+7O99oQJE7KsPC5YsEBS9nOzrjRixAhJ0ujRo+3mf8bFxdkSm0cffTR3N5GHKlSooISEBJ04cUItWrS4av+Mh20+/vhjuz/+P/74o954440sj8moSv17gem8sHz5cr311lsqW7asJk6cKEl69913VaFCBb333ntatGiRw+f88ssvtXjxYtvPqampGjVqlM6fP69u3bpd01zLKzVu3FgNGjTQd999p/3796tr165ZVi+nTp2aZVK4cOFCGWNy9fs3bNgweXl56Z133tHmzZtt7SkpKRoxYoQuXLig3r17X/VcznyO27Ztq6pVq2r37t16/fXX7c43efJk2wM52RkyZIh8fX311ltvyRiTaY4n4NHy7flsIJfWrFljSpQoYVsnsF27dubuu+82Xbt2tbX7+fmZZcuW2Y65csHf4sWLm759+5ouXboYPz+/qy7cnZXslrC52jIuGUuMhISEmO7du5t27dqZwMBA07dv3yyvFxISYry8vEz9+vXNnXfeafr27WtbVy4sLMzs2bPnqjGlpqaazp072657++23m169etkW7u7Vq1e2C3dfuTB4hv379xtJpnXr1lneY1auXFYnN7JaVmf37t0mMDDQSDI1a9Y0/fr1My1btjSWZZnHH388yyVdLly4YFufr3Xr1mbIkCHm3nvvNWvXrjXGZP+aXSmrZXVOnTplSpcubby8vMyKFSvs+v/444/Gy8vLREREmISEhFzd778X7m7durXp16+fqVixopFkSpUqZf7666+rxnWlnH5/jTHm448/tq1DOG/evCz79OzZ00gylStXNr169TL9+/c3TZs2NZZlGS8vL/PVV1/Z9c/qPTDGmJdfftm2zmT79u1Nv3797BaBd2bh7tx+jq9cuLtu3bqmf//+5pZbbjGWZdkWX7///vuzfZ0y1q709fU1J06cyLYf4GlIGHFDOHv2rHnzzTdN69atTbFixYy3t7cJDQ01TZo0MePGjcsyMTl37px5/vnnTc2aNY2vr68pUqSIadGihZk+fXqW13BFwpicnGyeeuopU7ZsWePj42MqV65sXnrpJZOamprl9aZMmWLuvvtuU716dVOkSBFTpEgRU7NmTTN69OhM6wbmlPxcunTJvP3226Z+/fomICDABAQEmEaNGpn333/f7ttRMrhjwmjM5XXwunfvbooXL24CAgJM/fr1zccff2yMyT5Z2bRpk+nQoYMJCQkxlmXZJVnOJox33nmnkS5/E05Wxo4dm+Vi29m58vWOjY019erVM35+fiY8PNzcc889Wb5u15ow7tu3z0iXv0Umq98BY4xZtWqVGTZsmKlXr54JDw83fn5+plKlSqZfv35m06ZNmfpn9x4YY8y8efNMu3btTEhIiPHx8TFVqlQxY8aMsa29eaWcPkeOfo6NMWbbtm2mW7duJjg42AQGBprmzZubhQsXmmnTphlJ5qmnnsr22IwFvvv3759tH8ATWcY4+ZghAMApbdq00apVq7R///5sl43JazExMXr66ac1btw4jR8//rpc0908+OCD+uijjzRz5sxs12Ts1KmTlixZohUrVqhNmzbXN0DAjTGHEQAKuKSkJL377rvy8fEp8E/9njp1Ksuljr788ktNmjRJoaGh6tatW5bHbty4UUuXLlWtWrVIFoF/8c7vAAAArhEbG6tVq1Zp9erVOnbsmEaOHJknS/W4sz179igqKkp16tRRpUqVJEm7du3S7t27VahQIX300UcKDAy0O+app57SwYMHNX/+fBljrroqA+CJqDACQAG1atUqff755zp37pyGDRumV199Nb9DcrlKlSpp2LBhunTpklasWKF58+bpzJkz6t27t3788UfdeeedmY6ZOXOmvvzyS4WHh+v9999Xz5498yFywL0xhxEAAAA5osIIAACAHJEwAgAAIEckjAAAAMgRT0lLOpqYkt8hAHCRsCCf/A4BgIv45WMW419/uMvOfeHn91x2bmdRYQQAAECOqDACAAA4yvKsmhsJIwAAgKMsK78juK48Kz0GAACAw6gwAgAAOMrDhqQ9624BAADgMCqMAAAAjmIOIwAAAPAPKowAAACOYg4jAAAA8A8qjAAAAI7ysDmMJIwAAACOYkgaAAAA+AcVRgAAAEd52JA0FUYAAADkiAojAACAo5jDCAAAAPyDCiMAAICjmMMIAAAA/IMKIwAAgKM8bA4jCSMAAICjGJIGAAAA/kGFEQAAwFEeNiTtWXcLAAAAh1FhBAAAcBQVRgAAAOAfJIwAAACO8rJctzmgQoUKsiwr0zZs2DBJ0sWLFzVs2DCFh4crKChIffr0UXx8vOO36/ARAAAAcAubNm3SsWPHbNvSpUslSX379pUkjRo1SnPnztWsWbO0atUqHT16VL1793b4OsxhBAAAcJSbzGEsVqyY3c+vvvqqKleurNatW+vMmTP69NNPNX36dLVt21aSFBsbqxo1auinn35S06ZNc30d97hbAACAG4lluWxLTk5WUlKS3ZacnHzVkFJSUjRt2jQNHTpUlmVpy5YtunTpktq3b2/rExkZqXLlymn9+vUO3S4JIwAAgBuJiYlRSEiI3RYTE3PV4+bMmaPExEQNHjxYkhQXFycfHx+Fhoba9StRooTi4uIciokhaQAAAEe5cEh67NixGj16tF2br6/vVY/79NNP1blzZ5UqVSrP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WSPpculzypQpSktLs/VJT09XlSpVVL9+fX3zzTeOXuK6YuFuoOBi4W6g4MrPhbvv/2qny879yZ21r97pOnPqpT537pzKlStn+zljYubZs2dVpEgRSZe/HaZJkyZavnx5HoQJAADgPjztC02cWocxIiJCp06dsv1csmRJSdKePXvs+p06dUoXLly4hvAAAACQ35xKGCMjI7V3717bz82aNZMxRq+//rptaZ1169bphx9+UPXq1fMmUgAAADdhWa7b3JFTCWPXrl21f/9+bdy4UdLlR7rr1Kmjr7/+WqVLl1bDhg116623Kj09XSNHjszLeAEAAPKdl2W5bHNHTiWMgwYN0sKFC1WiRInLJ/Hy0vz589WhQwcdP35cP//8swICAvTSSy9p4MCBeRowAAAAri+nHnoJCQlRp06d7NpKly6tRYsW6e+//9aZM2dUvHhxFSpUKE+CBAAAcCduWgh0GacqjDkJCAhQyZIlVahQIX322Wd64YUX8voSAAAAuI7yPGG80ieffKLnn3/elZcAAAC47izLctnmjlyaMAIAAODGl49rpLuPyreOzu8QALjInC/G5XcIAFykU81i+XZtT6u4edr9AgAAwEFUGAEAABzkrnMNXYWEEQAAwEFenpUvMiQNAACAnOWqwsgC3AAAAP/wtApjrhJGY4zTF/C0MX4AAICCJlcJY3p6uqvjAAAAuGF4WkGMOYwAAADIEU9JAwAAOMjT5jBSYQQAAECOqDACAAA4yMOmMJIwAgAAOMrLwzJGhqQBAACQIyqMAAAADvK0ipun3S8AAAAclCcVxr179+rEiRMKDw9XtWrV8uKUAAAAbsvDpjA6X2FMTk7W008/rZtuukmRkZFq0aKFXn31Vdv+adOmqUGDBtq2bVtexAkAAIB84lTCeOHCBbVp00avvfaafHx81KVLl0zfN922bVtt375dX331VZ4ECgAA4C68LMtlmztyKmF8/fXXtWHDBg0dOlR//vmn5s6dm6lPqVKlVLNmTS1btuyagwQAAED+cSph/PLLL1WuXDlNnDhRfn5+2farXr26Dh065HRwAAAA7siyXLe5I6cSxv3796tRo0by9s75mRkfHx+dPn3aqcAAAADclZflus0dOZUw+vv75yoR3L9/v4oWLerMJQAAAOAmnEoY69Wrp82bNyshISHbPvv379fPP/+sxo0bOx0cAACAO+Khl1y4//77dfbsWfXv318nTpzItD8xMVFDhw7VpUuX9MADD1xzkAAAAMg/Ti3c3b9/f82dO1czZ85UpUqV1KxZM0nS2rVr1bNnT61atUpJSUkaNGiQunXrlqcBAwAA5Dc3LQS6jNMLd3/xxRd67bXX5OfnpyVLlki6/I0vc+fOlWVZevnllxUbG5tngQIAACB/OP3VgJZl6YknntDo0aO1detWHThwQOnp6SpTpowaN24sHx+fvIwTAADAbbjr08yucs3fJV2oUCE1btyYh1sAAAAKqGtOGAEAADyNJc8qMTqVMA4dOjTXfS3L0qeffurMZQAAANwSQ9K5MHny5Kv2sSxLxhgSRgAAgBucUwnjihUrsmxPT0/XoUOHtGTJEs2cOVOjRo1S9+7drylAAAAAd0OFMRdat26d4/5Bgwapa9euio6OVo8ePZwKDAAAAO7B6XUYr6Z///6qVauWxo8f76pLAAAA5AvLsly2uSOXJYySVLVqVW3evNmVlwAAAICLuWxZnfT0dP3yyy/y8nJpTgoAAHDdedocxjzP5v7++29t27ZN/fv31969e6863xEAAADuzakKY6FCha7axxijYsWK6Y033nDmEgAAAG7LTacauoxTCWPZsmWznZTp4+OjkiVLqnXr1ho2bJiKFy9+TQECAAC4Gy8PyxidShgPHDiQx2EAAADAXTmVMH7//fcqXLiwOnfunNfxAAAAuD0eesmF22+/Xe+8805exwIAAAAHTJw4UXXq1FFwcLCCg4MVFRWlhQsX2vZfvHhRw4YNU3h4uIKCgtSnTx/Fx8c7fB2nEsZixYqpaNGizhwKAABww7Ms122OKFOmjF599VVt2bJFmzdvVtu2bdWzZ0/9+uuvkqRRo0Zp7ty5mjVrllatWqWjR4+qd+/eDt+vU0PSbdq00caNG2WMcdsVyQEAAAq67t272/388ssva+LEifrpp59UpkwZffrpp5o+fbratm0rSYqNjVWNGjX0008/qWnTprm+jlMVxhdffFEnTpzQqFGjdPHiRWdOAQAAcMPykuWyLTk5WUlJSXZbcnLyVWNKS0vTzJkzdf78eUVFRWnLli26dOmS2rdvb+sTGRmpcuXKaf369Q7dr1MVxhkzZqhLly569913NXPmTLVv317lypWTn59fpr6WZenZZ5915jIAAAAeJyYmRs8//7xd27hx4zR+/Pgs++/YsUNRUVG6ePGigoKCNHv2bNWsWVPbtm2Tj4+PQkND7fqXKFFCcXFxDsWUq4SxUqVK6tu3r1577TVJ0vjx42VZlowxOn78uKZPn57tsSSMAACgoHHljLyxY8dq9OjRdm2+vr7Z9q9evbq2bdumM2fO6Ouvv1Z0dLRWrVqVpzHlKmE8cOCAEhISbD/HxsbmaRAAAAA3Elcuq+Pr65tjgvhvPj4+qlKliiSpYcOG2rRpk95++23dddddSklJUWJiol2VMT4+XhEREQ7F5NSQdHR0tDOHAQAAwMXS09OVnJyshg0bqnDhwlq+fLn69OkjSdq9e7cOHjyoqKgoh87pVMIIAADgydzlqwHHjh2rzp07q1y5cjp79qymT5+ulStXavHixQoJCdG9996r0aNHKywsTMHBwRoxYoSioqIcekJaImEEAAC4YR0/flyDBg3SsWPHFBISojp16mjx4sXq0KGDJGnChAny8vJSnz59lJycrE6dOumDDz5w+DqWMcZcrZOXl5fq1aunXr16OXwBSXruueecOu568a8/PL9DAOAic74Yl98hAHCRTjWL5du1P9nwl8vOfX+T8i47t7NyXWHcvn27tm/f7tDJMxb2dveEEQAAANnLdcJYuXJlNW/e3JWxAAAA3BDcZQ7j9ZLrhLFFixb67LPPXBkLAAAA3BAPvQAAADjIwwqMJIwAAACO8srvAK4zT7tfAAAAOIgKIwAAgIMsDxuTzlXCmJ6e7uo4AAAA4KaoMAIAADjIs+qLzGEEAADAVVBhBAAAcJCnLdxNhREAAAA5osIIAADgIM+qL5IwAgAAOMzDRqQZkgYAAEDOqDACAAA4yNMW7qbCCAAAgBxRYQQAAHCQp1XcPO1+AQAA4CAqjAAAAA5iDiMAAABwBSqMAAAADvKs+iIVRgAAAFwFFUYAAAAHedocRhJGAAAAB3naEK2n3S8AAAAcRIURAADAQZ42JE2FEQAAADmiwggAAOAgz6ovUmEEAADAVVBhBAAAcJCHTWGkwggAAICcUWEEAABwkJeHzWIkYQQAAHAQQ9IAAADAFagwAgAAOMjysCFpKowAAADIERVGAAAABzGHEQAAALgCFUYAAAAHedqyOlQYAQAAkKMbtsI4Y8YMzZ8/XydOnFDp0qV1xx13qHPnzvkdFgAA8ADMYXQDCxYsUM2aNfXSSy9l2meMUZ8+fTRw4EDNmDFDS5YsUWxsrLp166bhw4fnQ7QAAMDTWJbrNnfklgnjokWLtHv3bt12222Z9n388ceaPXu2jDHq1auX3n33XT3yyCPy8fHRxIkTtWTJknyIGAAAoOByyyHp9evXq2TJkmrUqFGmfe+9954sy9LQoUP1ySef2Nrbt2+vHj166LPPPlPHjh2vZ7gAAMDDsHC3Gzhy5IgaNmyYZfuvv/4qSXr88cft9nXr1k2RkZHasGHDdYkRAADAU7hlwnjy5EkFBQVlat+8ebMkqVy5cqpevXqm/dWrV1d8fLzL4wMAAJ7Ny3Ld5o7cMmH09/fX0aNHM7VnVA8bN26c7XGFChVyaWwAAACexi0Txpo1a2r9+vWKi4uza58zZ44sy1KrVq2yPO7gwYMqWbLk9QgRAAB4MMuF/3NHbpkw9u3bVykpKerWrZtWrFihHTt2aNiwYfr9999VuHBh3XHHHZmO+fvvv7V161ZVrlw5HyIGAAAouNzyKelhw4Zp2rRp2rp1q9q3b2+3b9SoUYqIiMh0zFdffaXk5GS1a9fueoUJAAA8lLuul+gqbllh9PHx0Q8//KDhw4erZMmS8vb2VsWKFRUTE6NXXnkly2M+/vhjBQcHZ7l2IwAAQF5ylyHpmJgYNW7cWEWKFFHx4sXVq1cv7d69267PxYsXNWzYMIWHhysoKEh9+vRx+CFhyxhjHDqiAPKvzzfEAAXVnC/G5XcIAFykU81i+XbtlbtPuezcbaqH5brvbbfdpn79+qlx48ZKTU3V008/rZ07d+q3335TYGCgJOmhhx7S/PnzNXnyZIWEhGj48OHy8vLS2rVrc30dtxySBhxRrmSYdi94IVd92987QWu3/iFJeub/uug/D3bJsX/d21/UngMs1QTkl7TUVO37bZt2bd2gfb/+rISjh5WcfEGBRUJUvmoNNe/YU7UaNbM7Jj09XQf2/KpdWzdo744tijv8ly5eOC//gCCVqVRVt9zaRY1adZDlaWOKyFPusvzNokWL7H6ePHmyihcvri1btqhVq1Y6c+aMPv30U02fPl1t27aVJMXGxqpGjRr66aef1LRp01xd54ZNGA8dOqTFixfrxIkTKl26tDp37qybbropv8NCPjh/IVlTv/8p2/01KkWoUe0KSjp3QT//dijT/u27D+uX3YezPDbp3IU8ixOA4/b9+rPeHz9KkhRcNFyVatSRj5+f4g4d0M5Na7Vz01o169hDdz34hC0BPBl/VG+NfUiSFBAUrHJVIhUQVEQn4o5q9/bN2r19s7auWaZ7x7ws78KF8+3egOwkJycrOTnZrs3X11e+vr5XPfbMmTOSpLCwy1XKLVu26NKlS3bPhERGRqpcuXJav379jZ0wbt++XR999JGaNGmi6OjoTPvfeustPfnkk0pNTbW1BQQE6JNPPlG/fv2uZ6hwAycTz+uBcdOy3T/73ct/OGYt3qq/L6Zk2j93xS96+aMFLosPgPMsy0t1o9qoTbe+qlyzrt2+rWuWa8qEF7RuyfeqFHmzbrm1c8ZRqnZzQ7Xt1V+RdRvL64r1effu/FkfvTxGv25ep6XfTlPnu4Zcx7tBQeLK5W9iYmL0/PPP27WNGzdO48ePz/G49PR0jRw5Us2bN1ft2rUlSXFxcfLx8VFoaKhd3xIlSmRavjAnbvnQy9dff62PPvpI4eHhmfYtX75co0eP1qVLl1S6dGn17t1bderU0fnz5xUdHa1du3blQ8RwV6WKhahDVA1J0udz1uVzNAAcVa1OQ9075qVMyaIkNWjRTre0vZwkblz5z7BcsZKlNfyFt1WzQVO7ZFGSqtaurw69B0iSNq20H8oD3MXYsWN15swZu23s2LFXPW7YsGHauXOnZs6cmecxuWXC+OOPP6pIkSJZPvGc8ZR08+bNtXv3bs2aNUs///yzxo0bp0uXLum999673uHCjQ3s0VSFCnnp131HtWnnX/kdDoA8VqZiVUlS4onjDhxTTZJ02oFjgH+zLNdtvr6+Cg4OttuuNhw9fPhwzZs3TytWrFCZMmVs7REREUpJSVFiYqJd//j4+CyXKcyOWyaMBw4cUOPGjeXtbT9inpSUpNWrV8uyLMXExMjf39+275lnnlFERIRWrVp1vcOFG7unRxNJ0udz1mfbp16NsnrxkR567z/99crIXrrrtkYKCrj6PBEA+S/h2OX5x8FFM49IZef4/z8mxIFjAHdljNHw4cM1e/Zs/fDDD6pYsaLd/oYNG6pw4cJavny5rW337t06ePCgoqKicn0dt5zDePz4cbVo0SJT+6ZNm5SWlqawsDA1b97cbp+3t7fq1aunH3/88XqFCTfXomEVVSlXXMkplzR9/sZs+3VrfbO6tb7Zri3x7N967PWvNX1e9scByF9Jp09q4w8LJUl1o9rk6piU5ItaPX/W/z+mtatCgwdwk4ekNWzYME2fPl3fffedihQpYpuXGBISIn9/f4WEhOjee+/V6NGjFRYWpuDgYI0YMUJRUVG5fuBFctOE0bIsnTx5MlP75s2bJUmNGjXKcjmEsLAwuwdh4Nmie17+l9P8VTt0MvF8pv1/Hk7Qs+9+ryVrftXBY5fX06pRqaQeG9JBXVvfrE9fHKT0tHTNXLj5usYN4OrS0lI15a0XdOHvcypVvrKad+yZq+O++ui/Ohl/TCFhN6ljn0EujhIFmZebLMs0ceJESVKbNm3s2mNjYzV48GBJ0oQJE+Tl5aU+ffooOTlZnTp10gcffODQddwyYaxYsaI2b96sCxcu2A07L168WJZlZaouZjh+/LhKlCiR47mzelTdpKfJ8iqUzRG4ERUJ9NPt7etJkj7/Lusld2bM35Spbf32P3XHyI/03zF36OH+bfTa4330zdKfdSk1zZXhAnDQlx++qT2/bFFgkRANfeLFXC2Ps+irydq4YqEK+/hoyOMvKDA45DpECrhWbr5/xc/PT++//77ef/99p6/jlnMYb7vtNp08eVLDhw+3JXdffvmlVq5cKUnq1atXpmOMMdq6davKli2b47ljYmIUEhJit6XGb8nrW0A+69upoQL9fXU47rSWrnP8yfmXPlyg1NQ0FQ8rolturpD3AQJw2jeT3tJPy+YpIKiIHh4/QcVLl7vqMT98N1MLZkySd2Ef3fvkK6pUo851iBQFmeXCzR25ZcL4+OOPq2jRopo8ebKCg4N100036e6775YkdevWTTfffHOmY5YuXapTp06pZcuWOZ47q0fVvUs0dMl9IP9E97w8L2Pq3J9y9a+vfzud9LcSTp+TJJUuEZqXoQG4BrNj39Wq+V/LPzBID4+boLKVql31mFXzv9acye+pkHdh3TvmJdVskPt5WwAuc8uEMSIiQsuXL1etWrV06dIlnTp1SsYYderUSZMnT87ymP/+97+SpE6dOuV47qweVWc4umCJrBShW+pUVHp6uqZkMxx9NV5eloKD/CRJZ88nX6U3gOvhu88/0Irvv5R/wOVksVyVyKses3rBN/pm0lu2ZPHfXyMIOM3DSoxuOYdRkurVq6dffvlF+/btU0JCgsqUKZPjcPMbb7whY4xtZXN4rsG9Lj/ssmrTXh04kvnhqdzo1vpmBfr7Kj09XVt/Y/1GIL99P2Wils+ZfjlZHD9B5avWuOoxaxbN0defTLAli7UbZz3/HcDVuW3CmKFKlSqqUqXKVfvVqXN5Psrp06dVtGhRV4cFN+Xt7aV+XRpLynntxbIRRdW8QRXNXvazklPsn6zv3qaOPnju8jdBzFywWfEnz7ouYABXNe+Lj7Vs9he2YejcJIvrlnyvWR//l2QRLuPKrwZ0R26fMObGpUuXNG/ePE2dOlULFy7UhQsX8jsk5JMuLWurRHiwTif9rTk/bMu2X9HgAMW+HK13nr5L23cf1tHjifL3LazISiVVtXxxSdLKjbv1yCt5//VKAHJvx8Y1WvL1FElSsZJl9OPCb/Xjwsz9goJD1GvwcEnS4f179eWHl0edbipRStvWr9S29SuzPP/AR55xVehAgXJDJ4xr167V1KlTNWvWLCUmJsoYo0KFmI/oyQb9/7UXv1y4OVPl8EqH4xP1ZuwSNaxZXpXLFVO9yLLyKVxIJxPPa/6qHfpq0WbNWrzVqQdmAOSdv88l2f774L7fdXDf71n2CysWYUsYL5w/a/vsxh/5S/FHsp9WQsIIZ7nJMozXjWVusL+Ie/fu1dSpU/XFF1/owIEDki4vqRMVFaX+/fvrzjvvVPHixR06p3/94S6IFIA7mPPFuPwOAYCLdKpZLN+uvenPMy47d+NK7rdG6A1RYTx58qRmzpypqVOnatOmy4stG2Ns3/ayf/9+lS9fPj9DBAAAKLDcclkdSUpJSdGsWbPUo0cPlSpVSo888og2btyoYsWK6ZFHHtGmTZvUrNnl5RFIFgEAwHXFsjr577777tM333yjpKQkGWMUEBCgvn37auDAgerQoQPzFAEAAK4jt0wYP/vsM1mWpZIlSyomJka9e/dWYGBgfocFAAAgyfOW1XHLIWkvLy8ZY3Ts2DE9++yzeuWVV7Rrl+PfBwwAAIBr55YJ4+HDh/XGG2+oTp06OnjwoGJiYlS7dm01bNhQEyZMUFxcXH6HCAAAPJhluW5zR26/rM6vv/6qKVOmaPr06Tpy5Igsy5KXl5fatm2r33//XYcPH1ZaWto1XYNldYCCi2V1gIIrP5fV2XIg6eqdnNSwQrDLzu0st6wwXqlWrVp67bXXdPDgQS1btkz33HOPAgICtHTpUh06dEiS1K9fP82ZM0cpKSn5HC0AAPAEHvaQtPsnjBksy1Lbtm01efJkxcfH64svvlDnzp1VqFAhffXVV+rTp49KlCihe++9N79DBQAABZ2HZYw3TMJ4JT8/P/Xv31/z58/XkSNHNGHCBDVo0EBnzpzR5MmT8zs8AACAAsUtl9XJsGDBAs2ZM0eHDh2Sr6+v6tSpoyFDhqhixYq2PsWKFdOjjz6qRx99VLt27dK0adPyMWIAAOAJPG1ZHbd96GXAgAGaOXOmJNm+RN6yLPn6+mrmzJnq0aNHnl2Lh16AgouHXoCCKz8fevn5r7MuO3f98kVcdm5nuWWF8dNPP9WMGTPk7e2te+65R/Xr19fZs2c1b948rV+/XoMGDdJff/2lkBD3+3JuAABQ8Lnr8jeu4pYJ4+effy4vLy8tXLhQ7dq1s7WPHTtWQ4YM0ZQpU/Ttt99qyJAh+RglAACAZ3DLh1527Nihpk2b2iWLGZ5++mkZY7Rjx458iAwAAMDjHpJ2z4QxKSlJlStXznJfRntSkusWzAQAAMA/3HJI2hijQoUKZbnPy+tyjpuenn49QwIAAPiHu5YCXcQtE0YAAAB35mnL6rjlkLR0+cGXQoUKZblZlpXtfm9vcmAAAIC85LbZlbPLQ7rpspIAAKAAYVkdN8D8RAAAAPfhlgkjAACAO/OwAqP7zmEEAACAe6DCCAAA4CgPKzFSYQQAAECOqDACAAA4iHUYAQAAgCtQYQQAAHAQ6zACAAAgRx6WLzIkDQAAgJxRYQQAAHCUh5UYqTACAAAgR1QYAQAAHMSyOgAAAMAVqDACAAA4yNOW1aHCCAAAgBxRYQQAAHCQhxUYSRgBAAAc5mEZI0PSAAAAyBEVRgAAAAexrA4AAABwBSqMAAAADmJZHQAAANwwVq9ere7du6tUqVKyLEtz5syx22+M0XPPPaeSJUvK399f7du31969ex26BgkjAACAgywXbo46f/686tatq/fffz/L/a+//rreeecdffjhh9qwYYMCAwPVqVMnXbx4MdfXYEgaAADgBta5c2d17tw5y33GGL311lv6z3/+o549e0qSpkyZohIlSmjOnDnq169frq5BhREAAMBRLiwxJicnKykpyW5LTk52Ksz9+/crLi5O7du3t7WFhISoSZMmWr9+fa7PQ8IIAADgIMuF/4uJiVFISIjdFhMT41SccXFxkqQSJUrYtZcoUcK2LzcYkgYAAHAjY8eO1ejRo+3afH198ymay0gYAQAAHOTKZXV8fX3zLEGMiIiQJMXHx6tkyZK29vj4eNWrVy/X52FIGgAAoICqWLGiIiIitHz5cltbUlKSNmzYoKioqFyfhwojAACAg9xp3e5z585p3759tp/379+vbdu2KSwsTOXKldPIkSP10ksvqWrVqqpYsaKeffZZlSpVSr169cr1NUgYAQAAbmCbN2/Wrbfeavs5Y/5jdHS0Jk+erDFjxuj8+fN64IEHlJiYqBYtWmjRokXy8/PL9TUsY4zJ88hvMP71h+d3CABcZM4X4/I7BAAu0qlmsXy79oGTuV/02lEVwnOfyF0vzGEEAABAjhiSBgAAcJDlVrMYXY+EEQAAwEGuXFbHHTEkDQAAgBxRYQQAAHCQhxUYqTACAAAgZ1QYAQAAHMQcRgAAAOAKVBgBAAAc5lklRiqMAAAAyBEVRgAAAAd52hxGEkYAAAAHeVi+yJA0AAAAckaFEQAAwEGeNiRNhREAAAA5osIIAADgIMvDZjFSYQQAAECOqDACAAA4yrMKjFQYAQAAkDMqjAAAAA7ysAIjCSMAAICjWFYHAAAAuAIVRgAAAAexrA4AAABwBSqMAAAAjvKsAiMVRgAAAOSMCiMAAICDPKzASIURAAAAOaPCCAAA4CBPW4eRhBEAAMBBLKsDAAAAXIEKIwAAgIM8bUiaCiMAAAByRMIIAACAHJEwAgAAIEfMYQQAAHAQcxgBAACAK1BhBAAAcJCnrcNIwggAAOAghqQBAACAK1BhBAAAcJCHFRipMAIAACBnVBgBAAAc5WElRiqMAAAAyBEVRgAAAAd52rI6VBgBAACQIyqMAAAADmIdRgAAAOAKVBgBAAAc5GEFRhJGAAAAh3lYxsiQNAAAAHJEwggAAOAgy4X/c8b777+vChUqyM/PT02aNNHGjRvz9H5JGAEAAG5gX375pUaPHq1x48Zp69atqlu3rjp16qTjx4/n2TVIGAEAABxkWa7bHPW///1P999/v4YMGaKaNWvqww8/VEBAgD777LM8u18SRgAAADeSnJyspKQkuy05OTnLvikpKdqyZYvat29va/Py8lL79u21fv36PIuJp6QlXfj5vfwOAddJcnKyYmJiNHbsWPn6+uZ3OADyEJ9vXE9+Lsygxr8Uo+eff96ubdy4cRo/fnymvidOnFBaWppKlChh116iRAn9/vvveRaTZYwxeXY2wM0lJSUpJCREZ86cUXBwcH6HAyAP8flGQZGcnJypoujr65vlP4SOHj2q0qVLa926dYqKirK1jxkzRqtWrdKGDRvyJCYqjAAAAG4ku+QwKzfddJMKFSqk+Ph4u/b4+HhFRETkWUzMYQQAALhB+fj4qGHDhlq+fLmtLT09XcuXL7erOF4rKowAAAA3sNGjRys6OlqNGjXSLbfcorfeekvnz5/XkCFD8uwaJIzwKL6+vho3bhwT4oECiM83PNVdd92lhIQEPffcc4qLi1O9evW0aNGiTA/CXAseegEAAECOmMMIAACAHJEwAgAAIEckjAAAAMgRCSNuCJZl5bi1adMm0zHHjh2Tt7e3LMvS0KFDczz/4MGDZVmWJk+enKt2AM7592fXy8tLoaGhatmypSZNmqTsptU78nnO6P/444+rVq1aCggIkL+/v8qXL6/WrVvrP//5j7Zt25bpmOTkZE2YMEFRUVEKCQmRj4+PSpYsqUaNGmnEiBGaP3/+td4+cMPiKWncUKKjo7Nsj4yMzNQ2ffp0paWlSZK++eYbffDBB/Lz83NpfAByJ+OznJaWpj/++ENr167VmjVrtHz5cs2YMSNTf0c+z9u2bVO7du106tQphYWFqWXLlgoPD1d8fLw2bdqk1atX68SJE/rwww9txyQmJqpdu3baunWrChcurKioKJUqVUrnzp3Tli1b9N5772np0qXq2rWrC14NwP2RMOKG4kilb+rUqZKkkiVL6tixY/ruu+901113uSgyAI7492d56dKl6tKli2bOnKkBAwaoW7dudvsd+TwPGjRIp06dUnR0tN5//30FBgba9qWkpGjRokU6efKk3THPPfectm7dqnr16mnevHkqXbq03f6NGzdq0aJFzt4ucMNjSBoF0s6dO7V9+3aVLVtWMTExkv75gwPA/XTo0EH33HOPJGnOnDl2+xz5PO/du1c7duyQt7e3Jk6caJcsSpe/FaNHjx6ZFjT+5ptvJElvvPFGpmRRkm655RY999xzTt0bUBCQMKJAyvhjcvfdd6tPnz4KCAjQ4sWLlZCQkM+RAchO/fr1JUmHDh2ya3fk85zRVqRIEfn7++f62hnHFStWzKnYgYKOhBEFTnp6ur744gtJ0sCBAxUUFKRevXopNTVVM2fOzOfoAGTn7NmzkmT3TS2Ofp7LlCkjSTp9+nSWcyGzU7ZsWUnShx9+mO2DN4AnI2FEgbNixQodOXJEdevWVe3atSVd/kMjMSwNuCtjjObNmydJqlOnjq3d0c9zuXLl1KlTJ0mXK5K33nqrXn31VS1btkxnzpzJ9vr333+/pMsJY82aNTV27FjNmTNHhw8fzpsbBG5wJIy4oWS3rM6BAwdsfTL+iGT8UZEuz48qXry4Nm3apN27d1/vsAFkIy0tTXv37tXQoUO1fv16+fr62s0vdObz/MUXX9gemlm5cqXGjh2rDh06KDw8XG3bttWyZcsyHTNmzBiNGTNGhQsX1u+//65XX31Vt99+u8qWLavatWvrww8/VHp6el7fPnDDIGHEDSU6OjrLLSgoSJJ04cIFffvtt/Ly8tLdd99tO87b21v9+/eXRJURcAcZ/9jz9vZWtWrVNHnyZBUpUkQzZsxQ5cqVJTn/eQ4PD9fcuXO1bds2jR8/Xh06dFDRokWVlpamFStWqEOHDvrf//5nd4yXl5dee+01HThwQG+//bb69OmjcuXKSZJ+/fVXPfTQQ+rTpw9JIzyXAW4Akkxufl2nT59uJJn27dtn2rdp0yYjyVSoUMGkp6fb7YuOjjaSTGxsbK7aATgn47McHR1toqOjzZAhQ8yjjz5qJk2aZE6dOmXX19nPc1ZSU1PNqlWrTLNmzYwk4+3tbQ4cOHDV43777TczdOhQW9zTpk3L/c0CBQjrMKJAyag27N69Wy1atMi0P2P4es2aNWrZsuX1Dg/A/5ebNVXz8vNcqFAhtWrVSkuXLlX16tV1+PBhLV68WA888ECOx9WoUUOffvqpTp8+rdmzZ2v+/PkaMGDAVWMHChoSRhQYx48f19KlSyVdXpbj30tzXGnq1KkkjIAbc9XnOSAgQE2aNNHhw4d14sSJXMfTtm1bzZ4926FjgIKEOYwoMGbMmKHU1FTdcccdMsZkue3fv1+SNGvWLCUnJ+dzxACy4+zn2eRiSZx9+/ZJkt0C3Vc7LqtjAE9CwogCI2P4KmMyfFYqVKigqKgoJSYm2pbwAOB+nP08//LLL+rYsaMWL16c6QGVS5cu6fnnn9f27dsVEBCgzp072/Y1a9ZMsbGxOn/+fKbrzJs3z/a903fcccc13xtwI2JIGgXCrl27tGXLFgUHB6tLly459u3fv7/Wr1+vqVOnqk+fPrk6/4svvmj7g/FvJUuW1OzZsx2OGUDWruXzbIzR0qVLtXTpUoWFhalBgwYqXry4Tp06pW3btikuLk7e3t76+OOPVbx4cbtrDh06VA8//LAaNGigcuXK6cKFC9q9e7d+//13SdKDDz6orl27uvTeAXdFwogCIaMacfvtt8vPzy/HvnfeeadGjRqlBQsW6OTJkwoPD7/q+f/880/9+eefWe4rX7684wEDyNa1fJ5r166tH374QYsXL9aPP/6o3bt3a/Xq1fL29lb58uXVs2dPjRgxQrVq1bI7z+rVq7Vo0SItX75cf/zxh7Zt26a0tDSVKFFCd9xxh4YOHWpXkQQ8jWVyM+EDAAAAHos5jAAAAMgRCSMAAAByRMIIAACAHJEwAgAAIEckjAAAAMgRCSMAAAByRMIIAACAHJEwAgAAIEckjAAAAMgRCSPgZizLstu8vLwUGhqqli1batKkScrvL2eaPHmyLMvS+PHj7doHDx4sy7K0cuXKfInLWW3atJFlWTpw4ECu+mfc/+DBg10Sz4EDB2RZltq0aeOS81+pQoUKsizL5dcBcOMjYQTcVHR0tKKjozVgwADVrFlTa9eu1f3336+77747v0NzmeySUQBA/vLO7wAAZG3y5Ml2Py9dulRdunTRzJkzNWDAAHXr1i1/AstGTEyMnnrqKZUrVy6/QwEA5DEqjMANokOHDrrnnnskSXPmzMnfYLJQsmRJRUZGKiAgIL9DAQDkMRJG4AZSv359SdKhQ4dsbZZlqUKFCkpJSdELL7ygyMhI+fr6qlevXrY+f//9t2JiYlS/fn0FBQUpKChITZs21eeff57ttdauXav27durSJEiCg0NVadOnbRhw4Zs++c0h/H8+fN67bXX1KhRIwUHByswMFCRkZEaNmyY9uzZI+nyXMIhQ4ZIkp5//nm7eZz/rrbu2rVLgwcPVtmyZeXr66sSJUqoX79++vXXX7OMLS0tTW+++aYiIyPl5+ensmXL6tFHH1VSUlK295NXtm3bpjFjxqhhw4YqVqyYfH19ValSJT388MM6evRojscmJSXp0UcfVdmyZeXn56caNWpowoQJSk9Pz7K/M+9zVnbu3KmBAweqUqVK8vPzU7FixVSvXj2NHDlSx44dc+hcAAoGhqSBG8jZs2clSb6+vnbt6enp6tWrl1avXq3WrVurTp06Cg8PlyQdP35cHTp00C+//KKIiAi1bt1axhitW7dOgwcP1ubNm/Xuu+/anW/evHm6/fbblZqaqltuuUWVKlXS9u3b1apVK4cf9jh27Jg6dOigX3/9VUWLFlWbNm3k6+urP//8Ux9++KGqVq2qatWq6bbbblNqaqrWrl2runXrql69erZzVKlSxfbfc+bMUb9+/ZScnKx69eqpadOmOnTokL766ivNnTtXCxcuVKtWrexiGDhwoGbOnKmAgAB17NhR3t7e+vzzz7V27VoVLlzYoftx1KuvvqpvvvlGderUUYsWLSRdTiInTpyoOXPmaPPmzSpVqlSm45KTk9W2bVv98ccfatu2rVJSUrR8+XKNHj1a27dvz5REO/M+Z2XLli1q0aKFLl68qDp16qhnz576+++/9eeff+rtt99Wr169VLJkyTx5bQDcQAwAtyLJZPXRTE9PN1FRUUaSeeaZZzL1r1Klijl8+HCm47p06WIkmUcffdRcvHjR1h4XF2caNWpkJJmFCxfa2pOSkkyxYsWMJPPZZ5/ZXf/JJ5+0XW/cuHF214mOjjaSzIoVK+za27VrZySZO++805w9e9Zu3/79+8327dttP8fGxmZ57iv7BwYGmqCgILN06VK7fQsXLjSFCxc2ZcuWNcnJybb2mTNnGkmmXLlyZv/+/bb2+Ph4U7t2bdv9XLkvJxkxRkdH56r/Dz/8YOLi4uza0tLSzPPPP28kmSFDhmS6x4yY6tSpYxISEmz79u3bZ0qVKmUkmdmzZ9sd5+j7bIwx5cuXz/S7NmjQICPJvPnmm5nuZdeuXebo0aO5um8ABQsJI+Bm/p0wpqammj179pjBgwcbScbX19fs27cvU/9Zs2ZlOtfPP/9sJJnGjRubtLS0TPu3bt1qJJkePXrY2j777DMjybRq1SpT/5SUFFOmTJlcJ4wbNmwwkkzx4sVNUlLSVe/9agnjo48+aiSZd999N8v9jzzyiJFkvv32W1tbq1atMiW/GRYuXOjyhDEnpUuXNuHh4XZtVyaMS5YsyXTMxIkTjSTTrl07W5sz77MxWSeMnTt3NpLMtm3bruXWABQwzGEE3FTG/D1vb29Vq1ZNkydPVpEiRTRjxgxVrlw5U9/u3btnOseSJUskSb169ZKXV+aPe8Zct40bN9rafvzxR0lSv379MvUvXLiw7rjjjlzfw7JlyyRJ/fv3V5EiRXJ9XHYy7qd3795Z7m/ZsqUk2e7n0qVL+umnnyRJd911V6b+t912m4oWLXrNcV3NyZMnFRsbq8cee0z33nuvBg8erMGDB+vSpUs6efKkTp06lemYsLAwdejQIVN7//79JUnr1q2zzWV05n3OTsOGDSVJw4YN08qVK5Wampr7GwVQYDGHEXBT0dHRkiQvLy8FBwfr5ptvVu/evbNMcIoXL55pXqMk22LUzzzzjJ555plsr3Xx4kXbf2c8iFG+fPks+1aoUCG3t2B7OOffCa6zMu6ndOnSOfY7ceKEpMuJWkpKiooVK5bt09vly5fX6dOn8yS+rMyYMUMPPPCAzp07l22fs2fPKiwsLFNcWQkJCVFoaKgSExN1+vRphYeHO/U+Z+eJJ57QmjVrtHLlSt16660KCgpSVFSUunbtqsGDByskJOSq5wBQ8JAwAm7q3w815MTPzy/L9owKVIsWLfIsactPGfeTkUxnp0mTJtcjnKv666+/bA8JvfXWW+ratatKly4tf39/SVKzZs20fv36a/72nrx8n4ODg/XDDz9o7dq1mjt3rlauXKkffvhBS5cuVUxMjH788UdVrVr1mq4B4MZDwggUYGXKlJF0eajysccey9UxGU/A/vXXX1nuz649K2XLlpUk/fHHH7k+JidlypTRH3/8of/+97+2p8BzEh4eLh8fHyUkJOjChQu2RO1KBw8ezJPYsrJgwQKlpKTo8ccf16OPPppp/59//pntsdnFlZSUpMTERPn7+ys0NFSSc+9zTizLUosWLWxPdR8/flwjR47UjBkz9Mwzz+irr7665msAuLEwhxEowDLmwM2ePTvXx2TMA8wqKUhNTdU333yT63O1b99e0uVh2ZyGZDP4+PjYrpMVR++ncOHCtmpjVvezZMmSLOcP5pWMoe6MhO5Kq1evVnx8fLbHnjx5UsuXL8/UPnPmTElSVFSUChUqJMm599kRxYsXt31d486dO11yDQDujYQRKMCaNGmiDh06aO3atRo2bFiWC1Vv375dixYtsv3ct29fhYeHa+XKlXYLPhtjNG7cOIcqcrfccotuvfVWHT9+XA888IDOnz9vt//AgQPasWOH7eeM9Qh3796d5fkee+wx+fv76/HHH9e3336baX9ycrK+/vprHT582Nb20EMPSVKm2E+cOKEnnngi1/fijGrVqkmSpk2bZnfvR44c0YMPPnjV4x9//HGdPHnS9vP+/fv1wgsvSLr8UEoGZ97n7Hz44Yfav39/pvYFCxZI+qdqDMDD5Pdj2gDsKZt1GHPqX758+Wz3x8fHm/r16xtJJjQ01LRp08bcfffdpmvXrqZs2bK2tfuuNGfOHFOoUCEjyTRp0sT079/f1KxZ0xQuXNjcf//9Dq3DePjwYVO9enUjyYSFhZkePXqYvn37mgYNGhgvLy8zYcIEW98LFy6Y4sWLG0mmdevWZsiQIebee+81a9eutYstICDAtvZk9+7dTb9+/UzLli1NYGCgkWR+/vlnuxj69u1rJJnAwEDTo0cP07t3bxMaGmoaNGhgmjZt6tSyOjfddJNp0qRJttvRo0dNcnKyqVWrlpFkIiIiTJ8+fUzXrl1NQECAadasmWnWrFmma2csq9O0aVPToEEDExoaanr37m26d+9uu++BAwfmyfuc1bI6devWNZJMzZo1TZ8+fcxdd91la/Pz8zNr1qzJ1esEoGAhYQTcTF4njMZcTsTeeecd06xZMxMSEmJ8fHxM2bJlTevWrc0bb7xhDh06lOmY1atXm1tvvdUEBgaa4OBg065dO7Nu3bps10rMLmE05vJi4C+88IKpU6eO8ff3N0FBQSYyMtIMHz7c7N27167vpk2bTIcOHUxISIixLMtIMrGxsXZ99u3bZx5++GFTtWpV4+fnZ4oUKWKqV69u+vXrZ7766iu7hbuNMebSpUvmtddeM9WqVTM+Pj6mVKlS5uGHHzaJiYmmdevWTiWMV9syznfq1Cnz0EMPmQoVKhhfX19TqVIl8+STT5rz589nee2MhLF169YmMTHRPPzww6ZUqVLGx8fHVK9e3bz55psmNTU1y9gcfZ+zShi///57M3ToUFOrVi0TGhpqAgICTLVq1cx9991nfv/991y9RgAKHsuYa3w8DwAAAAUacxgBAACQIxJGAAAA5IiEEQAAADkiYQQAAECOSBgBAACQIxJGAAAA5IiEEQAAADkiYQQAAECOSBgBAACQIxJGAAAA5IiEEQAAADkiYQQAAECO/h/pFAOfZUuUJQAAAABJRU5ErkJggg==\n","text/plain":["\u003cFigure size 800x600 with 2 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.naive_bayes import GaussianNB\n","\n","naive_bayes_model = GaussianNB()\n","naive_bayes_model.fit(x_train, y_train)\n","\n","y_pred = naive_bayes_model.predict(x_test)\n","y_pred\n","\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n","print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))\n","\n","# Compute confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","\n","# Plot confusion matrix\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',\n","            xticklabels=naive_bayes_model.classes_, yticklabels=naive_bayes_model.classes_,\n","            annot_kws={\"size\": 16})\n","\n","# Adjust tick labels font size\n","plt.xticks(fontsize=15)\n","plt.yticks(fontsize=15)\n","\n","plt.title('Confusion Matrix physiology', fontsize = 15)\n","plt.xlabel('Predicted Labels', fontsize = 15)\n","plt.ylabel('True Labels', fontsize = 15)\n","plt.savefig(\"cm_physiology\", dpi=300)\n","plt.show()"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":25,"status":"ok","timestamp":1737716315127,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"BZrrG641hWFL","outputId":"f21bd453-b64a-46dc-d7c3-bf4e942be9c9"},"outputs":[{"name":"stdout","output_type":"stream","text":["Fitting 5 folds for each of 11 candidates, totalling 55 fits\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py:960: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_validation.py\", line 949, in _score\n","    scores = scorer(estimator, X_test, y_test, **score_params)\n","             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 288, in __call__\n","    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n","           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 380, in _score\n","    y_pred = method_caller(\n","             ^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_scorer.py\", line 90, in _cached_call\n","    result, _ = _get_response_values(\n","                ^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/sklearn/utils/_response.py\", line 207, in _get_response_values\n","    raise ValueError(\n","ValueError: pos_label=1 is not a valid label: It should be one of ['FAIL' 'PASS']\n","\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py:1107: UserWarning: One or more of the test scores are non-finite: [nan nan nan nan nan nan nan nan nan nan nan]\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]},{"name":"stdout","output_type":"stream","text":["Best Parameters: {'var_smoothing': 10.0}\n","Best Score: nan\n","\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","        FAIL       0.00      0.00      0.00         7\n","        PASS       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","\n","Confusion Matrix:\n"," [[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.naive_bayes import GaussianNB\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix\n","import numpy as np\n","\n","# Mendefinisikan parameter yang akan di-tune\n","param_grid = {\n","    'var_smoothing': np.logspace(1, 0, 11)\n","}\n","\n","# Membuat model base\n","nb_model = GaussianNB()\n","\n","# Membuat GridSearchCV\n","grid_search = GridSearchCV(\n","    estimator=nb_model,\n","    param_grid=param_grid,\n","    cv=5,  # 5-fold cross validation\n","    scoring='recall',\n","    n_jobs=1,  # Menggunakan semua core CPU\n","    verbose=1\n",")\n","\n","# Melakukan fitting dengan data training\n","grid_search.fit(x_train, y_train)\n","\n","# Mendapatkan parameter terbaik\n","print(\"Best Parameters:\", grid_search.best_params_)\n","print(\"Best Score:\", grid_search.best_score_)\n","\n","# Menggunakan model terbaik untuk prediksi\n","best_model = grid_search.best_estimator_\n","y_pred = best_model.predict(x_test)\n","\n","# Menampilkan laporan klasifikasi dan matriks kebingungan\n","print(\"\\nClassification Report:\\n\", classification_report(y_test, y_pred))\n","print(\"\\nConfusion Matrix:\\n\", confusion_matrix(y_test, y_pred))"]},{"cell_type":"markdown","metadata":{"id":"uw64zNqT09Qq"},"source":["### 3.7 XGBOOST"]},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":319,"status":"ok","timestamp":1737716315434,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"Qg8LMbdEzb6a","outputId":"ef3dd9f5-1aaa-4ff8-ea29-d96421eb46b7"},"outputs":[{"name":"stdout","output_type":"stream","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.00      0.00      0.00         7\n","           1       0.93      0.91      0.92        97\n","\n","    accuracy                           0.85       104\n","   macro avg       0.46      0.45      0.46       104\n","weighted avg       0.86      0.85      0.85       104\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 9 88]]\n"]}],"source":["import xgboost as xgb\n","from sklearn.preprocessing import StandardScaler, LabelEncoder\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Standarisasi data\n","scaler = StandardScaler()\n","x_train_scaled = scaler.fit_transform(x_train)\n","x_test_scaled = scaler.transform(x_test)\n","\n","# Menggunakan LabelEncoder untuk mengonversi label menjadi format numerik\n","label_encoder = LabelEncoder()\n","y_train = label_encoder.fit_transform(y_train)\n","y_test = label_encoder.transform(y_test)\n","\n","# Initialize XGBoost classifier\n","xgb_clf = xgb.XGBClassifier(learning_rate=14, max_depth=5, random_state=2022)\n","\n","# Fit the model on the training data\n","xgb_clf.fit(x_train, y_train)\n","\n","# Predict on the test set\n","y_pred = xgb_clf.predict(x_test)\n","y_pred\n","\n","# Test Model\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"markdown","metadata":{"id":"1WWOx3ts1DeC"},"source":["### 3.8 K-NN"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1737716315434,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"6zkTgknOzjFP","outputId":"29293434-b879-4ed8-e786-f1942d079ab6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.00      0.00      0.00         7\n","           1       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Initialize KNN classifier\n","knn_clf = KNeighborsClassifier(n_neighbors=18)\n","\n","# Fit the model on the training data\n","knn_clf.fit(x_train, y_train)\n","\n","# Predict on the test set\n","y_pred = knn_clf.predict(x_test)\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n"]},{"cell_type":"code","execution_count":34,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":340,"status":"ok","timestamp":1737716315770,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"zxubv-7itnCo","outputId":"20f6d70c-346e-4d50-db37-b85c2f615c2e"},"outputs":[{"name":"stdout","output_type":"stream","text":["Fitting 5 folds for each of 6 candidates, totalling 30 fits\n","Best Hyperparameters: {'n_neighbors': 16}\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.00      0.00      0.00         7\n","           1       0.93      1.00      0.97        97\n","\n","    accuracy                           0.93       104\n","   macro avg       0.47      0.50      0.48       104\n","weighted avg       0.87      0.93      0.90       104\n","\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 0 97]]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Initialize KNN classifier\n","knn_clf = KNeighborsClassifier()\n","\n","# Tentukan grid hyperparameter yang akan di-tuning\n","param_grid = {\n","    'n_neighbors': [1, 2, 3, 16, 17, 18],               # Jumlah tetangga dari 1 hingga 30      # Skema pembobotan (uniform atau berdasarkan jarak)\n","}\n","\n","# Inisialisasi GridSearchCV\n","grid_search_knn = GridSearchCV(\n","    knn_clf,\n","    param_grid=param_grid,\n","    cv=5,                      # 5-fold cross-validation\n","    scoring='recall',     # Metrik evaluasi: recall macro\n","    verbose=1                   # Output progress\n",")\n","\n","# Latih model dengan data training menggunakan GridSearchCV\n","grid_search_knn.fit(x_train, y_train)\n","\n","# Prediksi hasil menggunakan model terbaik dari hasil tuning\n","y_pred = grid_search_knn.best_estimator_.predict(x_test)\n","\n","# Cetak hasil terbaik hyperparameter yang ditemukan\n","print(\"Best Hyperparameters:\", grid_search_knn.best_params_)\n","\n","# Evaluasi performa model\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"markdown","metadata":{"id":"tIODBlae1Nbt"},"source":["### 3.9 CATBOOST"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11351,"status":"ok","timestamp":1737716327117,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"NPk-YKOTznTJ","outputId":"674adc40-5b0d-4571-9b7d-c0fbc5acb25f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting catboost\n","  Downloading catboost-1.2.7-cp311-cp311-manylinux2014_x86_64.whl.metadata (1.2 kB)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.11/dist-packages (from catboost) (0.20.3)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (from catboost) (3.10.0)\n","Requirement already satisfied: numpy\u003c2.0,\u003e=1.16.0 in /usr/local/lib/python3.11/dist-packages (from catboost) (1.26.4)\n","Requirement already satisfied: pandas\u003e=0.24 in /usr/local/lib/python3.11/dist-packages (from catboost) (2.2.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from catboost) (1.13.1)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.11/dist-packages (from catboost) (5.24.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.11/dist-packages (from catboost) (1.17.0)\n","Requirement already satisfied: python-dateutil\u003e=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas\u003e=0.24-\u003ecatboost) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas\u003e=0.24-\u003ecatboost) (2024.2)\n","Requirement already satisfied: tzdata\u003e=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas\u003e=0.24-\u003ecatboost) (2024.2)\n","Requirement already satisfied: contourpy\u003e=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib-\u003ecatboost) (1.3.1)\n","Requirement already satisfied: cycler\u003e=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib-\u003ecatboost) (0.12.1)\n","Requirement already satisfied: fonttools\u003e=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib-\u003ecatboost) (4.55.3)\n","Requirement already satisfied: kiwisolver\u003e=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib-\u003ecatboost) (1.4.8)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib-\u003ecatboost) (24.2)\n","Requirement already satisfied: pillow\u003e=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib-\u003ecatboost) (11.1.0)\n","Requirement already satisfied: pyparsing\u003e=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib-\u003ecatboost) (3.2.1)\n","Requirement already satisfied: tenacity\u003e=6.2.0 in /usr/local/lib/python3.11/dist-packages (from plotly-\u003ecatboost) (9.0.0)\n","Downloading catboost-1.2.7-cp311-cp311-manylinux2014_x86_64.whl (98.7 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.7/98.7 MB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: catboost\n","Successfully installed catboost-1.2.7\n"]}],"source":["!pip install catboost"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2474,"status":"ok","timestamp":1737716329569,"user":{"displayName":"polaris ai","userId":"13768565794035999878"},"user_tz":-420},"id":"ICksSVggzpZh","outputId":"3e45c4e0-0c7b-4e2e-a725-f73e07c4186b"},"outputs":[{"name":"stderr","output_type":"stream","text":["learning rate is greater than 1. You probably need to decrease learning rate.\n","learning rate is greater than 1. You probably need to decrease learning rate.\n","learning rate is greater than 1. You probably need to decrease learning rate.\n","learning rate is greater than 1. You probably need to decrease learning rate.\n"]},{"name":"stdout","output_type":"stream","text":["0:\tlearn: 0.3349009\ttotal: 47.5ms\tremaining: 47.5s\n","1:\tlearn: 2.0948889\ttotal: 48.4ms\tremaining: 24.1s\n","2:\tlearn: 0.6039121\ttotal: 49.2ms\tremaining: 16.4s\n","3:\tlearn: 1.8621142\ttotal: 50.1ms\tremaining: 12.5s\n","4:\tlearn: 0.4553068\ttotal: 51.9ms\tremaining: 10.3s\n","5:\tlearn: 0.2574564\ttotal: 53.1ms\tremaining: 8.79s\n","6:\tlearn: 0.0753625\ttotal: 54.7ms\tremaining: 7.76s\n","7:\tlearn: 0.0128919\ttotal: 56.3ms\tremaining: 6.98s\n","8:\tlearn: 0.0151022\ttotal: 57.6ms\tremaining: 6.34s\n","9:\tlearn: 0.0180596\ttotal: 58.9ms\tremaining: 5.83s\n","10:\tlearn: 0.0213500\ttotal: 60.6ms\tremaining: 5.45s\n","11:\tlearn: 0.0241797\ttotal: 61.9ms\tremaining: 5.1s\n","12:\tlearn: 0.0258463\ttotal: 63.2ms\tremaining: 4.8s\n","13:\tlearn: 0.0265185\ttotal: 64.8ms\tremaining: 4.56s\n","14:\tlearn: 0.0267273\ttotal: 66.3ms\tremaining: 4.35s\n","15:\tlearn: 0.0267795\ttotal: 67.9ms\tremaining: 4.17s\n","16:\tlearn: 0.0267790\ttotal: 69.3ms\tremaining: 4.01s\n","17:\tlearn: 0.0267688\ttotal: 70.9ms\tremaining: 3.87s\n","18:\tlearn: 0.0267504\ttotal: 72.4ms\tremaining: 3.74s\n","19:\tlearn: 0.0267352\ttotal: 73.9ms\tremaining: 3.62s\n","20:\tlearn: 0.0318185\ttotal: 75.4ms\tremaining: 3.52s\n","21:\tlearn: 0.0334176\ttotal: 78.9ms\tremaining: 3.51s\n","22:\tlearn: 0.0265410\ttotal: 81.6ms\tremaining: 3.47s\n","23:\tlearn: 0.0266659\ttotal: 88.3ms\tremaining: 3.59s\n","24:\tlearn: 0.0266957\ttotal: 89.7ms\tremaining: 3.5s\n","25:\tlearn: 0.0266998\ttotal: 92.9ms\tremaining: 3.48s\n","26:\tlearn: 0.0266994\ttotal: 96.4ms\tremaining: 3.47s\n","27:\tlearn: 0.0266943\ttotal: 98.1ms\tremaining: 3.41s\n","28:\tlearn: 0.0266910\ttotal: 101ms\tremaining: 3.4s\n","29:\tlearn: 0.0266818\ttotal: 105ms\tremaining: 3.39s\n","30:\tlearn: 0.0266812\ttotal: 107ms\tremaining: 3.33s\n","31:\tlearn: 0.0266791\ttotal: 110ms\tremaining: 3.33s\n","32:\tlearn: 0.0266757\ttotal: 114ms\tremaining: 3.34s\n","33:\tlearn: 0.0266686\ttotal: 116ms\tremaining: 3.28s\n","34:\tlearn: 0.0286103\ttotal: 119ms\tremaining: 3.27s\n","35:\tlearn: 0.0269695\ttotal: 120ms\tremaining: 3.22s\n","36:\tlearn: 0.0268588\ttotal: 121ms\tremaining: 3.16s\n","37:\tlearn: 0.0268056\ttotal: 123ms\tremaining: 3.12s\n","38:\tlearn: 0.0267750\ttotal: 125ms\tremaining: 3.09s\n","39:\tlearn: 0.0267534\ttotal: 127ms\tremaining: 3.05s\n","40:\tlearn: 0.0267386\ttotal: 129ms\tremaining: 3.02s\n","41:\tlearn: 0.0267221\ttotal: 131ms\tremaining: 2.99s\n","42:\tlearn: 0.0267137\ttotal: 133ms\tremaining: 2.96s\n","43:\tlearn: 0.0267052\ttotal: 134ms\tremaining: 2.91s\n","44:\tlearn: 0.0266999\ttotal: 135ms\tremaining: 2.87s\n","45:\tlearn: 0.0266937\ttotal: 137ms\tremaining: 2.84s\n","46:\tlearn: 0.0266899\ttotal: 138ms\tremaining: 2.81s\n","47:\tlearn: 0.0266854\ttotal: 140ms\tremaining: 2.77s\n","48:\tlearn: 0.0266823\ttotal: 142ms\tremaining: 2.76s\n","49:\tlearn: 0.0266784\ttotal: 143ms\tremaining: 2.72s\n","50:\tlearn: 0.0266760\ttotal: 145ms\tremaining: 2.7s\n","51:\tlearn: 0.0266727\ttotal: 147ms\tremaining: 2.67s\n","52:\tlearn: 0.0266715\ttotal: 148ms\tremaining: 2.64s\n","53:\tlearn: 0.0266682\ttotal: 150ms\tremaining: 2.63s\n","54:\tlearn: 0.0266669\ttotal: 151ms\tremaining: 2.6s\n","55:\tlearn: 0.0266642\ttotal: 153ms\tremaining: 2.57s\n","56:\tlearn: 0.0266632\ttotal: 155ms\tremaining: 2.56s\n","57:\tlearn: 0.0266580\ttotal: 156ms\tremaining: 2.53s\n","58:\tlearn: 0.0266572\ttotal: 158ms\tremaining: 2.51s\n","59:\tlearn: 0.0266552\ttotal: 159ms\tremaining: 2.49s\n","60:\tlearn: 0.0266544\ttotal: 161ms\tremaining: 2.48s\n","61:\tlearn: 0.0266523\ttotal: 162ms\tremaining: 2.46s\n","62:\tlearn: 0.0266518\ttotal: 164ms\tremaining: 2.44s\n","63:\tlearn: 0.0266461\ttotal: 166ms\tremaining: 2.42s\n","64:\tlearn: 0.0266455\ttotal: 167ms\tremaining: 2.41s\n","65:\tlearn: 0.0266562\ttotal: 169ms\tremaining: 2.39s\n","66:\tlearn: 0.0266314\ttotal: 171ms\tremaining: 2.37s\n","67:\tlearn: 0.0266240\ttotal: 172ms\tremaining: 2.36s\n","68:\tlearn: 0.0266237\ttotal: 174ms\tremaining: 2.34s\n","69:\tlearn: 0.0266220\ttotal: 175ms\tremaining: 2.33s\n","70:\tlearn: 0.0266219\ttotal: 177ms\tremaining: 2.31s\n","71:\tlearn: 0.0266180\ttotal: 178ms\tremaining: 2.3s\n","72:\tlearn: 0.0266190\ttotal: 180ms\tremaining: 2.28s\n","73:\tlearn: 0.0266174\ttotal: 181ms\tremaining: 2.27s\n","74:\tlearn: 0.0266182\ttotal: 183ms\tremaining: 2.26s\n","75:\tlearn: 0.0266167\ttotal: 185ms\tremaining: 2.24s\n","76:\tlearn: 0.0266149\ttotal: 186ms\tremaining: 2.23s\n","77:\tlearn: 0.0266135\ttotal: 188ms\tremaining: 2.22s\n","78:\tlearn: 0.0266119\ttotal: 189ms\tremaining: 2.21s\n","79:\tlearn: 0.0266086\ttotal: 191ms\tremaining: 2.19s\n","80:\tlearn: 0.0266095\ttotal: 192ms\tremaining: 2.18s\n","81:\tlearn: 0.0266080\ttotal: 194ms\tremaining: 2.17s\n","82:\tlearn: 0.0266085\ttotal: 195ms\tremaining: 2.16s\n","83:\tlearn: 0.0266081\ttotal: 197ms\tremaining: 2.15s\n","84:\tlearn: 0.0266068\ttotal: 198ms\tremaining: 2.13s\n","85:\tlearn: 0.0266053\ttotal: 200ms\tremaining: 2.12s\n","86:\tlearn: 0.0266038\ttotal: 201ms\tremaining: 2.11s\n","87:\tlearn: 0.0266030\ttotal: 208ms\tremaining: 2.15s\n","88:\tlearn: 0.0266185\ttotal: 210ms\tremaining: 2.15s\n","89:\tlearn: 0.0266167\ttotal: 211ms\tremaining: 2.14s\n","90:\tlearn: 0.0266182\ttotal: 212ms\tremaining: 2.12s\n","91:\tlearn: 0.0266165\ttotal: 214ms\tremaining: 2.11s\n","92:\tlearn: 0.0266159\ttotal: 215ms\tremaining: 2.1s\n","93:\tlearn: 0.0266143\ttotal: 217ms\tremaining: 2.09s\n","94:\tlearn: 0.0266144\ttotal: 218ms\tremaining: 2.08s\n","95:\tlearn: 0.0266133\ttotal: 220ms\tremaining: 2.07s\n","96:\tlearn: 0.0266135\ttotal: 221ms\tremaining: 2.06s\n","97:\tlearn: 0.0266123\ttotal: 223ms\tremaining: 2.05s\n","98:\tlearn: 0.0266116\ttotal: 225ms\tremaining: 2.04s\n","99:\tlearn: 0.0266102\ttotal: 226ms\tremaining: 2.03s\n","100:\tlearn: 0.0266105\ttotal: 228ms\tremaining: 2.02s\n","101:\tlearn: 0.0266090\ttotal: 229ms\tremaining: 2.02s\n","102:\tlearn: 0.0266084\ttotal: 230ms\tremaining: 2.01s\n","103:\tlearn: 0.0266071\ttotal: 232ms\tremaining: 2s\n","104:\tlearn: 0.0266076\ttotal: 235ms\tremaining: 2s\n","105:\tlearn: 0.0266062\ttotal: 237ms\tremaining: 2s\n","106:\tlearn: 0.0266067\ttotal: 241ms\tremaining: 2.01s\n","107:\tlearn: 0.0266055\ttotal: 243ms\tremaining: 2.01s\n","108:\tlearn: 0.0266058\ttotal: 244ms\tremaining: 2s\n","109:\tlearn: 0.0266044\ttotal: 246ms\tremaining: 1.99s\n","110:\tlearn: 0.0377681\ttotal: 247ms\tremaining: 1.98s\n","111:\tlearn: 0.0265481\ttotal: 249ms\tremaining: 1.97s\n","112:\tlearn: 0.0266362\ttotal: 250ms\tremaining: 1.96s\n","113:\tlearn: 0.0266521\ttotal: 252ms\tremaining: 1.96s\n","114:\tlearn: 0.0266526\ttotal: 253ms\tremaining: 1.95s\n","115:\tlearn: 0.0266482\ttotal: 255ms\tremaining: 1.94s\n","116:\tlearn: 0.0266443\ttotal: 257ms\tremaining: 1.94s\n","117:\tlearn: 0.0266395\ttotal: 258ms\tremaining: 1.93s\n","118:\tlearn: 0.0266370\ttotal: 260ms\tremaining: 1.92s\n","119:\tlearn: 0.0266330\ttotal: 261ms\tremaining: 1.92s\n","120:\tlearn: 0.0266319\ttotal: 263ms\tremaining: 1.91s\n","121:\tlearn: 0.0266279\ttotal: 264ms\tremaining: 1.9s\n","122:\tlearn: 0.0428277\ttotal: 266ms\tremaining: 1.89s\n","123:\tlearn: 0.0261592\ttotal: 267ms\tremaining: 1.89s\n","124:\tlearn: 0.0265081\ttotal: 269ms\tremaining: 1.88s\n","125:\tlearn: 0.0266018\ttotal: 271ms\tremaining: 1.88s\n","126:\tlearn: 0.0266246\ttotal: 272ms\tremaining: 1.87s\n","127:\tlearn: 0.0266256\ttotal: 273ms\tremaining: 1.86s\n","128:\tlearn: 0.0266257\ttotal: 275ms\tremaining: 1.85s\n","129:\tlearn: 0.0266230\ttotal: 278ms\tremaining: 1.86s\n","130:\tlearn: 0.0266218\ttotal: 280ms\tremaining: 1.85s\n","131:\tlearn: 0.0266191\ttotal: 281ms\tremaining: 1.85s\n","132:\tlearn: 0.0266182\ttotal: 283ms\tremaining: 1.84s\n","133:\tlearn: 0.0266159\ttotal: 285ms\tremaining: 1.84s\n","134:\tlearn: 0.0266155\ttotal: 286ms\tremaining: 1.83s\n","135:\tlearn: 0.0266134\ttotal: 287ms\tremaining: 1.83s\n","136:\tlearn: 0.0266129\ttotal: 288ms\tremaining: 1.81s\n","137:\tlearn: 0.0266112\ttotal: 289ms\tremaining: 1.81s\n","138:\tlearn: 0.0266106\ttotal: 290ms\tremaining: 1.8s\n","139:\tlearn: 0.0266085\ttotal: 291ms\tremaining: 1.79s\n","140:\tlearn: 0.0266084\ttotal: 292ms\tremaining: 1.78s\n","141:\tlearn: 0.0266066\ttotal: 293ms\tremaining: 1.77s\n","142:\tlearn: 0.0407649\ttotal: 294ms\tremaining: 1.76s\n","143:\tlearn: 0.0263791\ttotal: 295ms\tremaining: 1.75s\n","144:\tlearn: 0.0265718\ttotal: 295ms\tremaining: 1.74s\n","145:\tlearn: 0.0266190\ttotal: 296ms\tremaining: 1.73s\n","146:\tlearn: 0.0266273\ttotal: 299ms\tremaining: 1.73s\n","147:\tlearn: 0.0266244\ttotal: 300ms\tremaining: 1.72s\n","148:\tlearn: 0.0266228\ttotal: 300ms\tremaining: 1.72s\n","149:\tlearn: 0.0266190\ttotal: 301ms\tremaining: 1.71s\n","150:\tlearn: 0.0266171\ttotal: 302ms\tremaining: 1.7s\n","151:\tlearn: 0.0266140\ttotal: 303ms\tremaining: 1.69s\n","152:\tlearn: 0.0266127\ttotal: 304ms\tremaining: 1.68s\n","153:\tlearn: 0.0266103\ttotal: 304ms\tremaining: 1.67s\n","154:\tlearn: 0.0266095\ttotal: 305ms\tremaining: 1.66s\n","155:\tlearn: 0.0266246\ttotal: 306ms\tremaining: 1.66s\n","156:\tlearn: 0.0265888\ttotal: 307ms\tremaining: 1.65s\n","157:\tlearn: 0.0265790\ttotal: 307ms\tremaining: 1.64s\n","158:\tlearn: 0.0265776\ttotal: 308ms\tremaining: 1.63s\n","159:\tlearn: 0.0265751\ttotal: 309ms\tremaining: 1.62s\n","160:\tlearn: 0.0265758\ttotal: 310ms\tremaining: 1.61s\n","161:\tlearn: 0.0265746\ttotal: 311ms\tremaining: 1.61s\n","162:\tlearn: 0.0265755\ttotal: 313ms\tremaining: 1.6s\n","163:\tlearn: 0.0265742\ttotal: 314ms\tremaining: 1.6s\n","164:\tlearn: 0.0265746\ttotal: 315ms\tremaining: 1.59s\n","165:\tlearn: 0.0265728\ttotal: 317ms\tremaining: 1.59s\n","166:\tlearn: 0.0287912\ttotal: 318ms\tremaining: 1.59s\n","167:\tlearn: 0.0297559\ttotal: 320ms\tremaining: 1.58s\n","168:\tlearn: 0.0269369\ttotal: 322ms\tremaining: 1.58s\n","169:\tlearn: 0.0266558\ttotal: 324ms\tremaining: 1.58s\n","170:\tlearn: 0.0266210\ttotal: 325ms\tremaining: 1.58s\n","171:\tlearn: 0.0266023\ttotal: 327ms\tremaining: 1.57s\n","172:\tlearn: 0.0265973\ttotal: 329ms\tremaining: 1.57s\n","173:\tlearn: 0.0265943\ttotal: 331ms\tremaining: 1.57s\n","174:\tlearn: 0.0265936\ttotal: 332ms\tremaining: 1.57s\n","175:\tlearn: 0.0265918\ttotal: 334ms\tremaining: 1.56s\n","176:\tlearn: 0.0265917\ttotal: 335ms\tremaining: 1.56s\n","177:\tlearn: 0.0265894\ttotal: 337ms\tremaining: 1.55s\n","178:\tlearn: 0.0265886\ttotal: 338ms\tremaining: 1.55s\n","179:\tlearn: 0.0265862\ttotal: 340ms\tremaining: 1.55s\n","180:\tlearn: 0.0265864\ttotal: 342ms\tremaining: 1.55s\n","181:\tlearn: 0.0265849\ttotal: 344ms\tremaining: 1.54s\n","182:\tlearn: 0.0265844\ttotal: 345ms\tremaining: 1.54s\n","183:\tlearn: 0.0265827\ttotal: 346ms\tremaining: 1.53s\n","184:\tlearn: 0.0265826\ttotal: 348ms\tremaining: 1.53s\n","185:\tlearn: 0.0265813\ttotal: 349ms\tremaining: 1.53s\n","186:\tlearn: 0.0265814\ttotal: 351ms\tremaining: 1.52s\n","187:\tlearn: 0.0265803\ttotal: 352ms\tremaining: 1.52s\n","188:\tlearn: 0.0265806\ttotal: 354ms\tremaining: 1.52s\n","189:\tlearn: 0.0265794\ttotal: 357ms\tremaining: 1.52s\n","190:\tlearn: 0.0265799\ttotal: 358ms\tremaining: 1.52s\n","191:\tlearn: 0.0265783\ttotal: 360ms\tremaining: 1.51s\n","192:\tlearn: 0.0265788\ttotal: 361ms\tremaining: 1.51s\n","193:\tlearn: 0.0265778\ttotal: 367ms\tremaining: 1.52s\n","194:\tlearn: 0.0265782\ttotal: 369ms\tremaining: 1.52s\n","195:\tlearn: 0.0265766\ttotal: 371ms\tremaining: 1.52s\n","196:\tlearn: 0.0265769\ttotal: 375ms\tremaining: 1.53s\n","197:\tlearn: 0.0265758\ttotal: 377ms\tremaining: 1.53s\n","198:\tlearn: 0.0265766\ttotal: 379ms\tremaining: 1.53s\n","199:\tlearn: 0.0265752\ttotal: 382ms\tremaining: 1.53s\n","200:\tlearn: 0.0384732\ttotal: 386ms\tremaining: 1.53s\n","201:\tlearn: 0.0264859\ttotal: 390ms\tremaining: 1.54s\n","202:\tlearn: 0.0265928\ttotal: 392ms\tremaining: 1.54s\n","203:\tlearn: 0.0266146\ttotal: 394ms\tremaining: 1.54s\n","204:\tlearn: 0.0266171\ttotal: 398ms\tremaining: 1.54s\n","205:\tlearn: 0.0266129\ttotal: 400ms\tremaining: 1.54s\n","206:\tlearn: 0.0266099\ttotal: 402ms\tremaining: 1.54s\n","207:\tlearn: 0.0266057\ttotal: 406ms\tremaining: 1.54s\n","208:\tlearn: 0.0266035\ttotal: 408ms\tremaining: 1.54s\n","209:\tlearn: 0.0266001\ttotal: 412ms\tremaining: 1.55s\n","210:\tlearn: 0.0265990\ttotal: 415ms\tremaining: 1.55s\n","211:\tlearn: 0.0265956\ttotal: 416ms\tremaining: 1.55s\n","212:\tlearn: 0.0265943\ttotal: 418ms\tremaining: 1.54s\n","213:\tlearn: 0.0266125\ttotal: 419ms\tremaining: 1.54s\n","214:\tlearn: 0.0265738\ttotal: 421ms\tremaining: 1.54s\n","215:\tlearn: 0.0265634\ttotal: 422ms\tremaining: 1.53s\n","216:\tlearn: 0.0265616\ttotal: 422ms\tremaining: 1.52s\n","217:\tlearn: 0.0265602\ttotal: 425ms\tremaining: 1.52s\n","218:\tlearn: 0.0265607\ttotal: 426ms\tremaining: 1.52s\n","219:\tlearn: 0.0265592\ttotal: 427ms\tremaining: 1.51s\n","220:\tlearn: 0.0265600\ttotal: 428ms\tremaining: 1.51s\n","221:\tlearn: 0.0265597\ttotal: 428ms\tremaining: 1.5s\n","222:\tlearn: 0.0265600\ttotal: 429ms\tremaining: 1.5s\n","223:\tlearn: 0.0265589\ttotal: 432ms\tremaining: 1.49s\n","224:\tlearn: 0.0265591\ttotal: 432ms\tremaining: 1.49s\n","225:\tlearn: 0.0265580\ttotal: 433ms\tremaining: 1.48s\n","226:\tlearn: 0.0265587\ttotal: 434ms\tremaining: 1.48s\n","227:\tlearn: 0.0265579\ttotal: 435ms\tremaining: 1.47s\n","228:\tlearn: 0.0265582\ttotal: 435ms\tremaining: 1.47s\n","229:\tlearn: 0.0265572\ttotal: 436ms\tremaining: 1.46s\n","230:\tlearn: 0.0265575\ttotal: 437ms\tremaining: 1.45s\n","231:\tlearn: 0.0265566\ttotal: 438ms\tremaining: 1.45s\n","232:\tlearn: 0.0265573\ttotal: 439ms\tremaining: 1.44s\n","233:\tlearn: 0.0265566\ttotal: 439ms\tremaining: 1.44s\n","234:\tlearn: 0.0265570\ttotal: 440ms\tremaining: 1.43s\n","235:\tlearn: 0.0265557\ttotal: 441ms\tremaining: 1.43s\n","236:\tlearn: 0.0265567\ttotal: 441ms\tremaining: 1.42s\n","237:\tlearn: 0.0265550\ttotal: 442ms\tremaining: 1.42s\n","238:\tlearn: 0.0265558\ttotal: 443ms\tremaining: 1.41s\n","239:\tlearn: 0.0265548\ttotal: 444ms\tremaining: 1.41s\n","240:\tlearn: 0.0265555\ttotal: 445ms\tremaining: 1.4s\n","241:\tlearn: 0.0265546\ttotal: 445ms\tremaining: 1.4s\n","242:\tlearn: 0.0265553\ttotal: 446ms\tremaining: 1.39s\n","243:\tlearn: 0.0265543\ttotal: 447ms\tremaining: 1.39s\n","244:\tlearn: 0.0265550\ttotal: 448ms\tremaining: 1.38s\n","245:\tlearn: 0.0265543\ttotal: 449ms\tremaining: 1.38s\n","246:\tlearn: 0.0265546\ttotal: 450ms\tremaining: 1.37s\n","247:\tlearn: 0.0265536\ttotal: 450ms\tremaining: 1.36s\n","248:\tlearn: 0.0265545\ttotal: 451ms\tremaining: 1.36s\n","249:\tlearn: 0.0265527\ttotal: 452ms\tremaining: 1.36s\n","250:\tlearn: 0.0265530\ttotal: 453ms\tremaining: 1.35s\n","251:\tlearn: 0.0265525\ttotal: 454ms\tremaining: 1.35s\n","252:\tlearn: 0.0265533\ttotal: 454ms\tremaining: 1.34s\n","253:\tlearn: 0.0265526\ttotal: 457ms\tremaining: 1.34s\n","254:\tlearn: 0.0265529\ttotal: 458ms\tremaining: 1.34s\n","255:\tlearn: 0.0265519\ttotal: 459ms\tremaining: 1.33s\n","256:\tlearn: 0.0265526\ttotal: 460ms\tremaining: 1.33s\n","257:\tlearn: 0.0265516\ttotal: 461ms\tremaining: 1.32s\n","258:\tlearn: 0.0265520\ttotal: 461ms\tremaining: 1.32s\n","259:\tlearn: 0.0265515\ttotal: 462ms\tremaining: 1.31s\n","260:\tlearn: 0.0265521\ttotal: 463ms\tremaining: 1.31s\n","261:\tlearn: 0.0265507\ttotal: 464ms\tremaining: 1.31s\n","262:\tlearn: 0.0265511\ttotal: 464ms\tremaining: 1.3s\n","263:\tlearn: 0.0265503\ttotal: 465ms\tremaining: 1.3s\n","264:\tlearn: 0.0265514\ttotal: 466ms\tremaining: 1.29s\n","265:\tlearn: 0.0265499\ttotal: 466ms\tremaining: 1.29s\n","266:\tlearn: 0.0265508\ttotal: 467ms\tremaining: 1.28s\n","267:\tlearn: 0.0265499\ttotal: 468ms\tremaining: 1.28s\n","268:\tlearn: 0.0265503\ttotal: 469ms\tremaining: 1.27s\n","269:\tlearn: 0.0265497\ttotal: 470ms\tremaining: 1.27s\n","270:\tlearn: 0.0265504\ttotal: 470ms\tremaining: 1.26s\n","271:\tlearn: 0.0265494\ttotal: 471ms\tremaining: 1.26s\n","272:\tlearn: 0.0265497\ttotal: 472ms\tremaining: 1.26s\n","273:\tlearn: 0.0265490\ttotal: 473ms\tremaining: 1.25s\n","274:\tlearn: 0.0265497\ttotal: 473ms\tremaining: 1.25s\n","275:\tlearn: 0.0265489\ttotal: 474ms\tremaining: 1.24s\n","276:\tlearn: 0.0265497\ttotal: 475ms\tremaining: 1.24s\n","277:\tlearn: 0.0265489\ttotal: 476ms\tremaining: 1.24s\n","278:\tlearn: 0.0265492\ttotal: 477ms\tremaining: 1.23s\n","279:\tlearn: 0.0265482\ttotal: 478ms\tremaining: 1.23s\n","280:\tlearn: 0.0265489\ttotal: 478ms\tremaining: 1.22s\n","281:\tlearn: 0.0265479\ttotal: 479ms\tremaining: 1.22s\n","282:\tlearn: 0.0265486\ttotal: 480ms\tremaining: 1.22s\n","283:\tlearn: 0.0265476\ttotal: 481ms\tremaining: 1.21s\n","284:\tlearn: 0.0265484\ttotal: 481ms\tremaining: 1.21s\n","285:\tlearn: 0.0265474\ttotal: 482ms\tremaining: 1.2s\n","286:\tlearn: 0.0265483\ttotal: 483ms\tremaining: 1.2s\n","287:\tlearn: 0.0265473\ttotal: 484ms\tremaining: 1.2s\n","288:\tlearn: 0.0265478\ttotal: 485ms\tremaining: 1.19s\n","289:\tlearn: 0.0265469\ttotal: 486ms\tremaining: 1.19s\n","290:\tlearn: 0.0265475\ttotal: 486ms\tremaining: 1.19s\n","291:\tlearn: 0.0265467\ttotal: 487ms\tremaining: 1.18s\n","292:\tlearn: 0.0265474\ttotal: 488ms\tremaining: 1.18s\n","293:\tlearn: 0.0265466\ttotal: 489ms\tremaining: 1.17s\n","294:\tlearn: 0.0265474\ttotal: 490ms\tremaining: 1.17s\n","295:\tlearn: 0.0265462\ttotal: 490ms\tremaining: 1.17s\n","296:\tlearn: 0.0265469\ttotal: 491ms\tremaining: 1.16s\n","297:\tlearn: 0.0265458\ttotal: 492ms\tremaining: 1.16s\n","298:\tlearn: 0.0265466\ttotal: 493ms\tremaining: 1.16s\n","299:\tlearn: 0.0265457\ttotal: 494ms\tremaining: 1.15s\n","300:\tlearn: 0.0265464\ttotal: 494ms\tremaining: 1.15s\n","301:\tlearn: 0.0265457\ttotal: 495ms\tremaining: 1.14s\n","302:\tlearn: 0.0265464\ttotal: 496ms\tremaining: 1.14s\n","303:\tlearn: 0.0265453\ttotal: 497ms\tremaining: 1.14s\n","304:\tlearn: 0.0265464\ttotal: 497ms\tremaining: 1.13s\n","305:\tlearn: 0.0265452\ttotal: 498ms\tremaining: 1.13s\n","306:\tlearn: 0.0265454\ttotal: 499ms\tremaining: 1.13s\n","307:\tlearn: 0.0265445\ttotal: 500ms\tremaining: 1.12s\n","308:\tlearn: 0.0265453\ttotal: 501ms\tremaining: 1.12s\n","309:\tlearn: 0.0265444\ttotal: 502ms\tremaining: 1.12s\n","310:\tlearn: 0.0265448\ttotal: 502ms\tremaining: 1.11s\n","311:\tlearn: 0.0265442\ttotal: 503ms\tremaining: 1.11s\n","312:\tlearn: 0.0265448\ttotal: 504ms\tremaining: 1.11s\n","313:\tlearn: 0.0265438\ttotal: 505ms\tremaining: 1.1s\n","314:\tlearn: 0.0265448\ttotal: 545ms\tremaining: 1.19s\n","315:\tlearn: 0.0265435\ttotal: 547ms\tremaining: 1.19s\n","316:\tlearn: 0.0265442\ttotal: 549ms\tremaining: 1.18s\n","317:\tlearn: 0.0265432\ttotal: 551ms\tremaining: 1.18s\n","318:\tlearn: 0.0265442\ttotal: 553ms\tremaining: 1.18s\n","319:\tlearn: 0.0265432\ttotal: 555ms\tremaining: 1.18s\n","320:\tlearn: 0.0265439\ttotal: 556ms\tremaining: 1.18s\n","321:\tlearn: 0.0265429\ttotal: 558ms\tremaining: 1.17s\n","322:\tlearn: 0.0265439\ttotal: 559ms\tremaining: 1.17s\n","323:\tlearn: 0.0265430\ttotal: 561ms\tremaining: 1.17s\n","324:\tlearn: 0.0265438\ttotal: 565ms\tremaining: 1.17s\n","325:\tlearn: 0.0265427\ttotal: 566ms\tremaining: 1.17s\n","326:\tlearn: 0.0265436\ttotal: 568ms\tremaining: 1.17s\n","327:\tlearn: 0.0265429\ttotal: 570ms\tremaining: 1.17s\n","328:\tlearn: 0.0265436\ttotal: 572ms\tremaining: 1.17s\n","329:\tlearn: 0.0265427\ttotal: 574ms\tremaining: 1.17s\n","330:\tlearn: 0.0265435\ttotal: 576ms\tremaining: 1.16s\n","331:\tlearn: 0.0265425\ttotal: 578ms\tremaining: 1.16s\n","332:\tlearn: 0.0265434\ttotal: 580ms\tremaining: 1.16s\n","333:\tlearn: 0.0265423\ttotal: 582ms\tremaining: 1.16s\n","334:\tlearn: 0.0265434\ttotal: 583ms\tremaining: 1.16s\n","335:\tlearn: 0.0265423\ttotal: 585ms\tremaining: 1.16s\n","336:\tlearn: 0.0265430\ttotal: 587ms\tremaining: 1.15s\n","337:\tlearn: 0.0265420\ttotal: 588ms\tremaining: 1.15s\n","338:\tlearn: 0.0265426\ttotal: 591ms\tremaining: 1.15s\n","339:\tlearn: 0.0265419\ttotal: 592ms\tremaining: 1.15s\n","340:\tlearn: 0.0265425\ttotal: 594ms\tremaining: 1.15s\n","341:\tlearn: 0.0265417\ttotal: 595ms\tremaining: 1.15s\n","342:\tlearn: 0.0265421\ttotal: 597ms\tremaining: 1.14s\n","343:\tlearn: 0.0265414\ttotal: 599ms\tremaining: 1.14s\n","344:\tlearn: 0.0265427\ttotal: 600ms\tremaining: 1.14s\n","345:\tlearn: 0.0265413\ttotal: 602ms\tremaining: 1.14s\n","346:\tlearn: 0.0265421\ttotal: 604ms\tremaining: 1.14s\n","347:\tlearn: 0.0265415\ttotal: 606ms\tremaining: 1.14s\n","348:\tlearn: 0.0265421\ttotal: 608ms\tremaining: 1.14s\n","349:\tlearn: 0.0265411\ttotal: 611ms\tremaining: 1.13s\n","350:\tlearn: 0.0265419\ttotal: 612ms\tremaining: 1.13s\n","351:\tlearn: 0.0265412\ttotal: 614ms\tremaining: 1.13s\n","352:\tlearn: 0.0265417\ttotal: 616ms\tremaining: 1.13s\n","353:\tlearn: 0.0265408\ttotal: 618ms\tremaining: 1.13s\n","354:\tlearn: 0.0265417\ttotal: 621ms\tremaining: 1.13s\n","355:\tlearn: 0.0265409\ttotal: 623ms\tremaining: 1.13s\n","356:\tlearn: 0.0265417\ttotal: 626ms\tremaining: 1.13s\n","357:\tlearn: 0.0265410\ttotal: 628ms\tremaining: 1.13s\n","358:\tlearn: 0.0265414\ttotal: 629ms\tremaining: 1.12s\n","359:\tlearn: 0.0265406\ttotal: 632ms\tremaining: 1.12s\n","360:\tlearn: 0.0265414\ttotal: 634ms\tremaining: 1.12s\n","361:\tlearn: 0.0265401\ttotal: 636ms\tremaining: 1.12s\n","362:\tlearn: 0.0265409\ttotal: 637ms\tremaining: 1.12s\n","363:\tlearn: 0.0265403\ttotal: 639ms\tremaining: 1.12s\n","364:\tlearn: 0.0265411\ttotal: 642ms\tremaining: 1.12s\n","365:\tlearn: 0.0265400\ttotal: 644ms\tremaining: 1.11s\n","366:\tlearn: 0.0265406\ttotal: 646ms\tremaining: 1.11s\n","367:\tlearn: 0.0265396\ttotal: 649ms\tremaining: 1.11s\n","368:\tlearn: 0.0265412\ttotal: 652ms\tremaining: 1.11s\n","369:\tlearn: 0.0265398\ttotal: 655ms\tremaining: 1.11s\n","370:\tlearn: 0.0265404\ttotal: 659ms\tremaining: 1.12s\n","371:\tlearn: 0.0265396\ttotal: 661ms\tremaining: 1.11s\n","372:\tlearn: 0.0265405\ttotal: 665ms\tremaining: 1.12s\n","373:\tlearn: 0.0265397\ttotal: 666ms\tremaining: 1.11s\n","374:\tlearn: 0.0265403\ttotal: 669ms\tremaining: 1.11s\n","375:\tlearn: 0.0265394\ttotal: 671ms\tremaining: 1.11s\n","376:\tlearn: 0.0265402\ttotal: 673ms\tremaining: 1.11s\n","377:\tlearn: 0.0265395\ttotal: 674ms\tremaining: 1.11s\n","378:\tlearn: 0.0265402\ttotal: 676ms\tremaining: 1.11s\n","379:\tlearn: 0.0265395\ttotal: 678ms\tremaining: 1.11s\n","380:\tlearn: 0.0265401\ttotal: 680ms\tremaining: 1.1s\n","381:\tlearn: 0.0265393\ttotal: 682ms\tremaining: 1.1s\n","382:\tlearn: 0.0265402\ttotal: 684ms\tremaining: 1.1s\n","383:\tlearn: 0.0265393\ttotal: 686ms\tremaining: 1.1s\n","384:\tlearn: 0.0265399\ttotal: 688ms\tremaining: 1.1s\n","385:\tlearn: 0.0265390\ttotal: 690ms\tremaining: 1.1s\n","386:\tlearn: 0.0265398\ttotal: 692ms\tremaining: 1.09s\n","387:\tlearn: 0.0265387\ttotal: 695ms\tremaining: 1.09s\n","388:\tlearn: 0.0265396\ttotal: 696ms\tremaining: 1.09s\n","389:\tlearn: 0.0265391\ttotal: 698ms\tremaining: 1.09s\n","390:\tlearn: 0.0265398\ttotal: 700ms\tremaining: 1.09s\n","391:\tlearn: 0.0265386\ttotal: 704ms\tremaining: 1.09s\n","392:\tlearn: 0.0265396\ttotal: 706ms\tremaining: 1.09s\n","393:\tlearn: 0.0265384\ttotal: 708ms\tremaining: 1.09s\n","394:\tlearn: 0.0265397\ttotal: 712ms\tremaining: 1.09s\n","395:\tlearn: 0.0265386\ttotal: 717ms\tremaining: 1.09s\n","396:\tlearn: 0.0265392\ttotal: 719ms\tremaining: 1.09s\n","397:\tlearn: 0.0265384\ttotal: 722ms\tremaining: 1.09s\n","398:\tlearn: 0.0265392\ttotal: 724ms\tremaining: 1.09s\n","399:\tlearn: 0.0265385\ttotal: 727ms\tremaining: 1.09s\n","400:\tlearn: 0.0265390\ttotal: 729ms\tremaining: 1.09s\n","401:\tlearn: 0.0265380\ttotal: 731ms\tremaining: 1.09s\n","402:\tlearn: 0.0265390\ttotal: 732ms\tremaining: 1.08s\n","403:\tlearn: 0.0265380\ttotal: 735ms\tremaining: 1.08s\n","404:\tlearn: 0.0265387\ttotal: 736ms\tremaining: 1.08s\n","405:\tlearn: 0.0265381\ttotal: 737ms\tremaining: 1.08s\n","406:\tlearn: 0.0265389\ttotal: 739ms\tremaining: 1.08s\n","407:\tlearn: 0.0265376\ttotal: 741ms\tremaining: 1.07s\n","408:\tlearn: 0.0265385\ttotal: 742ms\tremaining: 1.07s\n","409:\tlearn: 0.0265377\ttotal: 744ms\tremaining: 1.07s\n","410:\tlearn: 0.0265387\ttotal: 746ms\tremaining: 1.07s\n","411:\tlearn: 0.0265376\ttotal: 747ms\tremaining: 1.06s\n","412:\tlearn: 0.0265385\ttotal: 753ms\tremaining: 1.07s\n","413:\tlearn: 0.0265376\ttotal: 755ms\tremaining: 1.07s\n","414:\tlearn: 0.0265383\ttotal: 756ms\tremaining: 1.06s\n","415:\tlearn: 0.0265374\ttotal: 758ms\tremaining: 1.06s\n","416:\tlearn: 0.0265384\ttotal: 759ms\tremaining: 1.06s\n","417:\tlearn: 0.0265380\ttotal: 761ms\tremaining: 1.06s\n","418:\tlearn: 0.0265382\ttotal: 763ms\tremaining: 1.06s\n","419:\tlearn: 0.0265376\ttotal: 765ms\tremaining: 1.06s\n","420:\tlearn: 0.0265385\ttotal: 766ms\tremaining: 1.05s\n","421:\tlearn: 0.0265373\ttotal: 769ms\tremaining: 1.05s\n","422:\tlearn: 0.0265384\ttotal: 770ms\tremaining: 1.05s\n","423:\tlearn: 0.0265374\ttotal: 772ms\tremaining: 1.05s\n","424:\tlearn: 0.0265381\ttotal: 775ms\tremaining: 1.05s\n","425:\tlearn: 0.0265373\ttotal: 776ms\tremaining: 1.04s\n","426:\tlearn: 0.0265382\ttotal: 778ms\tremaining: 1.04s\n","427:\tlearn: 0.0265376\ttotal: 779ms\tremaining: 1.04s\n","428:\tlearn: 0.0265381\ttotal: 781ms\tremaining: 1.04s\n","429:\tlearn: 0.0265371\ttotal: 784ms\tremaining: 1.04s\n","430:\tlearn: 0.0265378\ttotal: 786ms\tremaining: 1.04s\n","431:\tlearn: 0.0265370\ttotal: 790ms\tremaining: 1.04s\n","432:\tlearn: 0.0265379\ttotal: 793ms\tremaining: 1.04s\n","433:\tlearn: 0.0265370\ttotal: 795ms\tremaining: 1.04s\n","434:\tlearn: 0.0265385\ttotal: 796ms\tremaining: 1.03s\n","435:\tlearn: 0.0265369\ttotal: 798ms\tremaining: 1.03s\n","436:\tlearn: 0.0265377\ttotal: 800ms\tremaining: 1.03s\n","437:\tlearn: 0.0265368\ttotal: 801ms\tremaining: 1.03s\n","438:\tlearn: 0.0265377\ttotal: 804ms\tremaining: 1.03s\n","439:\tlearn: 0.0265367\ttotal: 805ms\tremaining: 1.02s\n","440:\tlearn: 0.0265378\ttotal: 807ms\tremaining: 1.02s\n","441:\tlearn: 0.0265367\ttotal: 809ms\tremaining: 1.02s\n","442:\tlearn: 0.0265375\ttotal: 810ms\tremaining: 1.02s\n","443:\tlearn: 0.0265365\ttotal: 812ms\tremaining: 1.02s\n","444:\tlearn: 0.0265373\ttotal: 813ms\tremaining: 1.01s\n","445:\tlearn: 0.0265365\ttotal: 815ms\tremaining: 1.01s\n","446:\tlearn: 0.0265374\ttotal: 817ms\tremaining: 1.01s\n","447:\tlearn: 0.0265364\ttotal: 818ms\tremaining: 1.01s\n","448:\tlearn: 0.0265373\ttotal: 820ms\tremaining: 1s\n","449:\tlearn: 0.0265362\ttotal: 821ms\tremaining: 1s\n","450:\tlearn: 0.0265371\ttotal: 823ms\tremaining: 1s\n","451:\tlearn: 0.0265367\ttotal: 825ms\tremaining: 1000ms\n","452:\tlearn: 0.0265371\ttotal: 826ms\tremaining: 998ms\n","453:\tlearn: 0.0265363\ttotal: 828ms\tremaining: 996ms\n","454:\tlearn: 0.0265370\ttotal: 830ms\tremaining: 994ms\n","455:\tlearn: 0.0265361\ttotal: 831ms\tremaining: 992ms\n","456:\tlearn: 0.0265369\ttotal: 833ms\tremaining: 989ms\n","457:\tlearn: 0.0265361\ttotal: 834ms\tremaining: 987ms\n","458:\tlearn: 0.0265367\ttotal: 836ms\tremaining: 985ms\n","459:\tlearn: 0.0265361\ttotal: 838ms\tremaining: 983ms\n","460:\tlearn: 0.0265365\ttotal: 839ms\tremaining: 981ms\n","461:\tlearn: 0.0265360\ttotal: 841ms\tremaining: 980ms\n","462:\tlearn: 0.0265367\ttotal: 843ms\tremaining: 977ms\n","463:\tlearn: 0.0265357\ttotal: 844ms\tremaining: 975ms\n","464:\tlearn: 0.0265369\ttotal: 846ms\tremaining: 973ms\n","465:\tlearn: 0.0265358\ttotal: 847ms\tremaining: 971ms\n","466:\tlearn: 0.0265364\ttotal: 849ms\tremaining: 969ms\n","467:\tlearn: 0.0265358\ttotal: 851ms\tremaining: 967ms\n","468:\tlearn: 0.0265364\ttotal: 852ms\tremaining: 965ms\n","469:\tlearn: 0.0265354\ttotal: 854ms\tremaining: 963ms\n","470:\tlearn: 0.0265361\ttotal: 855ms\tremaining: 961ms\n","471:\tlearn: 0.0265357\ttotal: 857ms\tremaining: 959ms\n","472:\tlearn: 0.0265364\ttotal: 859ms\tremaining: 957ms\n","473:\tlearn: 0.0265354\ttotal: 861ms\tremaining: 955ms\n","474:\tlearn: 0.0265364\ttotal: 862ms\tremaining: 953ms\n","475:\tlearn: 0.0265354\ttotal: 864ms\tremaining: 951ms\n","476:\tlearn: 0.0265362\ttotal: 865ms\tremaining: 949ms\n","477:\tlearn: 0.0265352\ttotal: 867ms\tremaining: 947ms\n","478:\tlearn: 0.0265363\ttotal: 869ms\tremaining: 945ms\n","479:\tlearn: 0.0265352\ttotal: 870ms\tremaining: 943ms\n","480:\tlearn: 0.0265360\ttotal: 872ms\tremaining: 941ms\n","481:\tlearn: 0.0265351\ttotal: 873ms\tremaining: 939ms\n","482:\tlearn: 0.0265360\ttotal: 875ms\tremaining: 936ms\n","483:\tlearn: 0.0265350\ttotal: 876ms\tremaining: 934ms\n","484:\tlearn: 0.0265358\ttotal: 879ms\tremaining: 933ms\n","485:\tlearn: 0.0265349\ttotal: 880ms\tremaining: 931ms\n","486:\tlearn: 0.0265357\ttotal: 882ms\tremaining: 929ms\n","487:\tlearn: 0.0265349\ttotal: 883ms\tremaining: 927ms\n","488:\tlearn: 0.0265358\ttotal: 885ms\tremaining: 925ms\n","489:\tlearn: 0.0265347\ttotal: 886ms\tremaining: 923ms\n","490:\tlearn: 0.0265356\ttotal: 888ms\tremaining: 920ms\n","491:\tlearn: 0.0265347\ttotal: 890ms\tremaining: 918ms\n","492:\tlearn: 0.0265357\ttotal: 891ms\tremaining: 917ms\n","493:\tlearn: 0.0265350\ttotal: 893ms\tremaining: 915ms\n","494:\tlearn: 0.0265355\ttotal: 895ms\tremaining: 913ms\n","495:\tlearn: 0.0265351\ttotal: 896ms\tremaining: 911ms\n","496:\tlearn: 0.0265356\ttotal: 898ms\tremaining: 909ms\n","497:\tlearn: 0.0265351\ttotal: 900ms\tremaining: 907ms\n","498:\tlearn: 0.0265355\ttotal: 901ms\tremaining: 905ms\n","499:\tlearn: 0.0265347\ttotal: 903ms\tremaining: 903ms\n","500:\tlearn: 0.0265355\ttotal: 904ms\tremaining: 901ms\n","501:\tlearn: 0.0265345\ttotal: 907ms\tremaining: 899ms\n","502:\tlearn: 0.0265355\ttotal: 908ms\tremaining: 897ms\n","503:\tlearn: 0.0265345\ttotal: 909ms\tremaining: 895ms\n","504:\tlearn: 0.0265354\ttotal: 911ms\tremaining: 893ms\n","505:\tlearn: 0.0265343\ttotal: 913ms\tremaining: 891ms\n","506:\tlearn: 0.0265352\ttotal: 914ms\tremaining: 889ms\n","507:\tlearn: 0.0265345\ttotal: 916ms\tremaining: 887ms\n","508:\tlearn: 0.0265355\ttotal: 917ms\tremaining: 885ms\n","509:\tlearn: 0.0265347\ttotal: 919ms\tremaining: 883ms\n","510:\tlearn: 0.0265353\ttotal: 921ms\tremaining: 881ms\n","511:\tlearn: 0.0265345\ttotal: 923ms\tremaining: 880ms\n","512:\tlearn: 0.0265351\ttotal: 924ms\tremaining: 877ms\n","513:\tlearn: 0.0265342\ttotal: 926ms\tremaining: 876ms\n","514:\tlearn: 0.0265350\ttotal: 928ms\tremaining: 874ms\n","515:\tlearn: 0.0265346\ttotal: 929ms\tremaining: 872ms\n","516:\tlearn: 0.0265351\ttotal: 931ms\tremaining: 870ms\n","517:\tlearn: 0.0265343\ttotal: 933ms\tremaining: 868ms\n","518:\tlearn: 0.0265349\ttotal: 934ms\tremaining: 866ms\n","519:\tlearn: 0.0265342\ttotal: 936ms\tremaining: 864ms\n","520:\tlearn: 0.0265350\ttotal: 938ms\tremaining: 862ms\n","521:\tlearn: 0.0265339\ttotal: 940ms\tremaining: 860ms\n","522:\tlearn: 0.0265348\ttotal: 942ms\tremaining: 859ms\n","523:\tlearn: 0.0265339\ttotal: 944ms\tremaining: 858ms\n","524:\tlearn: 0.0271544\ttotal: 946ms\tremaining: 856ms\n","525:\tlearn: 0.0268201\ttotal: 949ms\tremaining: 855ms\n","526:\tlearn: 0.0267279\ttotal: 951ms\tremaining: 854ms\n","527:\tlearn: 0.0266800\ttotal: 954ms\tremaining: 852ms\n","528:\tlearn: 0.0266529\ttotal: 955ms\tremaining: 851ms\n","529:\tlearn: 0.0266328\ttotal: 957ms\tremaining: 849ms\n","530:\tlearn: 0.0266201\ttotal: 959ms\tremaining: 847ms\n","531:\tlearn: 0.0266088\ttotal: 961ms\tremaining: 845ms\n","532:\tlearn: 0.0266021\ttotal: 962ms\tremaining: 843ms\n","533:\tlearn: 0.0265941\ttotal: 964ms\tremaining: 841ms\n","534:\tlearn: 0.0265897\ttotal: 965ms\tremaining: 839ms\n","535:\tlearn: 0.0265843\ttotal: 967ms\tremaining: 837ms\n","536:\tlearn: 0.0265812\ttotal: 968ms\tremaining: 835ms\n","537:\tlearn: 0.0265772\ttotal: 970ms\tremaining: 833ms\n","538:\tlearn: 0.0265749\ttotal: 971ms\tremaining: 831ms\n","539:\tlearn: 0.0265715\ttotal: 973ms\tremaining: 829ms\n","540:\tlearn: 0.0265702\ttotal: 975ms\tremaining: 827ms\n","541:\tlearn: 0.0265674\ttotal: 976ms\tremaining: 825ms\n","542:\tlearn: 0.0265663\ttotal: 978ms\tremaining: 823ms\n","543:\tlearn: 0.0265636\ttotal: 980ms\tremaining: 821ms\n","544:\tlearn: 0.0265631\ttotal: 981ms\tremaining: 819ms\n","545:\tlearn: 0.0265613\ttotal: 983ms\tremaining: 817ms\n","546:\tlearn: 0.0265605\ttotal: 984ms\tremaining: 815ms\n","547:\tlearn: 0.0265585\ttotal: 986ms\tremaining: 813ms\n","548:\tlearn: 0.0265584\ttotal: 988ms\tremaining: 811ms\n","549:\tlearn: 0.0265565\ttotal: 989ms\tremaining: 809ms\n","550:\tlearn: 0.0265566\ttotal: 991ms\tremaining: 807ms\n","551:\tlearn: 0.0265547\ttotal: 992ms\tremaining: 805ms\n","552:\tlearn: 0.0265546\ttotal: 994ms\tremaining: 803ms\n","553:\tlearn: 0.0265532\ttotal: 996ms\tremaining: 801ms\n","554:\tlearn: 0.0265534\ttotal: 997ms\tremaining: 800ms\n","555:\tlearn: 0.0265518\ttotal: 999ms\tremaining: 798ms\n","556:\tlearn: 0.0265525\ttotal: 1s\tremaining: 796ms\n","557:\tlearn: 0.0265507\ttotal: 1s\tremaining: 794ms\n","558:\tlearn: 0.0265510\ttotal: 1s\tremaining: 791ms\n","559:\tlearn: 0.0265498\ttotal: 1.01s\tremaining: 792ms\n","560:\tlearn: 0.0265501\ttotal: 1.01s\tremaining: 790ms\n","561:\tlearn: 0.0265486\ttotal: 1.01s\tremaining: 789ms\n","562:\tlearn: 0.0265493\ttotal: 1.01s\tremaining: 788ms\n","563:\tlearn: 0.0265476\ttotal: 1.02s\tremaining: 787ms\n","564:\tlearn: 0.0394741\ttotal: 1.02s\tremaining: 785ms\n","565:\tlearn: 0.0264044\ttotal: 1.02s\tremaining: 783ms\n","566:\tlearn: 0.0265452\ttotal: 1.02s\tremaining: 782ms\n","567:\tlearn: 0.0265770\ttotal: 1.02s\tremaining: 780ms\n","568:\tlearn: 0.0265825\ttotal: 1.03s\tremaining: 778ms\n","569:\tlearn: 0.0265799\ttotal: 1.03s\tremaining: 778ms\n","570:\tlearn: 0.0265779\ttotal: 1.03s\tremaining: 776ms\n","571:\tlearn: 0.0265741\ttotal: 1.03s\tremaining: 774ms\n","572:\tlearn: 0.0265724\ttotal: 1.04s\tremaining: 774ms\n","573:\tlearn: 0.0265692\ttotal: 1.04s\tremaining: 774ms\n","574:\tlearn: 0.0265679\ttotal: 1.04s\tremaining: 772ms\n","575:\tlearn: 0.0265650\ttotal: 1.05s\tremaining: 771ms\n","576:\tlearn: 0.0265643\ttotal: 1.05s\tremaining: 769ms\n","577:\tlearn: 0.0265616\ttotal: 1.05s\tremaining: 769ms\n","578:\tlearn: 0.0265611\ttotal: 1.05s\tremaining: 767ms\n","579:\tlearn: 0.0265769\ttotal: 1.06s\tremaining: 765ms\n","580:\tlearn: 0.0265433\ttotal: 1.06s\tremaining: 763ms\n","581:\tlearn: 0.0265342\ttotal: 1.06s\tremaining: 763ms\n","582:\tlearn: 0.0265328\ttotal: 1.06s\tremaining: 761ms\n","583:\tlearn: 0.0265315\ttotal: 1.06s\tremaining: 759ms\n","584:\tlearn: 0.0265321\ttotal: 1.07s\tremaining: 757ms\n","585:\tlearn: 0.0265311\ttotal: 1.07s\tremaining: 755ms\n","586:\tlearn: 0.0265323\ttotal: 1.07s\tremaining: 755ms\n","587:\tlearn: 0.0265312\ttotal: 1.07s\tremaining: 753ms\n","588:\tlearn: 0.0265319\ttotal: 1.07s\tremaining: 750ms\n","589:\tlearn: 0.0265310\ttotal: 1.08s\tremaining: 748ms\n","590:\tlearn: 0.0265320\ttotal: 1.08s\tremaining: 746ms\n","591:\tlearn: 0.0265311\ttotal: 1.08s\tremaining: 744ms\n","592:\tlearn: 0.0265318\ttotal: 1.08s\tremaining: 742ms\n","593:\tlearn: 0.0265307\ttotal: 1.08s\tremaining: 740ms\n","594:\tlearn: 0.0265319\ttotal: 1.08s\tremaining: 738ms\n","595:\tlearn: 0.0265308\ttotal: 1.09s\tremaining: 736ms\n","596:\tlearn: 0.0265316\ttotal: 1.09s\tremaining: 735ms\n","597:\tlearn: 0.0265309\ttotal: 1.09s\tremaining: 733ms\n","598:\tlearn: 0.0265319\ttotal: 1.09s\tremaining: 731ms\n","599:\tlearn: 0.0265309\ttotal: 1.09s\tremaining: 729ms\n","600:\tlearn: 0.0265315\ttotal: 1.1s\tremaining: 728ms\n","601:\tlearn: 0.0265307\ttotal: 1.1s\tremaining: 726ms\n","602:\tlearn: 0.0265315\ttotal: 1.1s\tremaining: 727ms\n","603:\tlearn: 0.0265306\ttotal: 1.1s\tremaining: 725ms\n","604:\tlearn: 0.0265317\ttotal: 1.11s\tremaining: 723ms\n","605:\tlearn: 0.0265307\ttotal: 1.11s\tremaining: 722ms\n","606:\tlearn: 0.0265315\ttotal: 1.11s\tremaining: 720ms\n","607:\tlearn: 0.0265306\ttotal: 1.11s\tremaining: 718ms\n","608:\tlearn: 0.0265315\ttotal: 1.11s\tremaining: 716ms\n","609:\tlearn: 0.0265305\ttotal: 1.12s\tremaining: 714ms\n","610:\tlearn: 0.0265314\ttotal: 1.12s\tremaining: 712ms\n","611:\tlearn: 0.0265305\ttotal: 1.12s\tremaining: 710ms\n","612:\tlearn: 0.0265314\ttotal: 1.12s\tremaining: 708ms\n","613:\tlearn: 0.0265307\ttotal: 1.12s\tremaining: 706ms\n","614:\tlearn: 0.0265314\ttotal: 1.13s\tremaining: 704ms\n","615:\tlearn: 0.0265303\ttotal: 1.13s\tremaining: 702ms\n","616:\tlearn: 0.0265310\ttotal: 1.13s\tremaining: 700ms\n","617:\tlearn: 0.0265304\ttotal: 1.13s\tremaining: 699ms\n","618:\tlearn: 0.0265312\ttotal: 1.13s\tremaining: 697ms\n","619:\tlearn: 0.0265304\ttotal: 1.13s\tremaining: 695ms\n","620:\tlearn: 0.0265311\ttotal: 1.14s\tremaining: 693ms\n","621:\tlearn: 0.0265304\ttotal: 1.14s\tremaining: 691ms\n","622:\tlearn: 0.0265314\ttotal: 1.14s\tremaining: 689ms\n","623:\tlearn: 0.0265303\ttotal: 1.14s\tremaining: 687ms\n","624:\tlearn: 0.0265313\ttotal: 1.14s\tremaining: 685ms\n","625:\tlearn: 0.0265301\ttotal: 1.14s\tremaining: 683ms\n","626:\tlearn: 0.0265310\ttotal: 1.15s\tremaining: 681ms\n","627:\tlearn: 0.0265304\ttotal: 1.15s\tremaining: 679ms\n","628:\tlearn: 0.0265311\ttotal: 1.15s\tremaining: 677ms\n","629:\tlearn: 0.0265302\ttotal: 1.15s\tremaining: 675ms\n","630:\tlearn: 0.0265310\ttotal: 1.15s\tremaining: 673ms\n","631:\tlearn: 0.0265303\ttotal: 1.15s\tremaining: 671ms\n","632:\tlearn: 0.0265311\ttotal: 1.16s\tremaining: 670ms\n","633:\tlearn: 0.0265301\ttotal: 1.16s\tremaining: 668ms\n","634:\tlearn: 0.0265311\ttotal: 1.16s\tremaining: 666ms\n","635:\tlearn: 0.0265301\ttotal: 1.16s\tremaining: 664ms\n","636:\tlearn: 0.0265310\ttotal: 1.16s\tremaining: 662ms\n","637:\tlearn: 0.0265300\ttotal: 1.16s\tremaining: 660ms\n","638:\tlearn: 0.0265309\ttotal: 1.17s\tremaining: 659ms\n","639:\tlearn: 0.0265300\ttotal: 1.17s\tremaining: 657ms\n","640:\tlearn: 0.0265307\ttotal: 1.17s\tremaining: 655ms\n","641:\tlearn: 0.0265300\ttotal: 1.17s\tremaining: 653ms\n","642:\tlearn: 0.0265307\ttotal: 1.17s\tremaining: 651ms\n","643:\tlearn: 0.0265302\ttotal: 1.17s\tremaining: 649ms\n","644:\tlearn: 0.0265308\ttotal: 1.18s\tremaining: 647ms\n","645:\tlearn: 0.0265299\ttotal: 1.18s\tremaining: 645ms\n","646:\tlearn: 0.0265305\ttotal: 1.18s\tremaining: 643ms\n","647:\tlearn: 0.0265297\ttotal: 1.18s\tremaining: 641ms\n","648:\tlearn: 0.0265306\ttotal: 1.18s\tremaining: 640ms\n","649:\tlearn: 0.0265299\ttotal: 1.18s\tremaining: 638ms\n","650:\tlearn: 0.0265305\ttotal: 1.19s\tremaining: 636ms\n","651:\tlearn: 0.0265299\ttotal: 1.19s\tremaining: 634ms\n","652:\tlearn: 0.0265304\ttotal: 1.19s\tremaining: 632ms\n","653:\tlearn: 0.0265297\ttotal: 1.19s\tremaining: 630ms\n","654:\tlearn: 0.0265303\ttotal: 1.19s\tremaining: 628ms\n","655:\tlearn: 0.0265298\ttotal: 1.19s\tremaining: 627ms\n","656:\tlearn: 0.0265305\ttotal: 1.2s\tremaining: 625ms\n","657:\tlearn: 0.0265294\ttotal: 1.2s\tremaining: 623ms\n","658:\tlearn: 0.0265302\ttotal: 1.2s\tremaining: 621ms\n","659:\tlearn: 0.0265294\ttotal: 1.2s\tremaining: 619ms\n","660:\tlearn: 0.0265302\ttotal: 1.2s\tremaining: 617ms\n","661:\tlearn: 0.0265297\ttotal: 1.21s\tremaining: 615ms\n","662:\tlearn: 0.0265302\ttotal: 1.21s\tremaining: 615ms\n","663:\tlearn: 0.0265293\ttotal: 1.21s\tremaining: 613ms\n","664:\tlearn: 0.0265301\ttotal: 1.21s\tremaining: 611ms\n","665:\tlearn: 0.0265295\ttotal: 1.21s\tremaining: 609ms\n","666:\tlearn: 0.0265302\ttotal: 1.22s\tremaining: 607ms\n","667:\tlearn: 0.0265295\ttotal: 1.22s\tremaining: 606ms\n","668:\tlearn: 0.0265303\ttotal: 1.22s\tremaining: 604ms\n","669:\tlearn: 0.0265293\ttotal: 1.22s\tremaining: 602ms\n","670:\tlearn: 0.0265302\ttotal: 1.22s\tremaining: 600ms\n","671:\tlearn: 0.0265291\ttotal: 1.23s\tremaining: 598ms\n","672:\tlearn: 0.0265302\ttotal: 1.23s\tremaining: 596ms\n","673:\tlearn: 0.0265293\ttotal: 1.23s\tremaining: 594ms\n","674:\tlearn: 0.0265301\ttotal: 1.23s\tremaining: 592ms\n","675:\tlearn: 0.0265294\ttotal: 1.23s\tremaining: 590ms\n","676:\tlearn: 0.0265303\ttotal: 1.23s\tremaining: 588ms\n","677:\tlearn: 0.0265291\ttotal: 1.23s\tremaining: 586ms\n","678:\tlearn: 0.0265304\ttotal: 1.24s\tremaining: 584ms\n","679:\tlearn: 0.0265296\ttotal: 1.24s\tremaining: 582ms\n","680:\tlearn: 0.0265300\ttotal: 1.24s\tremaining: 580ms\n","681:\tlearn: 0.0265292\ttotal: 1.24s\tremaining: 578ms\n","682:\tlearn: 0.0265301\ttotal: 1.24s\tremaining: 576ms\n","683:\tlearn: 0.0265292\ttotal: 1.24s\tremaining: 575ms\n","684:\tlearn: 0.0265299\ttotal: 1.25s\tremaining: 574ms\n","685:\tlearn: 0.0265292\ttotal: 1.25s\tremaining: 572ms\n","686:\tlearn: 0.0265299\ttotal: 1.25s\tremaining: 570ms\n","687:\tlearn: 0.0265293\ttotal: 1.25s\tremaining: 568ms\n","688:\tlearn: 0.0265300\ttotal: 1.25s\tremaining: 566ms\n","689:\tlearn: 0.0265291\ttotal: 1.26s\tremaining: 564ms\n","690:\tlearn: 0.0265302\ttotal: 1.26s\tremaining: 564ms\n","691:\tlearn: 0.0265291\ttotal: 1.26s\tremaining: 562ms\n","692:\tlearn: 0.0265302\ttotal: 1.26s\tremaining: 560ms\n","693:\tlearn: 0.0265295\ttotal: 1.26s\tremaining: 558ms\n","694:\tlearn: 0.0265300\ttotal: 1.27s\tremaining: 556ms\n","695:\tlearn: 0.0265291\ttotal: 1.27s\tremaining: 554ms\n","696:\tlearn: 0.0265298\ttotal: 1.27s\tremaining: 552ms\n","697:\tlearn: 0.0265289\ttotal: 1.27s\tremaining: 551ms\n","698:\tlearn: 0.0265299\ttotal: 1.27s\tremaining: 549ms\n","699:\tlearn: 0.0265289\ttotal: 1.27s\tremaining: 547ms\n","700:\tlearn: 0.0265297\ttotal: 1.28s\tremaining: 545ms\n","701:\tlearn: 0.0265290\ttotal: 1.28s\tremaining: 543ms\n","702:\tlearn: 0.0265298\ttotal: 1.28s\tremaining: 541ms\n","703:\tlearn: 0.0265288\ttotal: 1.28s\tremaining: 539ms\n","704:\tlearn: 0.0265299\ttotal: 1.28s\tremaining: 537ms\n","705:\tlearn: 0.0265289\ttotal: 1.28s\tremaining: 535ms\n","706:\tlearn: 0.0265297\ttotal: 1.29s\tremaining: 533ms\n","707:\tlearn: 0.0265288\ttotal: 1.29s\tremaining: 531ms\n","708:\tlearn: 0.0265296\ttotal: 1.29s\tremaining: 529ms\n","709:\tlearn: 0.0265289\ttotal: 1.29s\tremaining: 527ms\n","710:\tlearn: 0.0265296\ttotal: 1.3s\tremaining: 527ms\n","711:\tlearn: 0.0265287\ttotal: 1.3s\tremaining: 526ms\n","712:\tlearn: 0.0265297\ttotal: 1.3s\tremaining: 524ms\n","713:\tlearn: 0.0265287\ttotal: 1.3s\tremaining: 523ms\n","714:\tlearn: 0.0265297\ttotal: 1.31s\tremaining: 521ms\n","715:\tlearn: 0.0265287\ttotal: 1.31s\tremaining: 519ms\n","716:\tlearn: 0.0265295\ttotal: 1.31s\tremaining: 517ms\n","717:\tlearn: 0.0265287\ttotal: 1.31s\tremaining: 515ms\n","718:\tlearn: 0.0265296\ttotal: 1.31s\tremaining: 513ms\n","719:\tlearn: 0.0265287\ttotal: 1.31s\tremaining: 511ms\n","720:\tlearn: 0.0265296\ttotal: 1.31s\tremaining: 509ms\n","721:\tlearn: 0.0265285\ttotal: 1.32s\tremaining: 507ms\n","722:\tlearn: 0.0265298\ttotal: 1.32s\tremaining: 505ms\n","723:\tlearn: 0.0265285\ttotal: 1.32s\tremaining: 503ms\n","724:\tlearn: 0.0265292\ttotal: 1.32s\tremaining: 501ms\n","725:\tlearn: 0.0265286\ttotal: 1.32s\tremaining: 499ms\n","726:\tlearn: 0.0265293\ttotal: 1.32s\tremaining: 497ms\n","727:\tlearn: 0.0265283\ttotal: 1.33s\tremaining: 495ms\n","728:\tlearn: 0.0265292\ttotal: 1.33s\tremaining: 494ms\n","729:\tlearn: 0.0265286\ttotal: 1.33s\tremaining: 492ms\n","730:\tlearn: 0.0265291\ttotal: 1.33s\tremaining: 490ms\n","731:\tlearn: 0.0265285\ttotal: 1.33s\tremaining: 488ms\n","732:\tlearn: 0.0265292\ttotal: 1.33s\tremaining: 486ms\n","733:\tlearn: 0.0265282\ttotal: 1.33s\tremaining: 484ms\n","734:\tlearn: 0.0265294\ttotal: 1.34s\tremaining: 482ms\n","735:\tlearn: 0.0265284\ttotal: 1.34s\tremaining: 480ms\n","736:\tlearn: 0.0265289\ttotal: 1.34s\tremaining: 478ms\n","737:\tlearn: 0.0265283\ttotal: 1.34s\tremaining: 476ms\n","738:\tlearn: 0.0265293\ttotal: 1.34s\tremaining: 474ms\n","739:\tlearn: 0.0265283\ttotal: 1.34s\tremaining: 472ms\n","740:\tlearn: 0.0265291\ttotal: 1.34s\tremaining: 470ms\n","741:\tlearn: 0.0265282\ttotal: 1.35s\tremaining: 469ms\n","742:\tlearn: 0.0265289\ttotal: 1.35s\tremaining: 467ms\n","743:\tlearn: 0.0265281\ttotal: 1.35s\tremaining: 465ms\n","744:\tlearn: 0.0265292\ttotal: 1.35s\tremaining: 463ms\n","745:\tlearn: 0.0265280\ttotal: 1.35s\tremaining: 461ms\n","746:\tlearn: 0.0265290\ttotal: 1.35s\tremaining: 459ms\n","747:\tlearn: 0.0265285\ttotal: 1.36s\tremaining: 457ms\n","748:\tlearn: 0.0265291\ttotal: 1.36s\tremaining: 455ms\n","749:\tlearn: 0.0265282\ttotal: 1.36s\tremaining: 454ms\n","750:\tlearn: 0.0265290\ttotal: 1.36s\tremaining: 452ms\n","751:\tlearn: 0.0265281\ttotal: 1.36s\tremaining: 450ms\n","752:\tlearn: 0.0265288\ttotal: 1.36s\tremaining: 448ms\n","753:\tlearn: 0.0265280\ttotal: 1.37s\tremaining: 446ms\n","754:\tlearn: 0.0265287\ttotal: 1.37s\tremaining: 444ms\n","755:\tlearn: 0.0265279\ttotal: 1.37s\tremaining: 442ms\n","756:\tlearn: 0.0265289\ttotal: 1.37s\tremaining: 440ms\n","757:\tlearn: 0.0265279\ttotal: 1.37s\tremaining: 438ms\n","758:\tlearn: 0.0265286\ttotal: 1.37s\tremaining: 436ms\n","759:\tlearn: 0.0265277\ttotal: 1.38s\tremaining: 435ms\n","760:\tlearn: 0.0265286\ttotal: 1.38s\tremaining: 433ms\n","761:\tlearn: 0.0265280\ttotal: 1.38s\tremaining: 431ms\n","762:\tlearn: 0.0265290\ttotal: 1.38s\tremaining: 429ms\n","763:\tlearn: 0.0265280\ttotal: 1.38s\tremaining: 427ms\n","764:\tlearn: 0.0265286\ttotal: 1.38s\tremaining: 425ms\n","765:\tlearn: 0.0265278\ttotal: 1.39s\tremaining: 423ms\n","766:\tlearn: 0.0265287\ttotal: 1.39s\tremaining: 421ms\n","767:\tlearn: 0.0265280\ttotal: 1.39s\tremaining: 419ms\n","768:\tlearn: 0.0265285\ttotal: 1.39s\tremaining: 418ms\n","769:\tlearn: 0.0265278\ttotal: 1.39s\tremaining: 416ms\n","770:\tlearn: 0.0265285\ttotal: 1.39s\tremaining: 414ms\n","771:\tlearn: 0.0265277\ttotal: 1.39s\tremaining: 412ms\n","772:\tlearn: 0.0265288\ttotal: 1.4s\tremaining: 410ms\n","773:\tlearn: 0.0265275\ttotal: 1.4s\tremaining: 408ms\n","774:\tlearn: 0.0265283\ttotal: 1.4s\tremaining: 406ms\n","775:\tlearn: 0.0265277\ttotal: 1.4s\tremaining: 404ms\n","776:\tlearn: 0.0265284\ttotal: 1.4s\tremaining: 402ms\n","777:\tlearn: 0.0265276\ttotal: 1.4s\tremaining: 401ms\n","778:\tlearn: 0.0265284\ttotal: 1.41s\tremaining: 399ms\n","779:\tlearn: 0.0265275\ttotal: 1.41s\tremaining: 397ms\n","780:\tlearn: 0.0265284\ttotal: 1.41s\tremaining: 395ms\n","781:\tlearn: 0.0265274\ttotal: 1.41s\tremaining: 394ms\n","782:\tlearn: 0.0265285\ttotal: 1.41s\tremaining: 392ms\n","783:\tlearn: 0.0265276\ttotal: 1.41s\tremaining: 390ms\n","784:\tlearn: 0.0265282\ttotal: 1.42s\tremaining: 388ms\n","785:\tlearn: 0.0265274\ttotal: 1.42s\tremaining: 386ms\n","786:\tlearn: 0.0265284\ttotal: 1.42s\tremaining: 384ms\n","787:\tlearn: 0.0265277\ttotal: 1.42s\tremaining: 382ms\n","788:\tlearn: 0.0265283\ttotal: 1.42s\tremaining: 381ms\n","789:\tlearn: 0.0265275\ttotal: 1.42s\tremaining: 379ms\n","790:\tlearn: 0.0265284\ttotal: 1.43s\tremaining: 377ms\n","791:\tlearn: 0.0265277\ttotal: 1.43s\tremaining: 375ms\n","792:\tlearn: 0.0265283\ttotal: 1.43s\tremaining: 373ms\n","793:\tlearn: 0.0265276\ttotal: 1.43s\tremaining: 371ms\n","794:\tlearn: 0.0265284\ttotal: 1.43s\tremaining: 369ms\n","795:\tlearn: 0.0265273\ttotal: 1.43s\tremaining: 367ms\n","796:\tlearn: 0.0265282\ttotal: 1.44s\tremaining: 366ms\n","797:\tlearn: 0.0265273\ttotal: 1.44s\tremaining: 364ms\n","798:\tlearn: 0.0265281\ttotal: 1.44s\tremaining: 362ms\n","799:\tlearn: 0.0265273\ttotal: 1.44s\tremaining: 360ms\n","800:\tlearn: 0.0265280\ttotal: 1.44s\tremaining: 358ms\n","801:\tlearn: 0.0265272\ttotal: 1.44s\tremaining: 356ms\n","802:\tlearn: 0.0265282\ttotal: 1.44s\tremaining: 354ms\n","803:\tlearn: 0.0265273\ttotal: 1.45s\tremaining: 353ms\n","804:\tlearn: 0.0265282\ttotal: 1.45s\tremaining: 351ms\n","805:\tlearn: 0.0265273\ttotal: 1.45s\tremaining: 349ms\n","806:\tlearn: 0.0265280\ttotal: 1.46s\tremaining: 350ms\n","807:\tlearn: 0.0265274\ttotal: 1.47s\tremaining: 348ms\n","808:\tlearn: 0.0265279\ttotal: 1.47s\tremaining: 346ms\n","809:\tlearn: 0.0265276\ttotal: 1.47s\tremaining: 345ms\n","810:\tlearn: 0.0265282\ttotal: 1.47s\tremaining: 343ms\n","811:\tlearn: 0.0265271\ttotal: 1.47s\tremaining: 341ms\n","812:\tlearn: 0.0265282\ttotal: 1.47s\tremaining: 339ms\n","813:\tlearn: 0.0265270\ttotal: 1.48s\tremaining: 337ms\n","814:\tlearn: 0.0265282\ttotal: 1.48s\tremaining: 335ms\n","815:\tlearn: 0.0265271\ttotal: 1.48s\tremaining: 333ms\n","816:\tlearn: 0.0265280\ttotal: 1.48s\tremaining: 331ms\n","817:\tlearn: 0.0265271\ttotal: 1.48s\tremaining: 330ms\n","818:\tlearn: 0.0265280\ttotal: 1.48s\tremaining: 328ms\n","819:\tlearn: 0.0265272\ttotal: 1.48s\tremaining: 326ms\n","820:\tlearn: 0.0265277\ttotal: 1.49s\tremaining: 324ms\n","821:\tlearn: 0.0265270\ttotal: 1.49s\tremaining: 322ms\n","822:\tlearn: 0.0265278\ttotal: 1.49s\tremaining: 320ms\n","823:\tlearn: 0.0265272\ttotal: 1.49s\tremaining: 319ms\n","824:\tlearn: 0.0265279\ttotal: 1.49s\tremaining: 317ms\n","825:\tlearn: 0.0265271\ttotal: 1.5s\tremaining: 315ms\n","826:\tlearn: 0.0265278\ttotal: 1.5s\tremaining: 313ms\n","827:\tlearn: 0.0265270\ttotal: 1.5s\tremaining: 312ms\n","828:\tlearn: 0.0265277\ttotal: 1.5s\tremaining: 310ms\n","829:\tlearn: 0.0265271\ttotal: 1.5s\tremaining: 308ms\n","830:\tlearn: 0.0265278\ttotal: 1.5s\tremaining: 306ms\n","831:\tlearn: 0.0265270\ttotal: 1.51s\tremaining: 304ms\n","832:\tlearn: 0.0265279\ttotal: 1.51s\tremaining: 303ms\n","833:\tlearn: 0.0265269\ttotal: 1.51s\tremaining: 301ms\n","834:\tlearn: 0.0265280\ttotal: 1.51s\tremaining: 299ms\n","835:\tlearn: 0.0265269\ttotal: 1.52s\tremaining: 298ms\n","836:\tlearn: 0.0265280\ttotal: 1.52s\tremaining: 296ms\n","837:\tlearn: 0.0265271\ttotal: 1.52s\tremaining: 294ms\n","838:\tlearn: 0.0265277\ttotal: 1.53s\tremaining: 294ms\n","839:\tlearn: 0.0265269\ttotal: 1.53s\tremaining: 292ms\n","840:\tlearn: 0.0265280\ttotal: 1.53s\tremaining: 290ms\n","841:\tlearn: 0.0265271\ttotal: 1.54s\tremaining: 288ms\n","842:\tlearn: 0.0265279\ttotal: 1.54s\tremaining: 287ms\n","843:\tlearn: 0.0265269\ttotal: 1.54s\tremaining: 285ms\n","844:\tlearn: 0.0265277\ttotal: 1.54s\tremaining: 283ms\n","845:\tlearn: 0.0265269\ttotal: 1.54s\tremaining: 281ms\n","846:\tlearn: 0.0265274\ttotal: 1.55s\tremaining: 281ms\n","847:\tlearn: 0.0265269\ttotal: 1.56s\tremaining: 279ms\n","848:\tlearn: 0.0265275\ttotal: 1.56s\tremaining: 277ms\n","849:\tlearn: 0.0265267\ttotal: 1.56s\tremaining: 275ms\n","850:\tlearn: 0.0265275\ttotal: 1.56s\tremaining: 274ms\n","851:\tlearn: 0.0265267\ttotal: 1.56s\tremaining: 272ms\n","852:\tlearn: 0.0265276\ttotal: 1.57s\tremaining: 270ms\n","853:\tlearn: 0.0265265\ttotal: 1.57s\tremaining: 268ms\n","854:\tlearn: 0.0265274\ttotal: 1.57s\tremaining: 266ms\n","855:\tlearn: 0.0265269\ttotal: 1.57s\tremaining: 264ms\n","856:\tlearn: 0.0265274\ttotal: 1.57s\tremaining: 263ms\n","857:\tlearn: 0.0265267\ttotal: 1.57s\tremaining: 261ms\n","858:\tlearn: 0.0265272\ttotal: 1.58s\tremaining: 259ms\n","859:\tlearn: 0.0265265\ttotal: 1.58s\tremaining: 257ms\n","860:\tlearn: 0.0265275\ttotal: 1.58s\tremaining: 256ms\n","861:\tlearn: 0.0265264\ttotal: 1.58s\tremaining: 254ms\n","862:\tlearn: 0.0265274\ttotal: 1.59s\tremaining: 253ms\n","863:\tlearn: 0.0265263\ttotal: 1.59s\tremaining: 251ms\n","864:\tlearn: 0.0265273\ttotal: 1.6s\tremaining: 249ms\n","865:\tlearn: 0.0265265\ttotal: 1.6s\tremaining: 247ms\n","866:\tlearn: 0.0265272\ttotal: 1.6s\tremaining: 245ms\n","867:\tlearn: 0.0265263\ttotal: 1.6s\tremaining: 244ms\n","868:\tlearn: 0.0265274\ttotal: 1.6s\tremaining: 242ms\n","869:\tlearn: 0.0265268\ttotal: 1.6s\tremaining: 240ms\n","870:\tlearn: 0.0265271\ttotal: 1.61s\tremaining: 238ms\n","871:\tlearn: 0.0265264\ttotal: 1.61s\tremaining: 236ms\n","872:\tlearn: 0.0265272\ttotal: 1.61s\tremaining: 235ms\n","873:\tlearn: 0.0265264\ttotal: 1.61s\tremaining: 233ms\n","874:\tlearn: 0.0265272\ttotal: 1.62s\tremaining: 231ms\n","875:\tlearn: 0.0265264\ttotal: 1.62s\tremaining: 229ms\n","876:\tlearn: 0.0265270\ttotal: 1.62s\tremaining: 227ms\n","877:\tlearn: 0.0265264\ttotal: 1.62s\tremaining: 225ms\n","878:\tlearn: 0.0265273\ttotal: 1.62s\tremaining: 224ms\n","879:\tlearn: 0.0265263\ttotal: 1.63s\tremaining: 222ms\n","880:\tlearn: 0.0265271\ttotal: 1.63s\tremaining: 220ms\n","881:\tlearn: 0.0265263\ttotal: 1.63s\tremaining: 218ms\n","882:\tlearn: 0.0265271\ttotal: 1.63s\tremaining: 217ms\n","883:\tlearn: 0.0265262\ttotal: 1.64s\tremaining: 215ms\n","884:\tlearn: 0.0265269\ttotal: 1.64s\tremaining: 213ms\n","885:\tlearn: 0.0265264\ttotal: 1.64s\tremaining: 211ms\n","886:\tlearn: 0.0265272\ttotal: 1.64s\tremaining: 209ms\n","887:\tlearn: 0.0265261\ttotal: 1.64s\tremaining: 207ms\n","888:\tlearn: 0.0265272\ttotal: 1.65s\tremaining: 206ms\n","889:\tlearn: 0.0265260\ttotal: 1.65s\tremaining: 204ms\n","890:\tlearn: 0.0265270\ttotal: 1.65s\tremaining: 202ms\n","891:\tlearn: 0.0265261\ttotal: 1.65s\tremaining: 200ms\n","892:\tlearn: 0.0265275\ttotal: 1.66s\tremaining: 199ms\n","893:\tlearn: 0.0265262\ttotal: 1.66s\tremaining: 197ms\n","894:\tlearn: 0.0265273\ttotal: 1.66s\tremaining: 195ms\n","895:\tlearn: 0.0265263\ttotal: 1.66s\tremaining: 193ms\n","896:\tlearn: 0.0265268\ttotal: 1.67s\tremaining: 191ms\n","897:\tlearn: 0.0265261\ttotal: 1.67s\tremaining: 189ms\n","898:\tlearn: 0.0265271\ttotal: 1.67s\tremaining: 188ms\n","899:\tlearn: 0.0265260\ttotal: 1.67s\tremaining: 186ms\n","900:\tlearn: 0.0265269\ttotal: 1.68s\tremaining: 184ms\n","901:\tlearn: 0.0265263\ttotal: 1.68s\tremaining: 182ms\n","902:\tlearn: 0.0265271\ttotal: 1.68s\tremaining: 181ms\n","903:\tlearn: 0.0265259\ttotal: 1.68s\tremaining: 179ms\n","904:\tlearn: 0.0265269\ttotal: 1.69s\tremaining: 177ms\n","905:\tlearn: 0.0265259\ttotal: 1.69s\tremaining: 175ms\n","906:\tlearn: 0.0265266\ttotal: 1.69s\tremaining: 174ms\n","907:\tlearn: 0.0265257\ttotal: 1.7s\tremaining: 172ms\n","908:\tlearn: 0.0265268\ttotal: 1.7s\tremaining: 170ms\n","909:\tlearn: 0.0265262\ttotal: 1.7s\tremaining: 168ms\n","910:\tlearn: 0.0265269\ttotal: 1.7s\tremaining: 166ms\n","911:\tlearn: 0.0265260\ttotal: 1.7s\tremaining: 164ms\n","912:\tlearn: 0.0265267\ttotal: 1.71s\tremaining: 163ms\n","913:\tlearn: 0.0265262\ttotal: 1.71s\tremaining: 161ms\n","914:\tlearn: 0.0265268\ttotal: 1.71s\tremaining: 159ms\n","915:\tlearn: 0.0265257\ttotal: 1.72s\tremaining: 157ms\n","916:\tlearn: 0.0265266\ttotal: 1.72s\tremaining: 155ms\n","917:\tlearn: 0.0265258\ttotal: 1.72s\tremaining: 153ms\n","918:\tlearn: 0.0265269\ttotal: 1.72s\tremaining: 152ms\n","919:\tlearn: 0.0265260\ttotal: 1.72s\tremaining: 150ms\n","920:\tlearn: 0.0265268\ttotal: 1.73s\tremaining: 148ms\n","921:\tlearn: 0.0265258\ttotal: 1.73s\tremaining: 146ms\n","922:\tlearn: 0.0265266\ttotal: 1.73s\tremaining: 145ms\n","923:\tlearn: 0.0265259\ttotal: 1.74s\tremaining: 143ms\n","924:\tlearn: 0.0265267\ttotal: 1.74s\tremaining: 141ms\n","925:\tlearn: 0.0265261\ttotal: 1.74s\tremaining: 139ms\n","926:\tlearn: 0.0265267\ttotal: 1.74s\tremaining: 137ms\n","927:\tlearn: 0.0265258\ttotal: 1.74s\tremaining: 135ms\n","928:\tlearn: 0.0265266\ttotal: 1.75s\tremaining: 133ms\n","929:\tlearn: 0.0265259\ttotal: 1.75s\tremaining: 132ms\n","930:\tlearn: 0.0265266\ttotal: 1.75s\tremaining: 130ms\n","931:\tlearn: 0.0265260\ttotal: 1.75s\tremaining: 128ms\n","932:\tlearn: 0.0265268\ttotal: 1.75s\tremaining: 126ms\n","933:\tlearn: 0.0265258\ttotal: 1.75s\tremaining: 124ms\n","934:\tlearn: 0.0265265\ttotal: 1.76s\tremaining: 122ms\n","935:\tlearn: 0.0265258\ttotal: 1.76s\tremaining: 120ms\n","936:\tlearn: 0.0265265\ttotal: 1.76s\tremaining: 118ms\n","937:\tlearn: 0.0265258\ttotal: 1.76s\tremaining: 116ms\n","938:\tlearn: 0.0265264\ttotal: 1.76s\tremaining: 114ms\n","939:\tlearn: 0.0265254\ttotal: 1.76s\tremaining: 113ms\n","940:\tlearn: 0.0265263\ttotal: 1.76s\tremaining: 111ms\n","941:\tlearn: 0.0265255\ttotal: 1.77s\tremaining: 109ms\n","942:\tlearn: 0.0265262\ttotal: 1.77s\tremaining: 107ms\n","943:\tlearn: 0.0265253\ttotal: 1.77s\tremaining: 105ms\n","944:\tlearn: 0.0265268\ttotal: 1.77s\tremaining: 103ms\n","945:\tlearn: 0.0265258\ttotal: 1.77s\tremaining: 101ms\n","946:\tlearn: 0.0265264\ttotal: 1.77s\tremaining: 99.3ms\n","947:\tlearn: 0.0265257\ttotal: 1.78s\tremaining: 97.5ms\n","948:\tlearn: 0.0265264\ttotal: 1.78s\tremaining: 95.7ms\n","949:\tlearn: 0.0265258\ttotal: 1.78s\tremaining: 93.8ms\n","950:\tlearn: 0.0265264\ttotal: 1.78s\tremaining: 91.9ms\n","951:\tlearn: 0.0265258\ttotal: 1.78s\tremaining: 90ms\n","952:\tlearn: 0.0265264\ttotal: 1.79s\tremaining: 88.1ms\n","953:\tlearn: 0.0265259\ttotal: 1.79s\tremaining: 86.3ms\n","954:\tlearn: 0.0265264\ttotal: 1.79s\tremaining: 84.4ms\n","955:\tlearn: 0.0265255\ttotal: 1.79s\tremaining: 82.5ms\n","956:\tlearn: 0.0265263\ttotal: 1.79s\tremaining: 80.6ms\n","957:\tlearn: 0.0265254\ttotal: 1.8s\tremaining: 78.7ms\n","958:\tlearn: 0.0265262\ttotal: 1.8s\tremaining: 76.9ms\n","959:\tlearn: 0.0265254\ttotal: 1.8s\tremaining: 75ms\n","960:\tlearn: 0.0265260\ttotal: 1.8s\tremaining: 73.1ms\n","961:\tlearn: 0.0265254\ttotal: 1.8s\tremaining: 71.2ms\n","962:\tlearn: 0.0265264\ttotal: 1.8s\tremaining: 69.4ms\n","963:\tlearn: 0.0265253\ttotal: 1.81s\tremaining: 67.5ms\n","964:\tlearn: 0.0265263\ttotal: 1.81s\tremaining: 65.6ms\n","965:\tlearn: 0.0265257\ttotal: 1.81s\tremaining: 63.7ms\n","966:\tlearn: 0.0265261\ttotal: 1.81s\tremaining: 61.8ms\n","967:\tlearn: 0.0265255\ttotal: 1.81s\tremaining: 59.9ms\n","968:\tlearn: 0.0265261\ttotal: 1.81s\tremaining: 58.1ms\n","969:\tlearn: 0.0265254\ttotal: 1.82s\tremaining: 56.2ms\n","970:\tlearn: 0.0265263\ttotal: 1.82s\tremaining: 54.3ms\n","971:\tlearn: 0.0265253\ttotal: 1.82s\tremaining: 52.4ms\n","972:\tlearn: 0.0265262\ttotal: 1.82s\tremaining: 50.5ms\n","973:\tlearn: 0.0265251\ttotal: 1.83s\tremaining: 48.8ms\n","974:\tlearn: 0.0265260\ttotal: 1.83s\tremaining: 46.9ms\n","975:\tlearn: 0.0265253\ttotal: 1.83s\tremaining: 45ms\n","976:\tlearn: 0.0265262\ttotal: 1.83s\tremaining: 43.1ms\n","977:\tlearn: 0.0265250\ttotal: 1.83s\tremaining: 41.3ms\n","978:\tlearn: 0.0265260\ttotal: 1.84s\tremaining: 39.4ms\n","979:\tlearn: 0.0265251\ttotal: 1.84s\tremaining: 37.5ms\n","980:\tlearn: 0.0265260\ttotal: 1.84s\tremaining: 35.6ms\n","981:\tlearn: 0.0265254\ttotal: 1.84s\tremaining: 33.8ms\n","982:\tlearn: 0.0265261\ttotal: 1.84s\tremaining: 31.9ms\n","983:\tlearn: 0.0265251\ttotal: 1.85s\tremaining: 30.1ms\n","984:\tlearn: 0.0265260\ttotal: 1.85s\tremaining: 28.2ms\n","985:\tlearn: 0.0265254\ttotal: 1.85s\tremaining: 26.3ms\n","986:\tlearn: 0.0265260\ttotal: 1.86s\tremaining: 24.5ms\n","987:\tlearn: 0.0265249\ttotal: 1.86s\tremaining: 22.6ms\n","988:\tlearn: 0.0265259\ttotal: 1.86s\tremaining: 20.7ms\n","989:\tlearn: 0.0265252\ttotal: 1.86s\tremaining: 18.8ms\n","990:\tlearn: 0.0265258\ttotal: 1.86s\tremaining: 16.9ms\n","991:\tlearn: 0.0265250\ttotal: 1.86s\tremaining: 15ms\n","992:\tlearn: 0.0265262\ttotal: 1.87s\tremaining: 13.2ms\n","993:\tlearn: 0.0265251\ttotal: 1.87s\tremaining: 11.3ms\n","994:\tlearn: 0.0265259\ttotal: 1.87s\tremaining: 9.4ms\n","995:\tlearn: 0.0265251\ttotal: 1.87s\tremaining: 7.52ms\n","996:\tlearn: 0.0265257\ttotal: 1.88s\tremaining: 5.66ms\n","997:\tlearn: 0.0265249\ttotal: 1.89s\tremaining: 3.78ms\n","998:\tlearn: 0.0265260\ttotal: 1.89s\tremaining: 1.89ms\n","999:\tlearn: 0.0265252\ttotal: 1.89s\tremaining: 0us\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.00      0.00      0.00         7\n","           1       0.93      0.94      0.93        97\n","\n","    accuracy                           0.88       104\n","   macro avg       0.46      0.47      0.47       104\n","weighted avg       0.87      0.88      0.87       104\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 6 91]]\n"]}],"source":["from catboost import CatBoostClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Initialize CatBoost classifier\n","catboost_clf = CatBoostClassifier(learning_rate=3)\n","\n","# Fit the model on the training data\n","catboost_clf.fit(x_train, y_train)\n","\n","# Predict on the test set\n","y_pred = catboost_clf.predict(x_test)\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","output_embedded_package_id":"1A_G4uXlYoyHwAn7rxZWZ78Z2dtaLFia2"},"id":"uLaPk9Up5Cox","outputId":"f5018dcc-08ab-481f-bb0c-c81386165835"},"outputs":[],"source":["from catboost import CatBoostClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Initialize CatBoost classifier\n","catboost_clf = CatBoostClassifier()\n","\n","# Tentukan daftar hyperparameter yang ingin diuji\n","param_grid = {\n","    'learning_rate': [1, 2, 3, 4, 5, 6, 7],\n","    'depth': [4, 6, 8],\n","}\n","\n","# Inisialisasi GridSearchCV dengan model, hyperparameter grid, dan jumlah lipatan cross-validation\n","grid_search_cb = GridSearchCV(catboost_clf, param_grid, cv=5, scoring='recall')\n","\n","# Latih model dengan melakukan pencarian grid\n","grid_search_cb.fit(x_train, y_train)\n","\n","# Ambil model dengan kombinasi hyperparameter terbaik\n","best_catboost = grid_search_cb.best_estimator_\n","\n","# Prediksi menggunakan model yang dioptimalkan\n","y_pred = best_catboost.predict(x_test)\n","\n","# Ubah tipe data label prediksi menjadi string\n","y_pred_labels = y_pred.astype(str)\n","y_test_labels = y_test.astype(str)\n","\n","# Tampilkan hasil evaluasi\n","print(\"Best Parameters:\", grid_search_cb.best_params_)\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test_labels, y_pred_labels))\n","\n","print(\"\\nConfusion Matrix:\")\n","print(confusion_matrix(y_test_labels, y_pred_labels))"]},{"cell_type":"markdown","metadata":{"id":"epW3YeCL1Uuo"},"source":["### 3.10 ADABOOST"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"JWiZyN6Mzs8n"},"outputs":[{"name":"stdout","output_type":"stream","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.00      0.00      0.00         7\n","           1       0.93      0.97      0.95        97\n","\n","    accuracy                           0.90       104\n","   macro avg       0.47      0.48      0.47       104\n","weighted avg       0.87      0.90      0.89       104\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 3 94]]\n"]}],"source":["from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","\n","ada_clf = AdaBoostClassifier(learning_rate=2, random_state=2022)\n","\n","ada_clf.fit(x_train, y_train)\n","\n","\n","y_pred = ada_clf.predict(x_test)\n","\n","\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"_w5TVXVZ2snW"},"outputs":[{"name":"stdout","output_type":"stream","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.00      0.00      0.00         7\n","           1       0.93      0.99      0.96        97\n","\n","    accuracy                           0.92       104\n","   macro avg       0.47      0.49      0.48       104\n","weighted avg       0.87      0.92      0.90       104\n","\n","Confusion Matrix:\n","[[ 0  7]\n"," [ 1 96]]\n","Best parameters found:  {'learning_rate': 1}\n"]}],"source":["from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.model_selection import GridSearchCV\n","import numpy as np\n","\n","\n","# Define the parameter grid for hyperparameter tuning\n","param_grid = {\n","    'learning_rate': [1, 2, 3,]\n","}\n","\n","# Initialize AdaBoost classifier\n","ada_clf = AdaBoostClassifier(random_state=2022)\n","\n","# Initialize GridSearchCV with recall scoring\n","grid_search = GridSearchCV(estimator=ada_clf, param_grid=param_grid, cv=5, scoring='recall', n_jobs=-1)\n","\n","# Fit the model on the training data\n","grid_search.fit(x_train, y_train)\n","\n","# Get the best estimator\n","best_ada_clf = grid_search.best_estimator_\n","\n","# Predict on the test set\n","y_pred = best_ada_clf.predict(x_test)\n","\n","\n","# Evaluate the model\n","print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))\n","\n","# Print the best parameters\n","print(\"Best parameters found: \", grid_search.best_params_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"6EL38t5o-Xf3"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"machine_shape":"hm","name":"","provenance":[{"file_id":"1-UEjH--Bmi8SwN03v2SHyZQ-lASMqRNG","timestamp":1734087480464},{"file_id":"1nEpqDi_JN1JHk--U1GLsrL6pbXqkF_nL","timestamp":1733903310707},{"file_id":"1Ld8dEQoN0bF4biGggVwNDW3cAZb41PPJ","timestamp":1730640301325},{"file_id":"1uuho0IAtT46r750cVDCg9vSi4xNmIUay","timestamp":1730450001011},{"file_id":"1uP7zbbJPoPSfkipVWqJ3_jD2JkFPfv7Z","timestamp":1729776836588},{"file_id":"1Y-KhE6vBw2jKyh0ecWDXxmdhHEKbGwgH","timestamp":1729155646922},{"file_id":"1W4PKx_ca35LQVOJ_EeEdKu7X6wP4l4jP","timestamp":1728197982292},{"file_id":"1EUFw3gYgJOwKQ2E1NiEQKydyVjJa_3zC","timestamp":1725616182206}],"toc_visible":true,"version":""},"gpuClass":"premium","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}